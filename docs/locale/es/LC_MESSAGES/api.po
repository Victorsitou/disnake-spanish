# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2021, Rapptz, 2021-present, EQUENOS
# This file is distributed under the same license as the disnake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: disnake 2.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-01 22:36-0300\n"
"PO-Revision-Date: 2021-11-02 21:27-0300\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api.rst:4
msgid "API Reference"
msgstr "Referencia de API"

#: ../../api.rst:6
msgid "The following section outlines the API of disnake."
msgstr ""

#: ../../api.rst:10
msgid ""
"This module uses the Python logging module to log diagnostic and errors "
"in an output independent way.  If the logging module is not configured, "
"these logs will not be output anywhere.  See :ref:`logging_setup` for "
"more information on how to set up and use the logging module with "
"disnake."
msgstr ""

#: ../../api.rst:17
msgid "Version Related Info"
msgstr ""

#: ../../api.rst:19
msgid ""
"There are two main ways to query version information about the library. "
"For guarantees, check :ref:`version_guarantees`."
msgstr ""

#: ../../api.rst:23
msgid "A named tuple that is similar to :obj:`py:sys.version_info`."
msgstr ""

#: ../../api.rst:25
msgid ""
"Just like :obj:`py:sys.version_info` the valid values for "
"``releaselevel`` are 'alpha', 'beta', 'candidate' and 'final'."
msgstr ""

#: ../../api.rst:30
msgid ""
"A string representation of the version. e.g. ``'1.0.0rc1'``. This is "
"based off of :pep:`440`."
msgstr ""

#: ../../api.rst:34
msgid "Clients"
msgstr ""

#: ../../api.rst:37
msgid "Client"
msgstr ""

#: disnake.client.Client:1 of
msgid ""
"Represents a client connection that connects to Discord. This class is "
"used to interact with the Discord WebSocket and API."
msgstr ""

#: disnake.client.Client:4 of
msgid "A number of options can be passed to the :class:`Client`."
msgstr ""

#: ../../api.rst disnake.abc.Connectable.connect disnake.abc.GuildChannel.clone
#: disnake.abc.GuildChannel.create_invite disnake.abc.GuildChannel.delete
#: disnake.abc.GuildChannel.move disnake.abc.GuildChannel.overwrites_for
#: disnake.abc.GuildChannel.permissions_for
#: disnake.abc.GuildChannel.set_permissions
#: disnake.abc.Messageable.fetch_message disnake.abc.Messageable.history
#: disnake.abc.Messageable.send disnake.activity.Game
#: disnake.app_commands.GuildApplicationCommandPermissions.edit
#: disnake.app_commands.Option disnake.app_commands.OptionChoice
#: disnake.app_commands.PartialGuildApplicationCommandPermissions
#: disnake.app_commands.SlashCommand
#: disnake.app_commands.UnresolvedGuildApplicationCommandPermissions
#: disnake.app_commands.UnresolvedGuildApplicationCommandPermissions.resolve
#: disnake.asset.Asset.replace disnake.asset.Asset.with_format
#: disnake.asset.Asset.with_size disnake.asset.Asset.with_static_format
#: disnake.asset.AssetMixin.save disnake.channel.CategoryChannel.clone
#: disnake.channel.CategoryChannel.edit disnake.channel.CategoryChannel.move
#: disnake.channel.DMChannel.get_partial_message
#: disnake.channel.DMChannel.permissions_for
#: disnake.channel.GroupChannel.permissions_for
#: disnake.channel.PartialMessageable.get_partial_message
#: disnake.channel.StageChannel.clone
#: disnake.channel.StageChannel.create_instance
#: disnake.channel.StageChannel.edit disnake.channel.StoreChannel.clone
#: disnake.channel.StoreChannel.edit
#: disnake.channel.StoreChannel.permissions_for
#: disnake.channel.TextChannel.archived_threads
#: disnake.channel.TextChannel.clone disnake.channel.TextChannel.create_thread
#: disnake.channel.TextChannel.create_webhook
#: disnake.channel.TextChannel.delete_messages disnake.channel.TextChannel.edit
#: disnake.channel.TextChannel.follow
#: disnake.channel.TextChannel.get_partial_message
#: disnake.channel.TextChannel.get_thread
#: disnake.channel.TextChannel.permissions_for
#: disnake.channel.TextChannel.purge
#: disnake.channel.VocalGuildChannel.permissions_for
#: disnake.channel.VoiceChannel.clone disnake.channel.VoiceChannel.edit
#: disnake.client.Client disnake.client.Client.add_view
#: disnake.client.Client.before_identify_hook
#: disnake.client.Client.bulk_edit_command_permissions
#: disnake.client.Client.bulk_fetch_command_permissions
#: disnake.client.Client.bulk_overwrite_global_commands
#: disnake.client.Client.bulk_overwrite_guild_commands
#: disnake.client.Client.change_presence disnake.client.Client.connect
#: disnake.client.Client.create_dm disnake.client.Client.create_global_command
#: disnake.client.Client.create_guild
#: disnake.client.Client.create_guild_command
#: disnake.client.Client.delete_global_command
#: disnake.client.Client.delete_guild_command
#: disnake.client.Client.delete_invite
#: disnake.client.Client.edit_command_permissions
#: disnake.client.Client.edit_global_command
#: disnake.client.Client.edit_guild_command
#: disnake.client.Client.fetch_command_permissions
#: disnake.client.Client.fetch_global_command disnake.client.Client.fetch_guild
#: disnake.client.Client.fetch_guild_command
#: disnake.client.Client.fetch_guild_commands
#: disnake.client.Client.fetch_guilds disnake.client.Client.fetch_invite
#: disnake.client.Client.fetch_stage_instance
#: disnake.client.Client.fetch_template disnake.client.Client.fetch_user
#: disnake.client.Client.fetch_widget disnake.client.Client.get_channel
#: disnake.client.Client.get_emoji disnake.client.Client.get_global_command
#: disnake.client.Client.get_global_command_named
#: disnake.client.Client.get_guild
#: disnake.client.Client.get_guild_application_commands
#: disnake.client.Client.get_guild_command
#: disnake.client.Client.get_guild_command_named
#: disnake.client.Client.get_guild_message_commands
#: disnake.client.Client.get_guild_slash_commands
#: disnake.client.Client.get_guild_user_commands
#: disnake.client.Client.get_message disnake.client.Client.get_or_fetch_user
#: disnake.client.Client.get_partial_messageable
#: disnake.client.Client.get_stage_instance disnake.client.Client.get_user
#: disnake.client.Client.login disnake.client.Client.wait_for
#: disnake.colour.Colour.random disnake.embeds.Embed.add_field
#: disnake.embeds.Embed.from_dict disnake.embeds.Embed.insert_field_at
#: disnake.embeds.Embed.remove_field disnake.embeds.Embed.set_author
#: disnake.embeds.Embed.set_field_at disnake.embeds.Embed.set_footer
#: disnake.embeds.Embed.set_image disnake.embeds.Embed.set_thumbnail
#: disnake.emoji.Emoji.delete disnake.emoji.Emoji.edit
#: disnake.flags.MemberCacheFlags.from_intents disnake.guild.Guild.audit_logs
#: disnake.guild.Guild.ban disnake.guild.Guild.bulk_edit_command_permissions
#: disnake.guild.Guild.change_voice_state disnake.guild.Guild.chunk
#: disnake.guild.Guild.create_custom_emoji
#: disnake.guild.Guild.create_integration disnake.guild.Guild.create_role
#: disnake.guild.Guild.create_stage_channel disnake.guild.Guild.create_sticker
#: disnake.guild.Guild.create_template disnake.guild.Guild.create_text_channel
#: disnake.guild.Guild.create_voice_channel disnake.guild.Guild.delete_emoji
#: disnake.guild.Guild.delete_sticker disnake.guild.Guild.edit
#: disnake.guild.Guild.edit_command_permissions
#: disnake.guild.Guild.edit_role_positions disnake.guild.Guild.edit_widget
#: disnake.guild.Guild.estimate_pruned_members disnake.guild.Guild.fetch_ban
#: disnake.guild.Guild.fetch_command_permissions
#: disnake.guild.Guild.fetch_emoji disnake.guild.Guild.fetch_member
#: disnake.guild.Guild.fetch_members disnake.guild.Guild.fetch_sticker
#: disnake.guild.Guild.get_channel disnake.guild.Guild.get_channel_or_thread
#: disnake.guild.Guild.get_command disnake.guild.Guild.get_command_named
#: disnake.guild.Guild.get_member disnake.guild.Guild.get_member_named
#: disnake.guild.Guild.get_or_fetch_member disnake.guild.Guild.get_role
#: disnake.guild.Guild.get_stage_instance disnake.guild.Guild.get_thread
#: disnake.guild.Guild.kick disnake.guild.Guild.prune_members
#: disnake.guild.Guild.query_members disnake.guild.Guild.unban
#: disnake.integrations.Integration.delete
#: disnake.integrations.StreamIntegration.edit
#: disnake.interactions.base.Interaction.delete_original_message
#: disnake.interactions.base.Interaction.edit_original_message
#: disnake.interactions.base.Interaction.send
#: disnake.interactions.base.InteractionMessage.delete
#: disnake.interactions.base.InteractionMessage.edit
#: disnake.interactions.base.InteractionResponse.autocomplete
#: disnake.interactions.base.InteractionResponse.defer
#: disnake.interactions.base.InteractionResponse.edit_message
#: disnake.interactions.base.InteractionResponse.send_message
#: disnake.invite.Invite.delete disnake.member.Member.add_roles
#: disnake.member.Member.edit disnake.member.Member.get_role
#: disnake.member.Member.mentioned_in disnake.member.Member.move_to
#: disnake.member.Member.remove_roles disnake.message.Attachment.read
#: disnake.message.Attachment.save disnake.message.Attachment.to_file
#: disnake.message.Message.add_reaction disnake.message.Message.clear_reaction
#: disnake.message.Message.create_thread disnake.message.Message.delete
#: disnake.message.Message.edit disnake.message.Message.pin
#: disnake.message.Message.remove_reaction disnake.message.Message.to_reference
#: disnake.message.Message.unpin disnake.message.MessageReference.from_message
#: disnake.message.PartialMessage.edit disnake.opus.load_opus
#: disnake.partial_emoji.PartialEmoji.from_str
#: disnake.permissions.PermissionOverwrite
#: disnake.permissions.PermissionOverwrite.update
#: disnake.permissions.Permissions.update disnake.player.FFmpegOpusAudio
#: disnake.player.FFmpegOpusAudio.from_probe
#: disnake.player.FFmpegOpusAudio.probe disnake.player.FFmpegPCMAudio
#: disnake.player.PCMVolumeTransformer disnake.reaction.Reaction.remove
#: disnake.reaction.Reaction.users disnake.role.Role.delete
#: disnake.role.Role.edit disnake.shard.AutoShardedClient.change_presence
#: disnake.shard.AutoShardedClient.connect
#: disnake.stage_instance.StageInstance.delete
#: disnake.stage_instance.StageInstance.edit
#: disnake.sticker.GuildSticker.delete disnake.sticker.GuildSticker.edit
#: disnake.template.Template.create_guild disnake.template.Template.edit
#: disnake.threads.Thread.add_user disnake.threads.Thread.delete_messages
#: disnake.threads.Thread.edit disnake.threads.Thread.fetch_member
#: disnake.threads.Thread.get_partial_message
#: disnake.threads.Thread.permissions_for disnake.threads.Thread.purge
#: disnake.threads.Thread.remove_user disnake.ui.button.Button
#: disnake.ui.button.button disnake.ui.item.Item.callback
#: disnake.ui.select.Select disnake.ui.select.Select.add_option
#: disnake.ui.select.Select.append_option disnake.ui.select.select
#: disnake.ui.view.View disnake.ui.view.View.add_item
#: disnake.ui.view.View.from_message disnake.ui.view.View.interaction_check
#: disnake.ui.view.View.on_error disnake.ui.view.View.remove_item
#: disnake.user.BaseUser.mentioned_in disnake.user.ClientUser.edit
#: disnake.utils.as_chunks disnake.utils.escape_markdown
#: disnake.utils.escape_mentions disnake.utils.find disnake.utils.format_dt
#: disnake.utils.get disnake.utils.oauth_url disnake.utils.remove_markdown
#: disnake.utils.resolve_invite disnake.utils.resolve_template
#: disnake.utils.sleep_until disnake.utils.snowflake_time
#: disnake.voice_client.VoiceClient.move_to
#: disnake.voice_client.VoiceClient.play
#: disnake.voice_client.VoiceClient.send_audio_packet
#: disnake.voice_client.VoiceProtocol
#: disnake.voice_client.VoiceProtocol.connect
#: disnake.voice_client.VoiceProtocol.disconnect
#: disnake.voice_client.VoiceProtocol.on_voice_server_update
#: disnake.voice_client.VoiceProtocol.on_voice_state_update
#: disnake.webhook.async_.Webhook.delete
#: disnake.webhook.async_.Webhook.delete_message
#: disnake.webhook.async_.Webhook.edit
#: disnake.webhook.async_.Webhook.edit_message
#: disnake.webhook.async_.Webhook.fetch
#: disnake.webhook.async_.Webhook.fetch_message
#: disnake.webhook.async_.Webhook.from_url
#: disnake.webhook.async_.Webhook.partial disnake.webhook.async_.Webhook.send
#: disnake.webhook.async_.WebhookMessage.delete
#: disnake.webhook.async_.WebhookMessage.edit
#: disnake.webhook.sync.SyncWebhook.delete
#: disnake.webhook.sync.SyncWebhook.delete_message
#: disnake.webhook.sync.SyncWebhook.edit
#: disnake.webhook.sync.SyncWebhook.edit_message
#: disnake.webhook.sync.SyncWebhook.fetch
#: disnake.webhook.sync.SyncWebhook.fetch_message
#: disnake.webhook.sync.SyncWebhook.from_url
#: disnake.webhook.sync.SyncWebhook.partial
#: disnake.webhook.sync.SyncWebhook.send
#: disnake.webhook.sync.SyncWebhookMessage.delete
#: disnake.webhook.sync.SyncWebhookMessage.edit
#: disnake.widget.Widget.fetch_invite of
msgid "Parameters"
msgstr ""

#: disnake.client.Client:6 of
msgid ""
"The maximum number of messages to store in the internal message cache. "
"This defaults to ``1000``. Passing in ``None`` disables the message "
"cache.  .. versionchanged:: 1.3     Allow disabling the message cache and"
" change the default size to ``1000``."
msgstr ""

#: disnake.client.Client:6 of
msgid ""
"The maximum number of messages to store in the internal message cache. "
"This defaults to ``1000``. Passing in ``None`` disables the message "
"cache."
msgstr ""

#: disnake.client.Client:9 of
msgid "Allow disabling the message cache and change the default size to ``1000``."
msgstr ""

#: disnake.client.Client:12 of
msgid ""
"The :class:`asyncio.AbstractEventLoop` to use for asynchronous "
"operations. Defaults to ``None``, in which case the default event loop is"
" used via :func:`asyncio.get_event_loop()`."
msgstr ""

#: disnake.client.Client:16 of
msgid "The connector to use for connection pooling."
msgstr ""

#: disnake.client.Client:18 of
msgid "Proxy URL."
msgstr ""

#: disnake.client.Client:20 of
msgid "An object that represents proxy HTTP Basic Authorization."
msgstr ""

#: disnake.client.Client:22 of
msgid "Integer starting at ``0`` and less than :attr:`.shard_count`."
msgstr ""

#: disnake.client.Client:24 of
msgid "The total number of shards."
msgstr ""

#: disnake.Client.application_id:1 disnake.client.Client:26 of
msgid "The client's application ID."
msgstr ""

#: disnake.client.Client:28 of
msgid ""
"The intents that you want to enable for the session. This is a way of "
"disabling and enabling certain gateway events from triggering and being "
"sent. If not given, defaults to a regularly constructed :class:`Intents` "
"class.  .. versionadded:: 1.5"
msgstr ""

#: disnake.client.Client:28 of
msgid ""
"The intents that you want to enable for the session. This is a way of "
"disabling and enabling certain gateway events from triggering and being "
"sent. If not given, defaults to a regularly constructed :class:`Intents` "
"class."
msgstr ""

#: disnake.client.Client:34 of
msgid ""
"Allows for finer control over how the library caches members. If not "
"given, defaults to cache as much as possible with the currently selected "
"intents.  .. versionadded:: 1.5"
msgstr ""

#: disnake.client.Client:34 of
msgid ""
"Allows for finer control over how the library caches members. If not "
"given, defaults to cache as much as possible with the currently selected "
"intents."
msgstr ""

#: disnake.client.Client:40 of
msgid ""
"Indicates if :func:`.on_ready` should be delayed to chunk all guilds at "
"start-up if necessary. This operation is incredibly slow for large "
"amounts of guilds. The default is ``True`` if :attr:`Intents.members` is "
"``True``.  .. versionadded:: 1.5"
msgstr ""

#: disnake.client.Client:40 of
msgid ""
"Indicates if :func:`.on_ready` should be delayed to chunk all guilds at "
"start-up if necessary. This operation is incredibly slow for large "
"amounts of guilds. The default is ``True`` if :attr:`Intents.members` is "
"``True``."
msgstr ""

#: disnake.client.Client:47 of
msgid "A status to start your presence with upon logging on to Discord."
msgstr ""

#: disnake.client.Client:49 of
msgid "An activity to start your presence with upon logging on to Discord."
msgstr ""

#: disnake.client.Client:51 of
msgid ""
"Control how the client handles mentions by default on every message sent."
"  .. versionadded:: 1.4"
msgstr ""

#: disnake.client.Client:51 of
msgid "Control how the client handles mentions by default on every message sent."
msgstr ""

#: disnake.client.Client:55 of
msgid ""
"The maximum numbers of seconds before timing out and restarting the "
"WebSocket in the case of not receiving a HEARTBEAT_ACK. Useful if "
"processing the initial packets take too long to the point of "
"disconnecting you. The default timeout is 60 seconds."
msgstr ""

#: disnake.client.Client:60 of
msgid ""
"The maximum number of seconds to wait for the GUILD_CREATE stream to end "
"before preparing the member cache and firing READY. The default timeout "
"is 2 seconds.  .. versionadded:: 1.4"
msgstr ""

#: disnake.client.Client:60 of
msgid ""
"The maximum number of seconds to wait for the GUILD_CREATE stream to end "
"before preparing the member cache and firing READY. The default timeout "
"is 2 seconds."
msgstr ""

#: disnake.client.Client:65 of
msgid ""
"Whether to assume the system clock is unsynced. This applies to the "
"ratelimit handling code. If this is set to ``True``, the default, then "
"the library uses the time to reset a rate limit bucket given by Discord. "
"If this is ``False`` then your system clock is used to calculate how long"
" to sleep for. If this is set to ``False`` it is recommended to sync your"
" system clock to Google's NTP server.  .. versionadded:: 1.3"
msgstr ""

#: disnake.client.Client:65 of
msgid ""
"Whether to assume the system clock is unsynced. This applies to the "
"ratelimit handling code. If this is set to ``True``, the default, then "
"the library uses the time to reset a rate limit bucket given by Discord. "
"If this is ``False`` then your system clock is used to calculate how long"
" to sleep for. If this is set to ``False`` it is recommended to sync your"
" system clock to Google's NTP server."
msgstr ""

#: disnake.client.Client:73 of
msgid ""
"Whether to enable events that are useful only for debugging gateway "
"related information.  Right now this involves "
":func:`on_socket_raw_receive` and :func:`on_socket_raw_send`. If this is "
"``False`` then those events will not be dispatched (due to performance "
"considerations). To enable these events, this must be set to ``True``. "
"Defaults to ``False``.  .. versionadded:: 2.0"
msgstr ""

#: disnake.client.Client:73 of
msgid ""
"Whether to enable events that are useful only for debugging gateway "
"related information."
msgstr ""

#: disnake.client.Client:75 of
msgid ""
"Right now this involves :func:`on_socket_raw_receive` and "
":func:`on_socket_raw_send`. If this is ``False`` then those events will "
"not be dispatched (due to performance considerations). To enable these "
"events, this must be set to ``True``. Defaults to ``False``."
msgstr ""

#: disnake.client.Client:81 of
msgid ""
"The list of IDs of the guilds where you're going to test your app "
"commands. Defaults to ``None``, which means global registration of "
"commands across all guilds.  .. versionadded:: 2.1"
msgstr ""

#: disnake.client.Client:81 of
msgid ""
"The list of IDs of the guilds where you're going to test your app "
"commands. Defaults to ``None``, which means global registration of "
"commands across all guilds."
msgstr ""

#: disnake.client.Client:87 of
msgid ""
"Whether to enable automatic synchronization of application commands in "
"your code. Defaults to ``True``, which means that commands in API are "
"automatically synced with the commands specified in your code.  .. "
"versionadded:: 2.1"
msgstr ""

#: disnake.client.Client:87 of
msgid ""
"Whether to enable automatic synchronization of application commands in "
"your code. Defaults to ``True``, which means that commands in API are "
"automatically synced with the commands specified in your code."
msgstr ""

#: disnake.client.Client:93 of
msgid ""
"Whether to enable messages logging the synchronization process. Useful "
"for tracking the commands being registered in the API.  .. versionadded::"
" 2.1"
msgstr ""

#: disnake.client.Client:93 of
msgid ""
"Whether to enable messages logging the synchronization process. Useful "
"for tracking the commands being registered in the API."
msgstr ""

#: disnake.client.Client:101 of
msgid ""
"The websocket gateway the client is currently connected to. Could be "
"``None``."
msgstr ""

#: disnake.client.Client:105 of
msgid "The event loop that the client uses for asynchronous operations."
msgstr ""

#: ../../api.rst ../../docstring disnake.Activity.end
#: disnake.Activity.large_image_text disnake.Activity.large_image_url
#: disnake.Activity.small_image_text disnake.Activity.small_image_url
#: disnake.Activity.start disnake.AppInfo.cover_image disnake.AppInfo.guild
#: disnake.AppInfo.icon disnake.ApplicationCommandInteraction.filled_options
#: disnake.ApplicationCommandInteraction.options
#: disnake.ApplicationCommandInteraction.target
#: disnake.ApplicationFlags.embedded
#: disnake.ApplicationFlags.gateway_guild_members
#: disnake.ApplicationFlags.gateway_guild_members_limited
#: disnake.ApplicationFlags.gateway_message_content
#: disnake.ApplicationFlags.gateway_message_content_limited
#: disnake.ApplicationFlags.gateway_presence
#: disnake.ApplicationFlags.gateway_presence_limited
#: disnake.ApplicationFlags.verification_pending_guild_limit disnake.Asset.key
#: disnake.Asset.url disnake.AuditLogEntry.after disnake.AuditLogEntry.before
#: disnake.AuditLogEntry.category disnake.AuditLogEntry.changes
#: disnake.AuditLogEntry.created_at disnake.AutoShardedClient.latencies
#: disnake.AutoShardedClient.latency disnake.AutoShardedClient.shards
#: disnake.BaseActivity.created_at disnake.CategoryChannel.category
#: disnake.CategoryChannel.changed_roles disnake.CategoryChannel.channels
#: disnake.CategoryChannel.created_at disnake.CategoryChannel.mention
#: disnake.CategoryChannel.permissions_synced
#: disnake.CategoryChannel.stage_channels disnake.CategoryChannel.text_channels
#: disnake.CategoryChannel.type disnake.CategoryChannel.voice_channels
#: disnake.Client.activity disnake.Client.allowed_mentions
#: disnake.Client.application_flags disnake.Client.application_id
#: disnake.Client.cached_messages disnake.Client.emojis disnake.Client.guilds
#: disnake.Client.intents disnake.Client.latency
#: disnake.Client.persistent_views disnake.Client.private_channels
#: disnake.Client.stickers disnake.Client.user disnake.Client.users
#: disnake.Client.voice_clients disnake.ClientUser.accent_color
#: disnake.ClientUser.accent_colour disnake.ClientUser.avatar
#: disnake.ClientUser.banner disnake.ClientUser.color disnake.ClientUser.colour
#: disnake.ClientUser.created_at disnake.ClientUser.default_avatar
#: disnake.ClientUser.display_avatar disnake.ClientUser.display_name
#: disnake.ClientUser.mention disnake.ClientUser.public_flags disnake.Colour.b
#: disnake.Colour.g disnake.Colour.r disnake.CustomActivity.type
#: disnake.DMChannel.created_at disnake.DMChannel.type
#: disnake.DeletedReferencedMessage.channel_id
#: disnake.DeletedReferencedMessage.guild_id
#: disnake.DeletedReferencedMessage.id disnake.Embed.fields
#: disnake.Emoji.created_at disnake.Emoji.guild disnake.Emoji.roles
#: disnake.Emoji.url disnake.Game.end disnake.Game.start disnake.Game.type
#: disnake.GroupChannel.created_at disnake.GroupChannel.icon
#: disnake.GroupChannel.type disnake.Guild.banner disnake.Guild.bitrate_limit
#: disnake.Guild.categories disnake.Guild.channels disnake.Guild.chunked
#: disnake.Guild.created_at disnake.Guild.default_role
#: disnake.Guild.discovery_splash disnake.Guild.emoji_limit
#: disnake.Guild.filesize_limit disnake.Guild.icon disnake.Guild.large
#: disnake.Guild.me disnake.Guild.member_count disnake.Guild.members
#: disnake.Guild.owner disnake.Guild.premium_subscriber_role
#: disnake.Guild.premium_subscribers disnake.Guild.public_updates_channel
#: disnake.Guild.roles disnake.Guild.rules_channel disnake.Guild.self_role
#: disnake.Guild.shard_id disnake.Guild.splash disnake.Guild.stage_channels
#: disnake.Guild.stage_instances disnake.Guild.sticker_limit
#: disnake.Guild.system_channel disnake.Guild.system_channel_flags
#: disnake.Guild.text_channels disnake.Guild.threads
#: disnake.Guild.voice_channels disnake.Guild.voice_client
#: disnake.GuildSticker.guild disnake.Intents.bans disnake.Intents.dm_messages
#: disnake.Intents.dm_reactions disnake.Intents.dm_typing
#: disnake.Intents.emojis disnake.Intents.emojis_and_stickers
#: disnake.Intents.guild_messages disnake.Intents.guild_reactions
#: disnake.Intents.guild_typing disnake.Intents.guilds
#: disnake.Intents.integrations disnake.Intents.invites disnake.Intents.members
#: disnake.Intents.messages disnake.Intents.presences disnake.Intents.reactions
#: disnake.Intents.typing disnake.Intents.voice_states disnake.Intents.webhooks
#: disnake.Interaction.channel disnake.Interaction.followup
#: disnake.Interaction.guild disnake.Interaction.permissions
#: disnake.Interaction.response disnake.Invite.id disnake.Invite.url
#: disnake.Member.activity disnake.Member.color disnake.Member.colour
#: disnake.Member.desktop_status disnake.Member.display_avatar
#: disnake.Member.display_name disnake.Member.guild_avatar
#: disnake.Member.guild_permissions disnake.Member.mention
#: disnake.Member.mobile_status disnake.Member.raw_status disnake.Member.roles
#: disnake.Member.status disnake.Member.top_role disnake.Member.voice
#: disnake.Member.web_status disnake.MemberCacheFlags.joined
#: disnake.MemberCacheFlags.voice disnake.Message.clean_content
#: disnake.Message.created_at disnake.Message.edited_at
#: disnake.Message.jump_url disnake.Message.raw_channel_mentions
#: disnake.Message.raw_mentions disnake.Message.raw_role_mentions
#: disnake.Message.system_content disnake.MessageFlags.crossposted
#: disnake.MessageFlags.ephemeral disnake.MessageFlags.has_thread
#: disnake.MessageFlags.is_crossposted
#: disnake.MessageFlags.source_message_deleted
#: disnake.MessageFlags.suppress_embeds disnake.MessageFlags.urgent
#: disnake.MessageInteraction.component disnake.MessageInteraction.values
#: disnake.MessageReference.cached_message disnake.MessageReference.jump_url
#: disnake.Object.created_at disnake.PartialAppInfo.icon
#: disnake.PartialEmoji.created_at disnake.PartialEmoji.url
#: disnake.PartialInviteChannel.created_at disnake.PartialInviteChannel.mention
#: disnake.PartialInviteGuild.banner disnake.PartialInviteGuild.created_at
#: disnake.PartialInviteGuild.icon disnake.PartialInviteGuild.splash
#: disnake.PartialMessage.created_at disnake.PartialMessage.guild
#: disnake.PartialMessage.jump_url disnake.PartialWebhookGuild.icon
#: disnake.Permissions.add_reactions disnake.Permissions.administrator
#: disnake.Permissions.attach_files disnake.Permissions.ban_members
#: disnake.Permissions.change_nickname disnake.Permissions.connect
#: disnake.Permissions.create_instant_invite
#: disnake.Permissions.create_private_threads
#: disnake.Permissions.create_public_threads disnake.Permissions.deafen_members
#: disnake.Permissions.embed_links disnake.Permissions.external_emojis
#: disnake.Permissions.external_stickers disnake.Permissions.kick_members
#: disnake.Permissions.manage_channels disnake.Permissions.manage_emojis
#: disnake.Permissions.manage_emojis_and_stickers
#: disnake.Permissions.manage_events disnake.Permissions.manage_guild
#: disnake.Permissions.manage_messages disnake.Permissions.manage_nicknames
#: disnake.Permissions.manage_permissions disnake.Permissions.manage_roles
#: disnake.Permissions.manage_threads disnake.Permissions.manage_webhooks
#: disnake.Permissions.mention_everyone disnake.Permissions.move_members
#: disnake.Permissions.mute_members disnake.Permissions.priority_speaker
#: disnake.Permissions.read_message_history disnake.Permissions.read_messages
#: disnake.Permissions.request_to_speak disnake.Permissions.send_messages
#: disnake.Permissions.send_messages_in_threads
#: disnake.Permissions.send_tts_messages disnake.Permissions.speak
#: disnake.Permissions.stream disnake.Permissions.use_external_emojis
#: disnake.Permissions.use_external_stickers
#: disnake.Permissions.use_slash_commands
#: disnake.Permissions.use_voice_activation disnake.Permissions.view_audit_log
#: disnake.Permissions.view_channel disnake.Permissions.view_guild_insights
#: disnake.PublicUserFlags.bug_hunter
#: disnake.PublicUserFlags.bug_hunter_level_2
#: disnake.PublicUserFlags.discord_certified_moderator
#: disnake.PublicUserFlags.early_supporter
#: disnake.PublicUserFlags.early_verified_bot_developer
#: disnake.PublicUserFlags.hypesquad disnake.PublicUserFlags.hypesquad_balance
#: disnake.PublicUserFlags.hypesquad_bravery
#: disnake.PublicUserFlags.hypesquad_brilliance disnake.PublicUserFlags.partner
#: disnake.PublicUserFlags.staff disnake.PublicUserFlags.system
#: disnake.PublicUserFlags.team_user disnake.PublicUserFlags.verified_bot
#: disnake.PublicUserFlags.verified_bot_developer disnake.Role.color
#: disnake.Role.colour disnake.Role.created_at disnake.Role.emoji
#: disnake.Role.icon disnake.Role.members disnake.Role.mention
#: disnake.Role.permissions disnake.ShardInfo.latency disnake.Spotify.album
#: disnake.Spotify.album_cover_url disnake.Spotify.artist
#: disnake.Spotify.artists disnake.Spotify.color disnake.Spotify.colour
#: disnake.Spotify.created_at disnake.Spotify.duration disnake.Spotify.end
#: disnake.Spotify.name disnake.Spotify.party_id disnake.Spotify.start
#: disnake.Spotify.title disnake.Spotify.track_id disnake.Spotify.track_url
#: disnake.Spotify.type disnake.StageChannel.category
#: disnake.StageChannel.changed_roles disnake.StageChannel.created_at
#: disnake.StageChannel.instance disnake.StageChannel.listeners
#: disnake.StageChannel.members disnake.StageChannel.mention
#: disnake.StageChannel.moderators disnake.StageChannel.permissions_synced
#: disnake.StageChannel.requesting_to_speak disnake.StageChannel.speakers
#: disnake.StageChannel.type disnake.StageInstance.channel
#: disnake.Sticker.created_at disnake.StickerPack.banner
#: disnake.StoreChannel.category disnake.StoreChannel.changed_roles
#: disnake.StoreChannel.created_at disnake.StoreChannel.mention
#: disnake.StoreChannel.permissions_synced disnake.StoreChannel.type
#: disnake.StreamIntegration.expire_behavior disnake.Streaming.twitch_name
#: disnake.Streaming.type disnake.SyncWebhook.avatar
#: disnake.SyncWebhook.channel disnake.SyncWebhook.created_at
#: disnake.SyncWebhook.guild disnake.SyncWebhook.url
#: disnake.SystemChannelFlags.guild_reminder_notifications
#: disnake.SystemChannelFlags.join_notifications
#: disnake.SystemChannelFlags.premium_subscriptions disnake.Team.icon
#: disnake.Team.owner disnake.Template.url disnake.TextChannel.category
#: disnake.TextChannel.changed_roles disnake.TextChannel.created_at
#: disnake.TextChannel.members disnake.TextChannel.mention
#: disnake.TextChannel.permissions_synced disnake.TextChannel.threads
#: disnake.TextChannel.type disnake.Thread.created_at disnake.Thread.members
#: disnake.Thread.mention disnake.Thread.owner disnake.Thread.parent
#: disnake.Thread.type disnake.ThreadMember.thread disnake.User.accent_color
#: disnake.User.accent_colour disnake.User.avatar disnake.User.banner
#: disnake.User.color disnake.User.colour disnake.User.created_at
#: disnake.User.default_avatar disnake.User.display_avatar
#: disnake.User.display_name disnake.User.dm_channel disnake.User.mention
#: disnake.User.mutual_guilds disnake.User.public_flags
#: disnake.VoiceChannel.category disnake.VoiceChannel.changed_roles
#: disnake.VoiceChannel.created_at disnake.VoiceChannel.members
#: disnake.VoiceChannel.mention disnake.VoiceChannel.permissions_synced
#: disnake.VoiceChannel.type disnake.VoiceClient.average_latency
#: disnake.VoiceClient.guild disnake.VoiceClient.latency
#: disnake.VoiceClient.source disnake.VoiceClient.user disnake.Webhook.avatar
#: disnake.Webhook.channel disnake.Webhook.created_at disnake.Webhook.guild
#: disnake.Webhook.url disnake.Widget.created_at disnake.Widget.invite_url
#: disnake.Widget.json_url disnake.WidgetChannel.created_at
#: disnake.WidgetChannel.mention disnake.WidgetMember.accent_color
#: disnake.WidgetMember.accent_colour disnake.WidgetMember.banner
#: disnake.WidgetMember.color disnake.WidgetMember.colour
#: disnake.WidgetMember.created_at disnake.WidgetMember.default_avatar
#: disnake.WidgetMember.display_avatar disnake.WidgetMember.display_name
#: disnake.WidgetMember.mention disnake.WidgetMember.public_flags
#: disnake.abc.GuildChannel disnake.abc.GuildChannel.category
#: disnake.abc.GuildChannel.changed_roles disnake.abc.GuildChannel.created_at
#: disnake.abc.GuildChannel.mention disnake.abc.GuildChannel.permissions_synced
#: disnake.abc.PrivateChannel disnake.abc.Snowflake disnake.abc.User
#: disnake.abc.User.display_name disnake.abc.User.mention
#: disnake.activity.Activity disnake.activity.CustomActivity
#: disnake.activity.Game disnake.activity.Streaming
#: disnake.app_commands.ApplicationCommandPermissions
#: disnake.app_commands.GuildApplicationCommandPermissions
#: disnake.appinfo.AppInfo disnake.appinfo.PartialAppInfo
#: disnake.audit_logs.AuditLogEntry disnake.channel.CategoryChannel
#: disnake.channel.DMChannel disnake.channel.GroupChannel
#: disnake.channel.PartialMessageable disnake.channel.StageChannel
#: disnake.channel.StoreChannel disnake.channel.TextChannel
#: disnake.channel.VoiceChannel disnake.client.Client disnake.colour.Colour
#: disnake.components.ActionRow disnake.components.Button
#: disnake.components.Component disnake.components.SelectMenu
#: disnake.components.SelectOption disnake.embeds.Embed disnake.emoji.Emoji
#: disnake.errors.ConnectionClosed disnake.errors.HTTPException
#: disnake.errors.InteractionException disnake.errors.InteractionNotResponded
#: disnake.errors.InteractionResponded disnake.errors.InteractionTimedOut
#: disnake.errors.PrivilegedIntentsRequired disnake.file.File
#: disnake.flags.ApplicationFlags disnake.flags.Intents
#: disnake.flags.MemberCacheFlags disnake.flags.MessageFlags
#: disnake.flags.PublicUserFlags disnake.flags.SystemChannelFlags
#: disnake.guild.Guild disnake.integrations.BotIntegration
#: disnake.integrations.Integration disnake.integrations.IntegrationAccount
#: disnake.integrations.IntegrationApplication
#: disnake.integrations.StreamIntegration
#: disnake.interactions.application_command.ApplicationCommandInteraction
#: disnake.interactions.application_command.ApplicationCommandInteractionData
#: disnake.interactions.application_command.ApplicationCommandInteractionDataOption
#: disnake.interactions.application_command.ApplicationCommandInteractionDataResolved
#: disnake.interactions.base.Interaction
#: disnake.interactions.message.MessageInteraction
#: disnake.interactions.message.MessageInteractionData disnake.invite.Invite
#: disnake.invite.PartialInviteChannel disnake.invite.PartialInviteGuild
#: disnake.member.Member disnake.member.VoiceState
#: disnake.mentions.AllowedMentions disnake.message.Attachment
#: disnake.message.InteractionReference disnake.message.Message
#: disnake.message.MessageReference disnake.message.PartialMessage
#: disnake.object.Object disnake.opus.OpusError
#: disnake.partial_emoji.PartialEmoji disnake.permissions.Permissions
#: disnake.player.PCMAudio disnake.raw_models.RawBulkMessageDeleteEvent
#: disnake.raw_models.RawIntegrationDeleteEvent
#: disnake.raw_models.RawMessageDeleteEvent
#: disnake.raw_models.RawMessageUpdateEvent
#: disnake.raw_models.RawReactionActionEvent
#: disnake.raw_models.RawReactionClearEmojiEvent
#: disnake.raw_models.RawReactionClearEvent disnake.reaction.Reaction
#: disnake.role.Role disnake.role.RoleTags disnake.shard.AutoShardedClient
#: disnake.shard.ShardInfo disnake.stage_instance.StageInstance
#: disnake.sticker.GuildSticker disnake.sticker.StandardSticker
#: disnake.sticker.Sticker disnake.sticker.StickerItem
#: disnake.sticker.StickerPack disnake.team.Team disnake.team.TeamMember
#: disnake.template.Template disnake.threads.Thread
#: disnake.threads.ThreadMember disnake.ui.Button.custom_id
#: disnake.ui.Button.disabled disnake.ui.Button.emoji disnake.ui.Button.label
#: disnake.ui.Button.style disnake.ui.Button.url disnake.ui.Button.view
#: disnake.ui.Item.view disnake.ui.Select.custom_id disnake.ui.Select.disabled
#: disnake.ui.Select.max_values disnake.ui.Select.min_values
#: disnake.ui.Select.options disnake.ui.Select.placeholder
#: disnake.ui.Select.values disnake.ui.Select.view disnake.ui.view.View
#: disnake.user.ClientUser disnake.user.User disnake.voice_client.VoiceClient
#: disnake.webhook.async_.PartialWebhookChannel
#: disnake.webhook.async_.PartialWebhookGuild disnake.webhook.async_.Webhook
#: disnake.webhook.sync.SyncWebhook disnake.widget.Widget
#: disnake.widget.WidgetChannel disnake.widget.WidgetMember of
msgid "type"
msgstr ""

#: disnake.client.Client:107 disnake.voice_client.VoiceClient:41 of
msgid ":class:`asyncio.AbstractEventLoop`"
msgstr ""

#: disnake.client.Client:111 of
msgid ""
"Whether to enable asyncio debugging when the client starts. Defaults to "
"False."
msgstr ""

#: ../../api.rst:3036 ../../api.rst:3155 ../../api.rst:3163 ../../api.rst:3188
#: ../../api.rst:3196 ../../api.rst:3253 ../../api.rst:3332 ../../api.rst:3338
#: ../../api.rst:3344 ../../docstring disnake.ApplicationFlags.embedded:3
#: disnake.ApplicationFlags.gateway_guild_members:4
#: disnake.ApplicationFlags.gateway_guild_members_limited:4
#: disnake.ApplicationFlags.gateway_message_content:4
#: disnake.ApplicationFlags.gateway_message_content_limited:4
#: disnake.ApplicationFlags.gateway_presence:4
#: disnake.ApplicationFlags.gateway_presence_limited:4
#: disnake.ApplicationFlags.verification_pending_guild_limit:4
#: disnake.CategoryChannel.permissions_synced:8 disnake.Guild.chunked:9
#: disnake.Guild.large:6 disnake.Intents.bans:10 disnake.Intents.dm_messages:24
#: disnake.Intents.dm_reactions:18 disnake.Intents.dm_typing:11
#: disnake.Intents.emojis:6 disnake.Intents.emojis_and_stickers:21
#: disnake.Intents.guild_messages:24 disnake.Intents.guild_reactions:18
#: disnake.Intents.guild_typing:11 disnake.Intents.guilds:23
#: disnake.Intents.integrations:12 disnake.Intents.invites:10
#: disnake.Intents.members:32 disnake.Intents.messages:24
#: disnake.Intents.presences:20 disnake.Intents.reactions:18
#: disnake.Intents.typing:11 disnake.Intents.voice_states:17
#: disnake.Intents.webhooks:9 disnake.MemberCacheFlags.joined:8
#: disnake.MemberCacheFlags.voice:7 disnake.MessageFlags.crossposted:3
#: disnake.MessageFlags.ephemeral:5 disnake.MessageFlags.has_thread:5
#: disnake.MessageFlags.is_crossposted:3
#: disnake.MessageFlags.source_message_deleted:3
#: disnake.MessageFlags.suppress_embeds:3 disnake.MessageFlags.urgent:5
#: disnake.Permissions.add_reactions:3 disnake.Permissions.administrator:5
#: disnake.Permissions.attach_files:3 disnake.Permissions.ban_members:3
#: disnake.Permissions.change_nickname:3 disnake.Permissions.connect:3
#: disnake.Permissions.create_instant_invite:3
#: disnake.Permissions.create_private_threads:5
#: disnake.Permissions.create_public_threads:5
#: disnake.Permissions.deafen_members:3 disnake.Permissions.embed_links:3
#: disnake.Permissions.external_emojis:3
#: disnake.Permissions.external_stickers:5 disnake.Permissions.kick_members:3
#: disnake.Permissions.manage_channels:5 disnake.Permissions.manage_emojis:3
#: disnake.Permissions.manage_emojis_and_stickers:5
#: disnake.Permissions.manage_events:5 disnake.Permissions.manage_guild:3
#: disnake.Permissions.manage_messages:7 disnake.Permissions.manage_nicknames:3
#: disnake.Permissions.manage_permissions:5 disnake.Permissions.manage_roles:5
#: disnake.Permissions.manage_threads:5 disnake.Permissions.manage_webhooks:3
#: disnake.Permissions.mention_everyone:3 disnake.Permissions.move_members:3
#: disnake.Permissions.mute_members:3 disnake.Permissions.priority_speaker:3
#: disnake.Permissions.read_message_history:3
#: disnake.Permissions.read_messages:3 disnake.Permissions.request_to_speak:5
#: disnake.Permissions.send_messages:3
#: disnake.Permissions.send_messages_in_threads:5
#: disnake.Permissions.send_tts_messages:3 disnake.Permissions.speak:3
#: disnake.Permissions.stream:3 disnake.Permissions.use_external_emojis:5
#: disnake.Permissions.use_external_stickers:5
#: disnake.Permissions.use_slash_commands:5
#: disnake.Permissions.use_voice_activation:3
#: disnake.Permissions.view_audit_log:3 disnake.Permissions.view_channel:5
#: disnake.Permissions.view_guild_insights:5
#: disnake.PublicUserFlags.bug_hunter:3
#: disnake.PublicUserFlags.bug_hunter_level_2:3
#: disnake.PublicUserFlags.discord_certified_moderator:5
#: disnake.PublicUserFlags.early_supporter:3
#: disnake.PublicUserFlags.early_verified_bot_developer:5
#: disnake.PublicUserFlags.hypesquad:3
#: disnake.PublicUserFlags.hypesquad_balance:3
#: disnake.PublicUserFlags.hypesquad_bravery:3
#: disnake.PublicUserFlags.hypesquad_brilliance:3
#: disnake.PublicUserFlags.partner:3 disnake.PublicUserFlags.staff:3
#: disnake.PublicUserFlags.system:3 disnake.PublicUserFlags.team_user:3
#: disnake.PublicUserFlags.verified_bot:3
#: disnake.PublicUserFlags.verified_bot_developer:3
#: disnake.StageChannel.permissions_synced:8
#: disnake.StoreChannel.permissions_synced:8
#: disnake.SystemChannelFlags.guild_reminder_notifications:5
#: disnake.SystemChannelFlags.join_notifications:3
#: disnake.SystemChannelFlags.premium_subscriptions:3
#: disnake.TextChannel.permissions_synced:8
#: disnake.VoiceChannel.permissions_synced:8
#: disnake.abc.GuildChannel.permissions_synced:8 disnake.abc.User:33
#: disnake.app_commands.ApplicationCommandPermissions:19
#: disnake.appinfo.AppInfo:41 disnake.appinfo.AppInfo:48
#: disnake.channel.CategoryChannel:56 disnake.channel.StoreChannel:60
#: disnake.channel.TextChannel:82 disnake.client.Client:114
#: disnake.components.Button:35 disnake.components.SelectMenu:49
#: disnake.components.SelectOption:39 disnake.emoji.Emoji:45
#: disnake.emoji.Emoji:51 disnake.emoji.Emoji:57 disnake.emoji.Emoji:69
#: disnake.file.File:36 disnake.guild.Guild:82 disnake.guild.Guild:179
#: disnake.integrations.BotIntegration:33 disnake.integrations.Integration:33
#: disnake.integrations.StreamIntegration:33
#: disnake.integrations.StreamIntegration:39
#: disnake.interactions.application_command.ApplicationCommandInteractionDataOption:32
#: disnake.invite.Invite:71 disnake.invite.Invite:84 disnake.member.Member:62
#: disnake.member.Member.mentioned_in:7 disnake.member.VoiceState:7
#: disnake.member.VoiceState:13 disnake.member.VoiceState:19
#: disnake.member.VoiceState:25 disnake.member.VoiceState:33
#: disnake.member.VoiceState:39 disnake.member.VoiceState:49
#: disnake.member.VoiceState:67 disnake.mentions.AllowedMentions:11
#: disnake.mentions.AllowedMentions:40 disnake.message.Message:23
#: disnake.message.Message:94 disnake.message.Message:147
#: disnake.message.MessageReference:33 disnake.opus.is_loaded:7
#: disnake.partial_emoji.PartialEmoji:38
#: disnake.permissions.PermissionOverwrite.is_empty:7
#: disnake.reaction.Reaction:42 disnake.role.Role:59 disnake.role.Role:81
#: disnake.role.Role:87 disnake.stage_instance.StageInstance:53
#: disnake.sticker.GuildSticker:47 disnake.team.TeamMember:51
#: disnake.threads.Thread:92 disnake.threads.Thread:98
#: disnake.threads.Thread:105 disnake.ui.Button.disabled:3
#: disnake.ui.Select.disabled:3 disnake.ui.view.View.interaction_check:20
#: disnake.ui.view.View.wait:8 disnake.user.BaseUser.mentioned_in:7
#: disnake.user.ClientUser:43 disnake.user.ClientUser:51
#: disnake.user.ClientUser:57 disnake.user.ClientUser:69 disnake.user.User:43
#: disnake.user.User:49 disnake.widget.WidgetMember:43 of
msgid ":class:`bool`"
msgstr ""

#: disnake.client.Client.event:1 of
msgid "A decorator that registers an event to listen to."
msgstr ""

#: disnake.client.Client.event:3 of
msgid ""
"You can find more info about the events on the :ref:`documentation below "
"<discord-api-events>`."
msgstr ""

#: disnake.client.Client.event:5 of
msgid ""
"The events must be a :ref:`coroutine <coroutine>`, if not, "
":exc:`TypeError` is raised."
msgstr ""

#: disnake.client.Client.change_presence:6 disnake.client.Client.event:8 of
msgid "Example"
msgstr ""

#: disnake.Thread.category disnake.Thread.category_id
#: disnake.abc.Connectable.connect disnake.abc.GuildChannel.clone
#: disnake.abc.GuildChannel.create_invite disnake.abc.GuildChannel.delete
#: disnake.abc.GuildChannel.invites disnake.abc.GuildChannel.move
#: disnake.abc.GuildChannel.set_permissions
#: disnake.abc.Messageable.fetch_message disnake.abc.Messageable.history
#: disnake.abc.Messageable.pins disnake.abc.Messageable.send
#: disnake.asset.Asset.replace disnake.asset.Asset.with_format
#: disnake.asset.Asset.with_size disnake.asset.Asset.with_static_format
#: disnake.asset.AssetMixin.read disnake.asset.AssetMixin.save
#: disnake.channel.CategoryChannel.clone disnake.channel.CategoryChannel.edit
#: disnake.channel.CategoryChannel.move disnake.channel.GroupChannel.leave
#: disnake.channel.StageChannel.clone
#: disnake.channel.StageChannel.create_instance
#: disnake.channel.StageChannel.edit
#: disnake.channel.StageChannel.fetch_instance
#: disnake.channel.StoreChannel.clone disnake.channel.StoreChannel.edit
#: disnake.channel.TextChannel.archived_threads
#: disnake.channel.TextChannel.clone disnake.channel.TextChannel.create_thread
#: disnake.channel.TextChannel.create_webhook
#: disnake.channel.TextChannel.delete_messages disnake.channel.TextChannel.edit
#: disnake.channel.TextChannel.follow disnake.channel.TextChannel.purge
#: disnake.channel.TextChannel.webhooks disnake.channel.VoiceChannel.clone
#: disnake.channel.VoiceChannel.edit disnake.client.Client.add_view
#: disnake.client.Client.application_info disnake.client.Client.change_presence
#: disnake.client.Client.connect disnake.client.Client.create_guild
#: disnake.client.Client.delete_invite disnake.client.Client.event
#: disnake.client.Client.fetch_channel disnake.client.Client.fetch_guild
#: disnake.client.Client.fetch_guilds disnake.client.Client.fetch_invite
#: disnake.client.Client.fetch_premium_sticker_packs
#: disnake.client.Client.fetch_stage_instance
#: disnake.client.Client.fetch_sticker disnake.client.Client.fetch_template
#: disnake.client.Client.fetch_user disnake.client.Client.fetch_webhook
#: disnake.client.Client.fetch_widget disnake.client.Client.login
#: disnake.client.Client.start disnake.client.Client.wait_for
#: disnake.embeds.Embed.set_field_at disnake.emoji.Emoji.delete
#: disnake.emoji.Emoji.edit disnake.guild.Guild.active_threads
#: disnake.guild.Guild.audit_logs disnake.guild.Guild.ban
#: disnake.guild.Guild.bans disnake.guild.Guild.chunk
#: disnake.guild.Guild.create_category disnake.guild.Guild.create_custom_emoji
#: disnake.guild.Guild.create_integration disnake.guild.Guild.create_role
#: disnake.guild.Guild.create_stage_channel disnake.guild.Guild.create_sticker
#: disnake.guild.Guild.create_text_channel
#: disnake.guild.Guild.create_voice_channel disnake.guild.Guild.delete
#: disnake.guild.Guild.delete_emoji disnake.guild.Guild.delete_sticker
#: disnake.guild.Guild.edit disnake.guild.Guild.edit_role_positions
#: disnake.guild.Guild.edit_widget disnake.guild.Guild.estimate_pruned_members
#: disnake.guild.Guild.fetch_ban disnake.guild.Guild.fetch_channel
#: disnake.guild.Guild.fetch_channels disnake.guild.Guild.fetch_emoji
#: disnake.guild.Guild.fetch_emojis disnake.guild.Guild.fetch_member
#: disnake.guild.Guild.fetch_members disnake.guild.Guild.fetch_roles
#: disnake.guild.Guild.fetch_sticker disnake.guild.Guild.fetch_stickers
#: disnake.guild.Guild.integrations disnake.guild.Guild.invites
#: disnake.guild.Guild.kick disnake.guild.Guild.leave
#: disnake.guild.Guild.prune_members disnake.guild.Guild.query_members
#: disnake.guild.Guild.templates disnake.guild.Guild.unban
#: disnake.guild.Guild.vanity_invite disnake.guild.Guild.webhooks
#: disnake.guild.Guild.widget disnake.integrations.Integration.delete
#: disnake.integrations.StreamIntegration.edit
#: disnake.integrations.StreamIntegration.sync
#: disnake.interactions.base.Interaction.delete_original_message
#: disnake.interactions.base.Interaction.edit_original_message
#: disnake.interactions.base.Interaction.original_message
#: disnake.interactions.base.Interaction.send
#: disnake.interactions.base.InteractionMessage.delete
#: disnake.interactions.base.InteractionMessage.edit
#: disnake.interactions.base.InteractionResponse.autocomplete
#: disnake.interactions.base.InteractionResponse.defer
#: disnake.interactions.base.InteractionResponse.edit_message
#: disnake.interactions.base.InteractionResponse.pong
#: disnake.interactions.base.InteractionResponse.send_message
#: disnake.invite.Invite.delete disnake.member.Member.add_roles
#: disnake.member.Member.edit disnake.member.Member.remove_roles
#: disnake.member.Member.request_to_speak disnake.message.Attachment.read
#: disnake.message.Attachment.save disnake.message.Attachment.to_file
#: disnake.message.Message.add_reaction disnake.message.Message.clear_reaction
#: disnake.message.Message.clear_reactions
#: disnake.message.Message.create_thread disnake.message.Message.delete
#: disnake.message.Message.edit disnake.message.Message.pin
#: disnake.message.Message.publish disnake.message.Message.remove_reaction
#: disnake.message.Message.reply disnake.message.Message.unpin
#: disnake.message.PartialMessage.edit disnake.message.PartialMessage.fetch
#: disnake.partial_emoji.PartialEmoji.read disnake.player.FFmpegOpusAudio
#: disnake.player.FFmpegOpusAudio.from_probe
#: disnake.player.FFmpegOpusAudio.probe disnake.player.FFmpegPCMAudio
#: disnake.player.PCMVolumeTransformer disnake.reaction.Reaction.clear
#: disnake.reaction.Reaction.remove disnake.reaction.Reaction.users
#: disnake.role.Role.delete disnake.role.Role.edit
#: disnake.shard.AutoShardedClient.change_presence
#: disnake.shard.AutoShardedClient.connect
#: disnake.stage_instance.StageInstance.delete
#: disnake.stage_instance.StageInstance.edit
#: disnake.sticker.GuildSticker.delete disnake.sticker.GuildSticker.edit
#: disnake.sticker.StandardSticker.pack disnake.sticker.StickerItem.fetch
#: disnake.template.Template.create_guild disnake.template.Template.delete
#: disnake.template.Template.edit disnake.template.Template.sync
#: disnake.threads.Thread.add_user disnake.threads.Thread.delete
#: disnake.threads.Thread.delete_messages disnake.threads.Thread.edit
#: disnake.threads.Thread.fetch_member disnake.threads.Thread.fetch_members
#: disnake.threads.Thread.join disnake.threads.Thread.leave
#: disnake.threads.Thread.permissions_for disnake.threads.Thread.purge
#: disnake.threads.Thread.remove_user disnake.ui.select.Select.add_option
#: disnake.ui.select.Select.append_option disnake.ui.view.View.add_item
#: disnake.user.ClientUser.edit disnake.voice_client.VoiceClient.play
#: disnake.voice_client.VoiceClient.send_audio_packet
#: disnake.webhook.async_.Webhook.delete
#: disnake.webhook.async_.Webhook.delete_message
#: disnake.webhook.async_.Webhook.edit
#: disnake.webhook.async_.Webhook.edit_message
#: disnake.webhook.async_.Webhook.fetch
#: disnake.webhook.async_.Webhook.fetch_message
#: disnake.webhook.async_.Webhook.from_url disnake.webhook.async_.Webhook.send
#: disnake.webhook.async_.WebhookMessage.delete
#: disnake.webhook.async_.WebhookMessage.edit
#: disnake.webhook.sync.SyncWebhook.delete
#: disnake.webhook.sync.SyncWebhook.delete_message
#: disnake.webhook.sync.SyncWebhook.edit
#: disnake.webhook.sync.SyncWebhook.edit_message
#: disnake.webhook.sync.SyncWebhook.fetch
#: disnake.webhook.sync.SyncWebhook.fetch_message
#: disnake.webhook.sync.SyncWebhook.from_url
#: disnake.webhook.sync.SyncWebhook.send
#: disnake.webhook.sync.SyncWebhookMessage.delete
#: disnake.webhook.sync.SyncWebhookMessage.edit of
msgid "Raises"
msgstr ""

#: disnake.client.Client.event:15 of
msgid "The coroutine passed is not actually a coroutine."
msgstr ""

#: disnake.client.Client.fetch_guilds:1 of
msgid "Retrieves an :class:`.AsyncIterator` that enables receiving your guilds."
msgstr ""

#: disnake.client.Client.fetch_guilds:5 of
msgid ""
"Using this, you will only receive :attr:`.Guild.owner`, "
":attr:`.Guild.icon`, :attr:`.Guild.id`, and :attr:`.Guild.name` per "
":class:`.Guild`."
msgstr ""

#: disnake.client.Client.fetch_guilds:10 of
msgid ""
"This method is an API call. For general usage, consider :attr:`guilds` "
"instead."
msgstr ""

#: disnake.abc.GuildChannel.set_permissions:25
#: disnake.abc.Messageable.history:6 disnake.channel.TextChannel.purge:13
#: disnake.client.Client.fetch_guilds:13 disnake.client.Client.wait_for:22
#: disnake.guild.Guild.audit_logs:6 disnake.guild.Guild.create_text_channel:20
#: disnake.guild.Guild.fetch_members:26
#: disnake.player.FFmpegOpusAudio.from_probe:7
#: disnake.reaction.Reaction.users:7 disnake.threads.Thread.purge:13
#: disnake.utils.get:16 of
msgid "Examples"
msgstr ""

#: disnake.abc.Messageable.history:7 disnake.client.Client.fetch_guilds:14
#: disnake.guild.Guild.fetch_members:27 disnake.reaction.Reaction.users:8 of
msgid "Usage ::"
msgstr ""

#: disnake.client.Client.fetch_guilds:19 disnake.guild.Guild.fetch_members:32
#: of
msgid "Flattening into a list ::"
msgstr ""

#: disnake.abc.Messageable.history:19 disnake.client.Client.fetch_guilds:24
#: disnake.guild.Guild.fetch_members:10 disnake.member.Member.edit:21 of
msgid "All parameters are optional."
msgstr ""

#: disnake.client.Client.fetch_guilds:26 of
msgid ""
"The number of guilds to retrieve. If ``None``, it retrieves every guild "
"you have access to. Note, however, that this would make it a slow "
"operation. Defaults to ``100``."
msgstr ""

#: disnake.client.Client.fetch_guilds:31 of
msgid ""
"Retrieves guilds before this date or object. If a datetime is provided, "
"it is recommended to use a UTC aware datetime. If the datetime is naive, "
"it is assumed to be local time."
msgstr ""

#: disnake.client.Client.fetch_guilds:35 of
msgid ""
"Retrieve guilds after this date or object. If a datetime is provided, it "
"is recommended to use a UTC aware datetime. If the datetime is naive, it "
"is assumed to be local time."
msgstr ""

#: disnake.client.Client.fetch_guilds:40 of
msgid "Getting the guilds failed."
msgstr ""

#: disnake.abc.Messageable.history disnake.channel.TextChannel.archived_threads
#: disnake.client.Client.fetch_guilds disnake.client.Client.get_all_channels
#: disnake.client.Client.get_all_members disnake.guild.Guild.audit_logs
#: disnake.guild.Guild.fetch_members disnake.reaction.Reaction.users of
msgid "Yields"
msgstr ""

#: disnake.client.Client.fetch_guilds:42 of
msgid ":class:`.Guild` -- The guild with the guild data parsed."
msgstr ""

#: disnake.AutoShardedClient.latency:1 disnake.Client.latency:1 of
msgid "Measures latency between a HEARTBEAT and a HEARTBEAT_ACK in seconds."
msgstr ""

#: disnake.Client.latency:3 of
msgid "This could be referred to as the Discord WebSocket protocol latency."
msgstr ""

#: disnake.AutoShardedClient.latency:7 disnake.Client.latency:5
#: disnake.Guild.bitrate_limit:3 disnake.ShardInfo.latency:3
#: disnake.VoiceClient.average_latency:5 disnake.VoiceClient.latency:8 of
msgid ":class:`float`"
msgstr ""

#: disnake.client.Client.is_ws_ratelimited:1
#: disnake.shard.AutoShardedClient.is_ws_ratelimited:1
#: disnake.shard.ShardInfo.is_ws_ratelimited:1 of
msgid ":class:`bool`: Whether the websocket is currently rate limited."
msgstr ""

#: disnake.client.Client.is_ws_ratelimited:3
#: disnake.shard.AutoShardedClient.is_ws_ratelimited:3
#: disnake.shard.ShardInfo.is_ws_ratelimited:3 of
msgid ""
"This can be useful to know when deciding whether you should query members"
" using HTTP or via the gateway."
msgstr ""

#: disnake.Client.user:1 of
msgid "Represents the connected client. ``None`` if not logged in."
msgstr ""

#: disnake.Client.user:3 of
msgid "Optional[:class:`.ClientUser`]"
msgstr ""

#: disnake.Client.guilds:1 of
msgid "The guilds that the connected client is a member of."
msgstr ""

#: disnake.Client.guilds:3 of
msgid "List[:class:`.Guild`]"
msgstr ""

#: disnake.Client.emojis:1 of
msgid "The emojis that the connected client has."
msgstr ""

#: disnake.Client.emojis:3 of
msgid "List[:class:`.Emoji`]"
msgstr ""

#: disnake.Client.stickers:1 of
msgid "The stickers that the connected client has."
msgstr ""

#: disnake.Client.stickers:5 of
msgid "List[:class:`.GuildSticker`]"
msgstr ""

#: disnake.Client.cached_messages:1 of
msgid "Read-only list of messages the connected client has cached."
msgstr ""

#: disnake.Client.cached_messages:5 of
msgid "Sequence[:class:`.Message`]"
msgstr ""

#: disnake.Client.private_channels:1 of
msgid "The private channels that the connected client is participating on."
msgstr ""

#: disnake.Client.private_channels:5 of
msgid ""
"This returns only up to 128 most recent private channels due to an "
"internal working on how Discord deals with private channels."
msgstr ""

#: disnake.Client.private_channels:8 of
msgid "List[:class:`.abc.PrivateChannel`]"
msgstr ""

#: disnake.Client.voice_clients:1 of
msgid "Represents a list of voice connections."
msgstr ""

#: disnake.Client.voice_clients:3 of
msgid "These are usually :class:`.VoiceClient` instances."
msgstr ""

#: disnake.Client.voice_clients:5 of
msgid "List[:class:`.VoiceProtocol`]"
msgstr ""

#: disnake.Client.application_id:3 of
msgid ""
"If this is not passed via ``__init__`` then this is retrieved through the"
" gateway when an event contains the data. Usually after "
":func:`~disnake.on_connect` is called."
msgstr ""

#: disnake.Client.application_id:9 disnake.DeletedReferencedMessage.guild_id:3
#: disnake.Thread.category_id:6 disnake.activity.Activity:16
#: disnake.appinfo.AppInfo:81 disnake.appinfo.AppInfo:91
#: disnake.channel.StageChannel:51 disnake.channel.TextChannel:43
#: disnake.channel.TextChannel:63 disnake.channel.VoiceChannel:43
#: disnake.errors.ConnectionClosed:20
#: disnake.errors.PrivilegedIntentsRequired:14 disnake.guild.Guild:88
#: disnake.guild.Guild:98 disnake.guild.Guild:106
#: disnake.guild.Guild.prune_members:38
#: disnake.interactions.application_command.ApplicationCommandInteraction:23
#: disnake.interactions.application_command.ApplicationCommandInteraction:29
#: disnake.interactions.base.Interaction:24
#: disnake.interactions.base.Interaction:30
#: disnake.interactions.message.MessageInteraction:17
#: disnake.interactions.message.MessageInteraction:23 disnake.invite.Invite:109
#: disnake.invite.Invite:116 disnake.message.Attachment:40
#: disnake.message.Attachment:46 disnake.message.Message:135
#: disnake.message.MessageReference:12 disnake.message.MessageReference:24
#: disnake.partial_emoji.PartialEmoji:44
#: disnake.raw_models.RawBulkMessageDeleteEvent:19
#: disnake.raw_models.RawIntegrationDeleteEvent:15
#: disnake.raw_models.RawMessageDeleteEvent:13
#: disnake.raw_models.RawMessageUpdateEvent:23
#: disnake.raw_models.RawReactionActionEvent:26
#: disnake.raw_models.RawReactionClearEmojiEvent:21
#: disnake.raw_models.RawReactionClearEvent:19 disnake.role.RoleTags:15
#: disnake.role.RoleTags:21 disnake.shard.ShardInfo:18
#: disnake.threads.Thread:51 disnake.threads.Thread:58
#: disnake.threads.Thread:73 disnake.threads.Thread:79
#: disnake.threads.Thread:111 disnake.webhook.async_.Webhook:70
#: disnake.webhook.async_.Webhook:76 disnake.webhook.sync.SyncWebhook:47
#: disnake.webhook.sync.SyncWebhook:53 of
msgid "Optional[:class:`int`]"
msgstr ""

#: disnake.Client.application_flags:1 of
msgid "The client's application flags."
msgstr ""

#: disnake.Client.application_flags:5 of
msgid ":class:`~disnake.ApplicationFlags`"
msgstr ""

#: disnake.client.Client.get_message:1 of
msgid "Gets the message with the ID from the bot's message cache."
msgstr ""

#: disnake.client.Client.get_message:3 of
msgid "The ID of the message to look for."
msgstr ""

#: ../../api.rst disnake.CategoryChannel.overwrites
#: disnake.StageChannel.overwrites disnake.StageChannel.voice_states
#: disnake.StoreChannel.overwrites disnake.TextChannel.last_message
#: disnake.TextChannel.overwrites disnake.Thread.category
#: disnake.Thread.category_id disnake.Thread.last_message
#: disnake.VoiceChannel.overwrites disnake.VoiceChannel.voice_states
#: disnake.abc.Connectable.connect disnake.abc.GuildChannel.clone
#: disnake.abc.GuildChannel.create_invite disnake.abc.GuildChannel.invites
#: disnake.abc.GuildChannel.overwrites disnake.abc.GuildChannel.overwrites_for
#: disnake.abc.GuildChannel.permissions_for
#: disnake.abc.Messageable.fetch_message disnake.abc.Messageable.pins
#: disnake.abc.Messageable.send
#: disnake.app_commands.UnresolvedGuildApplicationCommandPermissions.resolve
#: disnake.asset.Asset.replace disnake.asset.Asset.with_format
#: disnake.asset.Asset.with_size disnake.asset.Asset.with_static_format
#: disnake.asset.AssetMixin.read disnake.asset.AssetMixin.save
#: disnake.channel.CategoryChannel.clone
#: disnake.channel.CategoryChannel.create_stage_channel
#: disnake.channel.CategoryChannel.create_text_channel
#: disnake.channel.CategoryChannel.create_voice_channel
#: disnake.channel.CategoryChannel.edit
#: disnake.channel.DMChannel.get_partial_message
#: disnake.channel.DMChannel.permissions_for
#: disnake.channel.GroupChannel.permissions_for
#: disnake.channel.PartialMessageable.get_partial_message
#: disnake.channel.StageChannel.clone
#: disnake.channel.StageChannel.create_instance
#: disnake.channel.StageChannel.edit
#: disnake.channel.StageChannel.fetch_instance
#: disnake.channel.StoreChannel.clone disnake.channel.StoreChannel.edit
#: disnake.channel.StoreChannel.permissions_for
#: disnake.channel.TextChannel.clone disnake.channel.TextChannel.create_thread
#: disnake.channel.TextChannel.create_webhook disnake.channel.TextChannel.edit
#: disnake.channel.TextChannel.follow
#: disnake.channel.TextChannel.get_partial_message
#: disnake.channel.TextChannel.get_thread
#: disnake.channel.TextChannel.permissions_for
#: disnake.channel.TextChannel.purge disnake.channel.TextChannel.webhooks
#: disnake.channel.VocalGuildChannel.permissions_for
#: disnake.channel.VoiceChannel.clone disnake.channel.VoiceChannel.edit
#: disnake.client.Client.application_info
#: disnake.client.Client.bulk_edit_command_permissions
#: disnake.client.Client.bulk_overwrite_global_commands
#: disnake.client.Client.bulk_overwrite_guild_commands
#: disnake.client.Client.create_dm disnake.client.Client.create_global_command
#: disnake.client.Client.create_guild
#: disnake.client.Client.create_guild_command
#: disnake.client.Client.edit_command_permissions
#: disnake.client.Client.edit_global_command
#: disnake.client.Client.edit_guild_command disnake.client.Client.fetch_channel
#: disnake.client.Client.fetch_command_permissions
#: disnake.client.Client.fetch_global_command
#: disnake.client.Client.fetch_global_commands
#: disnake.client.Client.fetch_guild disnake.client.Client.fetch_guild_command
#: disnake.client.Client.fetch_guild_commands
#: disnake.client.Client.fetch_invite
#: disnake.client.Client.fetch_premium_sticker_packs
#: disnake.client.Client.fetch_stage_instance
#: disnake.client.Client.fetch_sticker disnake.client.Client.fetch_template
#: disnake.client.Client.fetch_user disnake.client.Client.fetch_webhook
#: disnake.client.Client.fetch_widget disnake.client.Client.get_channel
#: disnake.client.Client.get_emoji disnake.client.Client.get_global_command
#: disnake.client.Client.get_global_command_named
#: disnake.client.Client.get_guild
#: disnake.client.Client.get_guild_application_commands
#: disnake.client.Client.get_guild_command
#: disnake.client.Client.get_guild_command_named
#: disnake.client.Client.get_guild_message_commands
#: disnake.client.Client.get_guild_slash_commands
#: disnake.client.Client.get_guild_user_commands
#: disnake.client.Client.get_message disnake.client.Client.get_or_fetch_user
#: disnake.client.Client.get_partial_messageable
#: disnake.client.Client.get_stage_instance disnake.client.Client.get_sticker
#: disnake.client.Client.get_user disnake.client.Client.wait_for
#: disnake.emoji.Emoji.edit disnake.flags.MemberCacheFlags.from_intents
#: disnake.guild.Guild.active_threads disnake.guild.Guild.bans
#: disnake.guild.Guild.bulk_edit_command_permissions
#: disnake.guild.Guild.by_category disnake.guild.Guild.create_category
#: disnake.guild.Guild.create_custom_emoji disnake.guild.Guild.create_role
#: disnake.guild.Guild.create_stage_channel disnake.guild.Guild.create_sticker
#: disnake.guild.Guild.create_text_channel
#: disnake.guild.Guild.create_voice_channel disnake.guild.Guild.edit
#: disnake.guild.Guild.edit_command_permissions
#: disnake.guild.Guild.edit_role_positions
#: disnake.guild.Guild.estimate_pruned_members disnake.guild.Guild.fetch_ban
#: disnake.guild.Guild.fetch_channel disnake.guild.Guild.fetch_channels
#: disnake.guild.Guild.fetch_command_permissions
#: disnake.guild.Guild.fetch_emoji disnake.guild.Guild.fetch_emojis
#: disnake.guild.Guild.fetch_member disnake.guild.Guild.fetch_roles
#: disnake.guild.Guild.fetch_sticker disnake.guild.Guild.fetch_stickers
#: disnake.guild.Guild.get_channel disnake.guild.Guild.get_channel_or_thread
#: disnake.guild.Guild.get_member disnake.guild.Guild.get_member_named
#: disnake.guild.Guild.get_or_fetch_member disnake.guild.Guild.get_role
#: disnake.guild.Guild.get_stage_instance disnake.guild.Guild.get_thread
#: disnake.guild.Guild.integrations disnake.guild.Guild.invites
#: disnake.guild.Guild.prune_members disnake.guild.Guild.query_members
#: disnake.guild.Guild.templates disnake.guild.Guild.vanity_invite
#: disnake.guild.Guild.webhooks disnake.guild.Guild.widget
#: disnake.interactions.base.Interaction.edit_original_message
#: disnake.interactions.base.Interaction.original_message
#: disnake.interactions.base.InteractionMessage.edit disnake.member.Member.edit
#: disnake.member.Member.get_role disnake.member.Member.mentioned_in
#: disnake.member.flatten_user.<locals>.generate_function.<locals>.general
#: disnake.message.Attachment.read disnake.message.Attachment.save
#: disnake.message.Attachment.to_file disnake.message.Message.create_thread
#: disnake.message.Message.edit disnake.message.Message.reply
#: disnake.message.Message.to_reference
#: disnake.message.MessageReference.from_message
#: disnake.message.PartialMessage.edit disnake.message.PartialMessage.fetch
#: disnake.opus.is_loaded disnake.partial_emoji.PartialEmoji.from_str
#: disnake.partial_emoji.PartialEmoji.read
#: disnake.permissions.PermissionOverwrite.is_empty
#: disnake.player.AudioSource.read disnake.player.FFmpegOpusAudio.from_probe
#: disnake.player.FFmpegOpusAudio.probe disnake.player.FFmpegOpusAudio.read
#: disnake.player.FFmpegPCMAudio.read disnake.player.PCMAudio.read
#: disnake.player.PCMVolumeTransformer.read disnake.role.Role.edit
#: disnake.sticker.GuildSticker.edit disnake.sticker.StandardSticker.pack
#: disnake.sticker.StickerItem.fetch disnake.template.Template.create_guild
#: disnake.template.Template.edit disnake.template.Template.sync
#: disnake.threads.Thread.edit disnake.threads.Thread.fetch_member
#: disnake.threads.Thread.fetch_members
#: disnake.threads.Thread.get_partial_message
#: disnake.threads.Thread.permissions_for disnake.threads.Thread.purge
#: disnake.ui.view.View.from_message disnake.ui.view.View.interaction_check
#: disnake.ui.view.View.wait disnake.user.BaseUser.mentioned_in
#: disnake.user.ClientUser.edit disnake.user.User.create_dm
#: disnake.utils.as_chunks disnake.utils.escape_markdown
#: disnake.utils.escape_mentions disnake.utils.format_dt
#: disnake.utils.oauth_url disnake.utils.remove_markdown
#: disnake.utils.resolve_invite disnake.utils.resolve_template
#: disnake.utils.snowflake_time disnake.utils.utcnow
#: disnake.webhook.async_.Webhook.edit_message
#: disnake.webhook.async_.Webhook.fetch
#: disnake.webhook.async_.Webhook.fetch_message
#: disnake.webhook.async_.Webhook.from_url
#: disnake.webhook.async_.Webhook.partial disnake.webhook.async_.Webhook.send
#: disnake.webhook.async_.WebhookMessage.edit
#: disnake.webhook.sync.SyncWebhook.edit disnake.webhook.sync.SyncWebhook.fetch
#: disnake.webhook.sync.SyncWebhook.fetch_message
#: disnake.webhook.sync.SyncWebhook.from_url
#: disnake.webhook.sync.SyncWebhook.partial
#: disnake.webhook.sync.SyncWebhook.send
#: disnake.webhook.sync.SyncWebhookMessage.edit
#: disnake.widget.Widget.fetch_invite of
msgid "Returns"
msgstr ""

#: disnake.client.Client.get_message:6 of
msgid "The corresponding message."
msgstr ""

#: ../../api.rst disnake.CategoryChannel.overwrites
#: disnake.StageChannel.overwrites disnake.StageChannel.voice_states
#: disnake.StoreChannel.overwrites disnake.TextChannel.last_message
#: disnake.TextChannel.overwrites disnake.Thread.category
#: disnake.Thread.category_id disnake.Thread.last_message
#: disnake.VoiceChannel.overwrites disnake.VoiceChannel.voice_states
#: disnake.abc.Connectable.connect disnake.abc.GuildChannel.clone
#: disnake.abc.GuildChannel.create_invite disnake.abc.GuildChannel.invites
#: disnake.abc.GuildChannel.overwrites disnake.abc.GuildChannel.overwrites_for
#: disnake.abc.GuildChannel.permissions_for
#: disnake.abc.Messageable.fetch_message disnake.abc.Messageable.pins
#: disnake.abc.Messageable.send
#: disnake.app_commands.UnresolvedGuildApplicationCommandPermissions.resolve
#: disnake.asset.Asset.replace disnake.asset.Asset.with_format
#: disnake.asset.Asset.with_size disnake.asset.Asset.with_static_format
#: disnake.asset.AssetMixin.read disnake.asset.AssetMixin.save
#: disnake.channel.CategoryChannel.clone
#: disnake.channel.CategoryChannel.create_stage_channel
#: disnake.channel.CategoryChannel.create_text_channel
#: disnake.channel.CategoryChannel.create_voice_channel
#: disnake.channel.CategoryChannel.edit
#: disnake.channel.DMChannel.get_partial_message
#: disnake.channel.DMChannel.permissions_for
#: disnake.channel.GroupChannel.permissions_for
#: disnake.channel.PartialMessageable.get_partial_message
#: disnake.channel.StageChannel.clone
#: disnake.channel.StageChannel.create_instance
#: disnake.channel.StageChannel.edit
#: disnake.channel.StageChannel.fetch_instance
#: disnake.channel.StoreChannel.clone disnake.channel.StoreChannel.edit
#: disnake.channel.StoreChannel.permissions_for
#: disnake.channel.TextChannel.clone disnake.channel.TextChannel.create_thread
#: disnake.channel.TextChannel.create_webhook disnake.channel.TextChannel.edit
#: disnake.channel.TextChannel.follow
#: disnake.channel.TextChannel.get_partial_message
#: disnake.channel.TextChannel.get_thread
#: disnake.channel.TextChannel.permissions_for
#: disnake.channel.TextChannel.purge disnake.channel.TextChannel.webhooks
#: disnake.channel.VocalGuildChannel.permissions_for
#: disnake.channel.VoiceChannel.clone disnake.channel.VoiceChannel.edit
#: disnake.client.Client.application_info
#: disnake.client.Client.bulk_edit_command_permissions
#: disnake.client.Client.bulk_overwrite_global_commands
#: disnake.client.Client.bulk_overwrite_guild_commands
#: disnake.client.Client.create_dm disnake.client.Client.create_global_command
#: disnake.client.Client.create_guild
#: disnake.client.Client.create_guild_command
#: disnake.client.Client.edit_command_permissions
#: disnake.client.Client.edit_global_command
#: disnake.client.Client.edit_guild_command disnake.client.Client.fetch_channel
#: disnake.client.Client.fetch_command_permissions
#: disnake.client.Client.fetch_global_command
#: disnake.client.Client.fetch_global_commands
#: disnake.client.Client.fetch_guild disnake.client.Client.fetch_guild_command
#: disnake.client.Client.fetch_guild_commands
#: disnake.client.Client.fetch_invite
#: disnake.client.Client.fetch_premium_sticker_packs
#: disnake.client.Client.fetch_stage_instance
#: disnake.client.Client.fetch_sticker disnake.client.Client.fetch_template
#: disnake.client.Client.fetch_user disnake.client.Client.fetch_webhook
#: disnake.client.Client.fetch_widget disnake.client.Client.get_channel
#: disnake.client.Client.get_emoji disnake.client.Client.get_global_command
#: disnake.client.Client.get_global_command_named
#: disnake.client.Client.get_guild
#: disnake.client.Client.get_guild_application_commands
#: disnake.client.Client.get_guild_command
#: disnake.client.Client.get_guild_command_named
#: disnake.client.Client.get_guild_message_commands
#: disnake.client.Client.get_guild_slash_commands
#: disnake.client.Client.get_guild_user_commands
#: disnake.client.Client.get_message disnake.client.Client.get_or_fetch_user
#: disnake.client.Client.get_partial_messageable
#: disnake.client.Client.get_stage_instance disnake.client.Client.get_sticker
#: disnake.client.Client.get_user disnake.client.Client.wait_for
#: disnake.emoji.Emoji.edit disnake.flags.MemberCacheFlags.from_intents
#: disnake.guild.Guild.active_threads disnake.guild.Guild.bans
#: disnake.guild.Guild.bulk_edit_command_permissions
#: disnake.guild.Guild.by_category disnake.guild.Guild.create_category
#: disnake.guild.Guild.create_custom_emoji disnake.guild.Guild.create_role
#: disnake.guild.Guild.create_stage_channel disnake.guild.Guild.create_sticker
#: disnake.guild.Guild.create_text_channel
#: disnake.guild.Guild.create_voice_channel disnake.guild.Guild.edit
#: disnake.guild.Guild.edit_command_permissions
#: disnake.guild.Guild.edit_role_positions
#: disnake.guild.Guild.estimate_pruned_members disnake.guild.Guild.fetch_ban
#: disnake.guild.Guild.fetch_channel disnake.guild.Guild.fetch_channels
#: disnake.guild.Guild.fetch_command_permissions
#: disnake.guild.Guild.fetch_emoji disnake.guild.Guild.fetch_emojis
#: disnake.guild.Guild.fetch_member disnake.guild.Guild.fetch_roles
#: disnake.guild.Guild.fetch_sticker disnake.guild.Guild.fetch_stickers
#: disnake.guild.Guild.get_channel disnake.guild.Guild.get_channel_or_thread
#: disnake.guild.Guild.get_member disnake.guild.Guild.get_member_named
#: disnake.guild.Guild.get_or_fetch_member disnake.guild.Guild.get_role
#: disnake.guild.Guild.get_stage_instance disnake.guild.Guild.get_thread
#: disnake.guild.Guild.integrations disnake.guild.Guild.invites
#: disnake.guild.Guild.prune_members disnake.guild.Guild.query_members
#: disnake.guild.Guild.templates disnake.guild.Guild.vanity_invite
#: disnake.guild.Guild.webhooks disnake.guild.Guild.widget
#: disnake.interactions.base.Interaction.edit_original_message
#: disnake.interactions.base.Interaction.original_message
#: disnake.interactions.base.InteractionMessage.edit disnake.member.Member.edit
#: disnake.member.Member.get_role disnake.member.Member.mentioned_in
#: disnake.member.flatten_user.<locals>.generate_function.<locals>.general
#: disnake.message.Attachment.read disnake.message.Attachment.save
#: disnake.message.Attachment.to_file disnake.message.Message.create_thread
#: disnake.message.Message.edit disnake.message.Message.reply
#: disnake.message.Message.to_reference
#: disnake.message.MessageReference.from_message
#: disnake.message.PartialMessage.edit disnake.message.PartialMessage.fetch
#: disnake.opus.is_loaded disnake.partial_emoji.PartialEmoji.from_str
#: disnake.partial_emoji.PartialEmoji.read
#: disnake.permissions.PermissionOverwrite.is_empty
#: disnake.player.AudioSource.read disnake.player.FFmpegOpusAudio.from_probe
#: disnake.player.FFmpegOpusAudio.probe disnake.player.FFmpegOpusAudio.read
#: disnake.player.FFmpegPCMAudio.read disnake.player.PCMAudio.read
#: disnake.player.PCMVolumeTransformer.read disnake.role.Role.edit
#: disnake.sticker.GuildSticker.edit disnake.sticker.StandardSticker.pack
#: disnake.sticker.StickerItem.fetch disnake.template.Template.create_guild
#: disnake.template.Template.edit disnake.template.Template.sync
#: disnake.threads.Thread.edit disnake.threads.Thread.fetch_member
#: disnake.threads.Thread.fetch_members
#: disnake.threads.Thread.get_partial_message
#: disnake.threads.Thread.permissions_for disnake.threads.Thread.purge
#: disnake.ui.view.View.from_message disnake.ui.view.View.interaction_check
#: disnake.ui.view.View.wait disnake.user.BaseUser.mentioned_in
#: disnake.user.ClientUser.edit disnake.user.User.create_dm
#: disnake.utils.as_chunks disnake.utils.escape_markdown
#: disnake.utils.escape_mentions disnake.utils.format_dt
#: disnake.utils.oauth_url disnake.utils.remove_markdown
#: disnake.utils.resolve_invite disnake.utils.resolve_template
#: disnake.utils.snowflake_time disnake.utils.utcnow
#: disnake.webhook.async_.Webhook.edit_message
#: disnake.webhook.async_.Webhook.fetch
#: disnake.webhook.async_.Webhook.fetch_message
#: disnake.webhook.async_.Webhook.from_url
#: disnake.webhook.async_.Webhook.partial disnake.webhook.async_.Webhook.send
#: disnake.webhook.async_.WebhookMessage.edit
#: disnake.webhook.sync.SyncWebhook.edit disnake.webhook.sync.SyncWebhook.fetch
#: disnake.webhook.sync.SyncWebhook.fetch_message
#: disnake.webhook.sync.SyncWebhook.from_url
#: disnake.webhook.sync.SyncWebhook.partial
#: disnake.webhook.sync.SyncWebhook.send
#: disnake.webhook.sync.SyncWebhookMessage.edit
#: disnake.widget.Widget.fetch_invite of
msgid "Return type"
msgstr ""

#: disnake.client.Client.get_message:7 of
msgid "Optional[:class:`.Message`]"
msgstr ""

#: ../../api.rst:2740 ../../api.rst:2748 ../../api.rst:2759 ../../api.rst:2779
#: disnake.abc.Connectable.connect:1 disnake.abc.GuildChannel.clone:1
#: disnake.abc.GuildChannel.create_invite:1 disnake.abc.GuildChannel.delete:1
#: disnake.abc.GuildChannel.invites:1 disnake.abc.GuildChannel.move:1
#: disnake.abc.GuildChannel.set_permissions:1
#: disnake.abc.Messageable.fetch_message:1 disnake.abc.Messageable.pins:1
#: disnake.abc.Messageable.send:1 disnake.abc.Messageable.trigger_typing:1
#: disnake.asset.AssetMixin.read:1 disnake.asset.AssetMixin.save:1
#: disnake.channel.CategoryChannel.clone:1
#: disnake.channel.CategoryChannel.create_stage_channel:1
#: disnake.channel.CategoryChannel.create_text_channel:1
#: disnake.channel.CategoryChannel.create_voice_channel:1
#: disnake.channel.CategoryChannel.edit:1
#: disnake.channel.CategoryChannel.move:1 disnake.channel.GroupChannel.leave:1
#: disnake.channel.StageChannel.clone:1
#: disnake.channel.StageChannel.create_instance:1
#: disnake.channel.StageChannel.edit:1
#: disnake.channel.StageChannel.fetch_instance:1
#: disnake.channel.StoreChannel.clone:1 disnake.channel.StoreChannel.edit:1
#: disnake.channel.TextChannel.clone:1
#: disnake.channel.TextChannel.create_thread:1
#: disnake.channel.TextChannel.create_webhook:1
#: disnake.channel.TextChannel.delete_messages:1
#: disnake.channel.TextChannel.edit:1 disnake.channel.TextChannel.purge:1
#: disnake.channel.TextChannel.webhooks:1 disnake.channel.VoiceChannel.clone:1
#: disnake.channel.VoiceChannel.edit:1 disnake.client.Client.application_info:1
#: disnake.client.Client.before_identify_hook:1
#: disnake.client.Client.bulk_edit_command_permissions:1
#: disnake.client.Client.bulk_fetch_command_permissions:1
#: disnake.client.Client.bulk_overwrite_global_commands:1
#: disnake.client.Client.bulk_overwrite_guild_commands:1
#: disnake.client.Client.change_presence:1 disnake.client.Client.close:1
#: disnake.client.Client.connect:1 disnake.client.Client.create_dm:1
#: disnake.client.Client.create_global_command:1
#: disnake.client.Client.create_guild:1
#: disnake.client.Client.create_guild_command:1
#: disnake.client.Client.delete_global_command:1
#: disnake.client.Client.delete_guild_command:1
#: disnake.client.Client.delete_invite:1
#: disnake.client.Client.edit_global_command:1
#: disnake.client.Client.edit_guild_command:1
#: disnake.client.Client.fetch_channel:1
#: disnake.client.Client.fetch_command_permissions:1
#: disnake.client.Client.fetch_global_command:1
#: disnake.client.Client.fetch_global_commands:1
#: disnake.client.Client.fetch_guild:1
#: disnake.client.Client.fetch_guild_command:1
#: disnake.client.Client.fetch_guild_commands:1
#: disnake.client.Client.fetch_invite:1
#: disnake.client.Client.fetch_premium_sticker_packs:1
#: disnake.client.Client.fetch_stage_instance:1
#: disnake.client.Client.fetch_sticker:1 disnake.client.Client.fetch_template:1
#: disnake.client.Client.fetch_user:1 disnake.client.Client.fetch_webhook:1
#: disnake.client.Client.fetch_widget:1
#: disnake.client.Client.get_or_fetch_user:1 disnake.client.Client.login:1
#: disnake.client.Client.on_error:1 disnake.client.Client.start:1
#: disnake.client.Client.wait_for:1
#: disnake.client.Client.wait_until_first_connect:1
#: disnake.client.Client.wait_until_ready:1 disnake.emoji.Emoji.delete:1
#: disnake.emoji.Emoji.edit:1 disnake.guild.Guild.active_threads:1
#: disnake.guild.Guild.ban:1 disnake.guild.Guild.bans:1
#: disnake.guild.Guild.bulk_edit_command_permissions:1
#: disnake.guild.Guild.bulk_fetch_command_permissions:1
#: disnake.guild.Guild.change_voice_state:1 disnake.guild.Guild.chunk:1
#: disnake.guild.Guild.create_category:1
#: disnake.guild.Guild.create_custom_emoji:1
#: disnake.guild.Guild.create_integration:1 disnake.guild.Guild.create_role:1
#: disnake.guild.Guild.create_stage_channel:1
#: disnake.guild.Guild.create_sticker:1 disnake.guild.Guild.create_template:1
#: disnake.guild.Guild.create_text_channel:1
#: disnake.guild.Guild.create_voice_channel:1 disnake.guild.Guild.delete:1
#: disnake.guild.Guild.delete_emoji:1 disnake.guild.Guild.delete_sticker:1
#: disnake.guild.Guild.edit:1 disnake.guild.Guild.edit_role_positions:1
#: disnake.guild.Guild.edit_widget:1
#: disnake.guild.Guild.estimate_pruned_members:1
#: disnake.guild.Guild.fetch_ban:1 disnake.guild.Guild.fetch_channel:1
#: disnake.guild.Guild.fetch_channels:1
#: disnake.guild.Guild.fetch_command_permissions:1
#: disnake.guild.Guild.fetch_emoji:1 disnake.guild.Guild.fetch_emojis:1
#: disnake.guild.Guild.fetch_member:1 disnake.guild.Guild.fetch_roles:1
#: disnake.guild.Guild.fetch_sticker:1 disnake.guild.Guild.fetch_stickers:1
#: disnake.guild.Guild.get_or_fetch_member:1 disnake.guild.Guild.integrations:1
#: disnake.guild.Guild.invites:1 disnake.guild.Guild.kick:1
#: disnake.guild.Guild.leave:1 disnake.guild.Guild.prune_members:1
#: disnake.guild.Guild.query_members:1 disnake.guild.Guild.templates:1
#: disnake.guild.Guild.unban:1 disnake.guild.Guild.vanity_invite:1
#: disnake.guild.Guild.webhooks:1 disnake.guild.Guild.widget:1
#: disnake.integrations.Integration.delete:1
#: disnake.integrations.StreamIntegration.edit:1
#: disnake.integrations.StreamIntegration.sync:1
#: disnake.interactions.base.Interaction.delete_original_message:1
#: disnake.interactions.base.Interaction.edit_original_message:1
#: disnake.interactions.base.Interaction.original_message:1
#: disnake.interactions.base.Interaction.send:1
#: disnake.interactions.base.InteractionMessage.delete:1
#: disnake.interactions.base.InteractionMessage.edit:1
#: disnake.interactions.base.InteractionResponse.defer:1
#: disnake.interactions.base.InteractionResponse.edit_message:1
#: disnake.interactions.base.InteractionResponse.pong:1
#: disnake.interactions.base.InteractionResponse.send_message:1
#: disnake.invite.Invite.delete:1 disnake.member.Member.add_roles:1
#: disnake.member.Member.ban:1 disnake.member.Member.edit:1
#: disnake.member.Member.kick:1 disnake.member.Member.move_to:1
#: disnake.member.Member.remove_roles:1
#: disnake.member.Member.request_to_speak:1 disnake.member.Member.unban:1
#: disnake.member.flatten_user.<locals>.generate_function.<locals>.general:1
#: disnake.message.Attachment.read:1 disnake.message.Attachment.save:1
#: disnake.message.Attachment.to_file:1 disnake.message.Message.add_reaction:1
#: disnake.message.Message.clear_reaction:1
#: disnake.message.Message.clear_reactions:1
#: disnake.message.Message.create_thread:1 disnake.message.Message.delete:1
#: disnake.message.Message.edit:1 disnake.message.Message.pin:1
#: disnake.message.Message.publish:1 disnake.message.Message.remove_reaction:1
#: disnake.message.Message.reply:1 disnake.message.Message.unpin:1
#: disnake.message.PartialMessage.edit:1 disnake.message.PartialMessage.fetch:1
#: disnake.partial_emoji.PartialEmoji.read:1
#: disnake.player.FFmpegOpusAudio.from_probe:1
#: disnake.player.FFmpegOpusAudio.probe:1 disnake.reaction.Reaction.clear:1
#: disnake.reaction.Reaction.remove:1 disnake.role.Role.delete:1
#: disnake.role.Role.edit:1 disnake.shard.AutoShardedClient.change_presence:1
#: disnake.shard.AutoShardedClient.close:1
#: disnake.shard.AutoShardedClient.connect:1 disnake.shard.ShardInfo.connect:1
#: disnake.shard.ShardInfo.disconnect:1 disnake.shard.ShardInfo.reconnect:1
#: disnake.stage_instance.StageInstance.delete:1
#: disnake.stage_instance.StageInstance.edit:1
#: disnake.sticker.GuildSticker.delete:1 disnake.sticker.GuildSticker.edit:1
#: disnake.sticker.StandardSticker.pack:1 disnake.sticker.StickerItem.fetch:1
#: disnake.template.Template.create_guild:1 disnake.template.Template.delete:1
#: disnake.template.Template.edit:1 disnake.template.Template.sync:1
#: disnake.threads.Thread.add_user:1 disnake.threads.Thread.delete:1
#: disnake.threads.Thread.delete_messages:1 disnake.threads.Thread.edit:1
#: disnake.threads.Thread.fetch_member:1 disnake.threads.Thread.fetch_members:1
#: disnake.threads.Thread.join:1 disnake.threads.Thread.leave:1
#: disnake.threads.Thread.purge:1 disnake.threads.Thread.remove_user:1
#: disnake.ui.item.Item.callback:1 disnake.ui.view.View.interaction_check:1
#: disnake.ui.view.View.on_error:1 disnake.ui.view.View.on_timeout:1
#: disnake.user.ClientUser.edit:1 disnake.user.User.create_dm:1
#: disnake.utils.sleep_until:1 disnake.voice_client.VoiceClient.disconnect:1
#: disnake.voice_client.VoiceClient.move_to:1
#: disnake.voice_client.VoiceProtocol.connect:1
#: disnake.voice_client.VoiceProtocol.disconnect:1
#: disnake.voice_client.VoiceProtocol.on_voice_server_update:1
#: disnake.voice_client.VoiceProtocol.on_voice_state_update:1
#: disnake.webhook.async_.Webhook.delete:1
#: disnake.webhook.async_.Webhook.delete_message:1
#: disnake.webhook.async_.Webhook.edit:1
#: disnake.webhook.async_.Webhook.edit_message:1
#: disnake.webhook.async_.Webhook.fetch:1
#: disnake.webhook.async_.Webhook.fetch_message:1
#: disnake.webhook.async_.Webhook.send:1
#: disnake.webhook.async_.WebhookMessage.delete:1
#: disnake.webhook.async_.WebhookMessage.edit:1
#: disnake.widget.Widget.fetch_invite:1 of
msgid "|coro|"
msgstr ""

#: disnake.client.Client.get_or_fetch_user:3 of
msgid ""
"Tries to get the user from the cache. If fails, it tries to fetch the "
"user from the API."
msgstr ""

#: disnake.channel.TextChannel.get_thread:5 disnake.client.Client.get_channel:3
#: disnake.client.Client.get_emoji:3 disnake.client.Client.get_global_command:3
#: disnake.client.Client.get_guild:3
#: disnake.client.Client.get_guild_application_commands:3
#: disnake.client.Client.get_guild_message_commands:3
#: disnake.client.Client.get_guild_slash_commands:3
#: disnake.client.Client.get_guild_user_commands:3
#: disnake.client.Client.get_or_fetch_user:6
#: disnake.client.Client.get_stage_instance:5 disnake.client.Client.get_user:3
#: disnake.guild.Guild.get_channel:7
#: disnake.guild.Guild.get_channel_or_thread:5 disnake.guild.Guild.get_member:3
#: disnake.guild.Guild.get_or_fetch_member:6 disnake.guild.Guild.get_role:3
#: disnake.guild.Guild.get_stage_instance:5 disnake.guild.Guild.get_thread:5
#: disnake.member.Member.get_role:5 of
msgid "The ID to search for."
msgstr ""

#: disnake.client.Client.get_or_fetch_user:9 of
msgid "The user with the given ID"
msgstr ""

#: disnake.abc.Messageable:8 disnake.abc.User:5
#: disnake.client.Client.fetch_user:18
#: disnake.client.Client.get_or_fetch_user:10 of
msgid ":class:`~disnake.User`"
msgstr ""

#: disnake.client.Client.is_ready:1 of
msgid ":class:`bool`: Specifies if the client's internal cache is ready for use."
msgstr ""

#: disnake.client.Client.on_error:3 of
msgid "The default error handler provided by the client."
msgstr ""

#: disnake.client.Client.on_error:5 of
msgid ""
"By default this prints to :data:`sys.stderr` however it could be "
"overridden to have a different implementation. Check "
":func:`~disnake.on_error` for more details."
msgstr ""

#: disnake.client.Client.before_identify_hook:3 of
msgid ""
"A hook that is called before IDENTIFYing a session. This is useful if you"
" wish to have more control over the synchronization of multiple "
"IDENTIFYing clients."
msgstr ""

#: disnake.client.Client.before_identify_hook:7 of
msgid "The default implementation sleeps for 5 seconds."
msgstr ""

#: disnake.client.Client.before_identify_hook:11 of
msgid "The shard ID that requested being IDENTIFY'd"
msgstr ""

#: disnake.client.Client.before_identify_hook:13 of
msgid "Whether this IDENTIFY is the first initial IDENTIFY."
msgstr ""

#: disnake.client.Client.login:3 of
msgid "Logs in the client with the specified credentials."
msgstr ""

#: disnake.client.Client.login:6 of
msgid ""
"The authentication token. Do not prefix this token with anything as the "
"library will do it for you."
msgstr ""

#: disnake.client.Client.login:10 of
msgid "The wrong credentials are passed."
msgstr ""

#: disnake.client.Client.login:11 of
msgid ""
"An unknown HTTP related error occurred,     usually when it isn't 200 or "
"the known incorrect credentials     passing status code."
msgstr ""

#: disnake.client.Client.connect:3 disnake.shard.AutoShardedClient.connect:3 of
msgid ""
"Creates a websocket connection and lets the websocket listen to messages "
"from Discord. This is a loop that runs the entire event system and "
"miscellaneous aspects of the library. Control is not resumed until the "
"WebSocket connection is terminated."
msgstr ""

#: disnake.client.Client.connect:8 disnake.shard.AutoShardedClient.connect:8 of
msgid ""
"If we should attempt reconnecting, either due to internet failure or a "
"specific failure on Discord's part. Certain disconnects that lead to bad "
"state will not be handled (such as invalid sharding payloads or bad "
"tokens)."
msgstr ""

#: disnake.client.Client.connect:14 disnake.shard.AutoShardedClient.connect:14
#: of
msgid ""
"If the gateway to connect to Discord is not found. Usually if this     is"
" thrown then there is a Discord API outage."
msgstr ""

#: disnake.client.Client.connect:15 disnake.shard.AutoShardedClient.connect:15
#: of
msgid "The websocket connection has been terminated."
msgstr ""

#: disnake.client.Client.close:3 disnake.shard.AutoShardedClient.close:3 of
msgid "Closes the connection to Discord."
msgstr ""

#: disnake.client.Client.clear:1 of
msgid "Clears the internal state of the bot."
msgstr ""

#: disnake.client.Client.clear:3 of
msgid ""
"After this, the bot can be considered \"re-opened\", i.e. "
":meth:`is_closed` and :meth:`is_ready` both return ``False`` along with "
"the bot's internal cache cleared."
msgstr ""

#: disnake.client.Client.start:3 of
msgid "A shorthand coroutine for :meth:`login` + :meth:`connect`."
msgstr ""

#: disnake.client.Client.start:5 of
msgid "An unexpected keyword argument was received."
msgstr ""

#: disnake.client.Client.run:1 of
msgid ""
"A blocking call that abstracts away the event loop initialisation from "
"you."
msgstr ""

#: disnake.client.Client.run:4 of
msgid ""
"If you want more control over the event loop then this function should "
"not be used. Use :meth:`start` coroutine or :meth:`connect` + "
":meth:`login`."
msgstr ""

#: disnake.client.Client.run:8 of
msgid "Roughly Equivalent to: ::"
msgstr ""

#: disnake.client.Client.run:20 of
msgid ""
"This function must be the last function to call due to the fact that it "
"is blocking. That means that registration of events or anything being "
"called after this function call will not execute until it returns."
msgstr ""

#: disnake.client.Client.is_closed:1 of
msgid ":class:`bool`: Indicates if the websocket connection is closed."
msgstr ""

#: disnake.Client.activity:1 of
msgid "The activity being used upon logging in."
msgstr ""

#: disnake.Client.activity:4 of
msgid "Optional[:class:`.BaseActivity`]"
msgstr ""

#: disnake.Client.status:1 of
msgid ":class:`.Status`: The status being used upon logging on to Discord."
msgstr ""

#: disnake.Client.allowed_mentions:1 of
msgid "The allowed mention configuration."
msgstr ""

#: disnake.Client.allowed_mentions:5 of
msgid "Optional[:class:`~disnake.AllowedMentions`]"
msgstr ""

#: disnake.Client.intents:1 of
msgid "The intents configured for this connection."
msgstr ""

#: disnake.Client.intents:5 of
msgid ":class:`~disnake.Intents`"
msgstr ""

#: disnake.Client.users:1 of
msgid "Returns a list of all the users the bot can see."
msgstr ""

#: disnake.Client.users:3 of
msgid "List[:class:`~disnake.User`]"
msgstr ""

#: disnake.client.Client.get_channel:1
#: disnake.guild.Guild.get_channel_or_thread:1 of
msgid "Returns a channel or thread with the given ID."
msgstr ""

#: disnake.client.Client.get_channel:6 disnake.guild.Guild.get_channel:10 of
msgid "The returned channel or ``None`` if not found."
msgstr ""

#: disnake.client.Client.get_channel:7 of
msgid ""
"Optional[Union[:class:`.abc.GuildChannel`, :class:`.Thread`, "
":class:`.abc.PrivateChannel`]]"
msgstr ""

#: disnake.client.Client.get_partial_messageable:1 of
msgid "Returns a partial messageable with the given channel ID."
msgstr ""

#: disnake.client.Client.get_partial_messageable:3 of
msgid ""
"This is useful if you have a channel_id but don't want to do an API call "
"to send messages to it."
msgstr ""

#: disnake.client.Client.get_partial_messageable:8 of
msgid "The channel ID to create a partial messageable for."
msgstr ""

#: disnake.client.Client.get_partial_messageable:10 of
msgid "The underlying channel type for the partial messageable."
msgstr ""

#: disnake.client.Client.get_partial_messageable:13 of
msgid "The partial messageable"
msgstr ""

#: disnake.client.Client.get_partial_messageable:14 of
msgid ":class:`.PartialMessageable`"
msgstr ""

#: disnake.client.Client.get_stage_instance:1 of
msgid "Returns a stage instance with the given stage channel ID."
msgstr ""

#: disnake.client.Client.get_stage_instance:8 of
msgid "The returns stage instance of ``None`` if not found."
msgstr ""

#: disnake.client.Client.get_stage_instance:9 of
msgid "Optional[:class:`.StageInstance`]"
msgstr ""

#: disnake.client.Client.get_guild:1 of
msgid "Returns a guild with the given ID."
msgstr ""

#: disnake.client.Client.get_guild:6 of
msgid "The guild or ``None`` if not found."
msgstr ""

#: disnake.client.Client.get_guild:7 of
msgid "Optional[:class:`.Guild`]"
msgstr ""

#: disnake.client.Client.get_user:1 of
msgid "Returns a user with the given ID."
msgstr ""

#: disnake.client.Client.get_user:6 of
msgid "The user or ``None`` if not found."
msgstr ""

#: disnake.client.Client.get_user:7 of
msgid "Optional[:class:`~disnake.User`]"
msgstr ""

#: disnake.client.Client.get_emoji:1 of
msgid "Returns an emoji with the given ID."
msgstr ""

#: disnake.client.Client.get_emoji:6 of
msgid "The custom emoji or ``None`` if not found."
msgstr ""

#: disnake.client.Client.get_emoji:7 of
msgid "Optional[:class:`.Emoji`]"
msgstr ""

#: disnake.client.Client.get_sticker:1 of
msgid "Returns a guild sticker with the given ID."
msgstr ""

#: disnake.client.Client.get_sticker:7 of
msgid ""
"To retrieve standard stickers, use :meth:`.fetch_sticker`. or "
":meth:`.fetch_premium_sticker_packs`."
msgstr ""

#: disnake.client.Client.get_sticker:10 of
msgid "The sticker or ``None`` if not found."
msgstr ""

#: disnake.client.Client.get_sticker:11 of
msgid "Optional[:class:`.GuildSticker`]"
msgstr ""

#: disnake.client.Client.get_all_channels:1 of
msgid ""
"A generator that retrieves every :class:`.abc.GuildChannel` the client "
"can 'access'."
msgstr ""

#: disnake.client.Client.get_all_channels:3
#: disnake.client.Client.get_all_members:3 of
msgid "This is equivalent to: ::"
msgstr ""

#: disnake.client.Client.get_all_channels:11 of
msgid ""
"Just because you receive a :class:`.abc.GuildChannel` does not mean that "
"you can communicate in said channel. "
":meth:`.abc.GuildChannel.permissions_for` should be used for that."
msgstr ""

#: disnake.client.Client.get_all_channels:15 of
msgid ":class:`.abc.GuildChannel` -- A channel the client can 'access'."
msgstr ""

#: disnake.client.Client.get_all_members:1 of
msgid "Returns a generator with every :class:`.Member` the client can see."
msgstr ""

#: disnake.client.Client.get_all_members:9 of
msgid ":class:`.Member` -- A member the client can see."
msgstr ""

#: disnake.client.Client.get_guild_application_commands:1 of
msgid "Returns a list of all application commands in the guild."
msgstr ""

#: disnake.client.Client.get_guild_application_commands:6 of
msgid "The list of application commands."
msgstr ""

#: disnake.client.Client.bulk_overwrite_global_commands:11
#: disnake.client.Client.bulk_overwrite_guild_commands:13
#: disnake.client.Client.fetch_global_commands:8
#: disnake.client.Client.fetch_guild_commands:11
#: disnake.client.Client.get_guild_application_commands:7 of
msgid "List[:class:`.ApplicationCommand`]"
msgstr ""

#: disnake.client.Client.get_guild_slash_commands:1 of
msgid "Returns a list of all slash commands in the guild."
msgstr ""

#: disnake.client.Client.get_guild_slash_commands:6 of
msgid "The list of slash commands."
msgstr ""

#: disnake.client.Client.get_guild_slash_commands:7 of
msgid "List[:class:`.SlashCommand`]"
msgstr ""

#: disnake.client.Client.get_guild_user_commands:1 of
msgid "Returns a list of all user commands in the guild."
msgstr ""

#: disnake.client.Client.get_guild_user_commands:6 of
msgid "The list of user commands."
msgstr ""

#: disnake.client.Client.get_guild_user_commands:7 of
msgid "List[:class:`.UserCommand`]"
msgstr ""

#: disnake.client.Client.get_guild_message_commands:1 of
msgid "Returns a list of all message commands in the guild."
msgstr ""

#: disnake.client.Client.get_guild_message_commands:6 of
msgid "The list of message commands."
msgstr ""

#: disnake.client.Client.get_guild_message_commands:7 of
msgid "List[:class:`.MessageCommand`]"
msgstr ""

#: disnake.client.Client.get_global_command:1 of
msgid "Returns a global application command."
msgstr ""

#: disnake.client.Client.get_global_command:6
#: disnake.client.Client.get_global_command_named:8
#: disnake.client.Client.get_guild_command:8
#: disnake.client.Client.get_guild_command_named:10 of
msgid "The application command."
msgstr ""

#: disnake.client.Client.create_global_command:11
#: disnake.client.Client.create_guild_command:13
#: disnake.client.Client.edit_global_command:13
#: disnake.client.Client.edit_guild_command:15
#: disnake.client.Client.fetch_global_command:11
#: disnake.client.Client.fetch_guild_command:13
#: disnake.client.Client.get_global_command:7
#: disnake.client.Client.get_global_command_named:9
#: disnake.client.Client.get_guild_command:9
#: disnake.client.Client.get_guild_command_named:11 of
msgid ":class:`.ApplicationCommand`"
msgstr ""

#: disnake.client.Client.get_guild_command:1 of
msgid "Returns a guild application command."
msgstr ""

#: disnake.client.Client.get_guild_command:3
#: disnake.client.Client.get_guild_command_named:3 of
msgid "The guild ID to search for."
msgstr ""

#: disnake.client.Client.get_guild_command:5 of
msgid "The command ID to search for."
msgstr ""

#: disnake.client.Client.get_global_command_named:1 of
msgid "Returns a global application command matching the specified name."
msgstr ""

#: disnake.client.Client.get_global_command_named:3 of
msgid "The name to look for."
msgstr ""

#: disnake.client.Client.get_global_command_named:5
#: disnake.client.Client.get_guild_command_named:7 of
msgid "The type to look for. By default, no types are checked."
msgstr ""

#: disnake.client.Client.get_guild_command_named:1 of
msgid "Returns a guild application command matching the name."
msgstr ""

#: disnake.client.Client.get_guild_command_named:5 of
msgid "The command name to search for."
msgstr ""

#: disnake.client.Client.wait_until_ready:3 of
msgid "Waits until the client's internal cache is all ready."
msgstr ""

#: disnake.client.Client.wait_until_first_connect:3 of
msgid "Waits until the first connect."
msgstr ""

#: disnake.client.Client.wait_for:3 of
msgid "Waits for a WebSocket event to be dispatched."
msgstr ""

#: disnake.client.Client.wait_for:5 of
msgid ""
"This could be used to wait for a user to reply to a message, or to react "
"to a message, or to edit a message in a self-contained way."
msgstr ""

#: disnake.client.Client.wait_for:9 of
msgid ""
"The ``timeout`` parameter is passed onto :func:`asyncio.wait_for`. By "
"default, it does not timeout. Note that this does propagate the "
":exc:`asyncio.TimeoutError` for you in case of timeout and is provided "
"for ease of use."
msgstr ""

#: disnake.client.Client.wait_for:14 of
msgid ""
"In case the event returns multiple arguments, a :class:`tuple` containing"
" those arguments is returned instead. Please check the "
":ref:`documentation <discord-api-events>` for a list of events and their "
"parameters."
msgstr ""

#: disnake.client.Client.wait_for:19 of
msgid "This function returns the **first event that meets the requirements**."
msgstr ""

#: disnake.client.Client.wait_for:23 of
msgid "Waiting for a user reply: ::"
msgstr ""

#: disnake.client.Client.wait_for:37 of
msgid "Waiting for a thumbs up reaction from the message author: ::"
msgstr ""

#: disnake.client.Client.wait_for:55 of
msgid ""
"The event name, similar to the :ref:`event reference <discord-api-"
"events>`, but without the ``on_`` prefix, to wait for."
msgstr ""

#: disnake.client.Client.wait_for:58 of
msgid ""
"A predicate to check what to wait for. The arguments must meet the "
"parameters of the event being waited for."
msgstr ""

#: disnake.client.Client.wait_for:61 of
msgid ""
"The number of seconds to wait before timing out and raising "
":exc:`asyncio.TimeoutError`."
msgstr ""

#: disnake.client.Client.wait_for:65 of
msgid "If a timeout is provided and it was reached."
msgstr ""

#: disnake.client.Client.wait_for:67 of
msgid ""
"Returns no arguments, a single argument, or a :class:`tuple` of multiple "
"arguments that mirrors the parameters passed in the :ref:`event reference"
" <discord-api-events>`."
msgstr ""

#: disnake.client.Client.change_presence:3
#: disnake.shard.AutoShardedClient.change_presence:3 of
msgid "Changes the client's presence."
msgstr ""

#: disnake.client.Client.change_presence:12
#: disnake.shard.AutoShardedClient.change_presence:10 of
msgid "Removed the ``afk`` keyword-only parameter."
msgstr ""

#: disnake.client.Client.change_presence:15
#: disnake.shard.AutoShardedClient.change_presence:13 of
msgid "The activity being done. ``None`` if no currently active activity is done."
msgstr ""

#: disnake.client.Client.change_presence:17 of
msgid ""
"Indicates what status to change to. If ``None``, then "
":attr:`.Status.online` is used."
msgstr ""

#: disnake.client.Client.change_presence:21 of
msgid "If the ``activity`` parameter is not the proper type."
msgstr ""

#: disnake.client.Client.fetch_template:3 of
msgid "Gets a :class:`.Template` from a disnake.new URL or code."
msgstr ""

#: disnake.client.Client.fetch_template:5 of
msgid "The Discord Template Code or URL (must be a disnake.new URL)."
msgstr ""

#: disnake.client.Client.fetch_template:8 of
msgid "The template is invalid."
msgstr ""

#: disnake.client.Client.fetch_template:9 of
msgid "Getting the template failed."
msgstr ""

#: disnake.client.Client.fetch_template:11 of
msgid "The template from the URL/code."
msgstr ""

#: disnake.client.Client.fetch_template:12 of
msgid ":class:`.Template`"
msgstr ""

#: disnake.client.Client.fetch_guild:3 of
msgid "Retrieves a :class:`.Guild` from an ID."
msgstr ""

#: disnake.client.Client.fetch_guild:7 of
msgid ""
"Using this, you will **not** receive :attr:`.Guild.channels`, "
":attr:`.Guild.members`, :attr:`.Member.activity` and "
":attr:`.Member.voice` per :class:`.Member`."
msgstr ""

#: disnake.client.Client.fetch_guild:12 of
msgid ""
"This method is an API call. For general usage, consider :meth:`get_guild`"
" instead."
msgstr ""

#: disnake.client.Client.fetch_guild:14 of
msgid "The guild's ID to fetch from."
msgstr ""

#: disnake.client.Client.fetch_guild:17 disnake.guild.Guild.fetch_member:12 of
msgid "You do not have access to the guild."
msgstr ""

#: disnake.client.Client.fetch_guild:18 of
msgid "Getting the guild failed."
msgstr ""

#: disnake.client.Client.fetch_guild:20 of
msgid "The guild from the ID."
msgstr ""

#: disnake.client.Client.create_guild:25 disnake.client.Client.fetch_guild:21
#: disnake.template.Template.create_guild:21 of
msgid ":class:`.Guild`"
msgstr ""

#: disnake.client.Client.create_guild:3 of
msgid "Creates a :class:`.Guild`."
msgstr ""

#: disnake.client.Client.create_guild:5
#: disnake.template.Template.create_guild:5 of
msgid "Bot accounts in more than 10 guilds are not allowed to create guilds."
msgstr ""

#: disnake.client.Client.create_guild:7
#: disnake.template.Template.create_guild:7 of
msgid "The name of the guild."
msgstr ""

#: disnake.client.Client.create_guild:9
#: disnake.template.Template.create_guild:9 of
msgid ""
"The region for the voice communication server. Defaults to "
":attr:`.VoiceRegion.us_west`."
msgstr ""

#: disnake.client.Client.create_guild:12
#: disnake.template.Template.create_guild:12 of
msgid ""
"The :term:`py:bytes-like object` representing the icon. See "
":meth:`.ClientUser.edit` for more details on what is expected."
msgstr ""

#: disnake.client.Client.create_guild:15 of
msgid "The code for a template to create the guild with.  .. versionadded:: 1.4"
msgstr ""

#: disnake.client.Client.create_guild:15 of
msgid "The code for a template to create the guild with."
msgstr ""

#: disnake.client.Client.create_guild:20
#: disnake.template.Template.create_guild:16 of
msgid "Guild creation failed."
msgstr ""

#: disnake.client.Client.create_guild:21
#: disnake.template.Template.create_guild:17 of
msgid "Invalid icon image format given. Must be PNG or JPG."
msgstr ""

#: disnake.client.Client.create_guild:23
#: disnake.template.Template.create_guild:19 of
msgid "The guild created. This is not the same guild that is added to cache."
msgstr ""

#: disnake.client.Client.fetch_stage_instance:3 of
msgid "Gets a :class:`.StageInstance` for a stage channel id."
msgstr ""

#: disnake.client.Client.fetch_stage_instance:7 of
msgid "The stage channel ID."
msgstr ""

#: disnake.channel.StageChannel.fetch_instance:7
#: disnake.client.Client.fetch_stage_instance:10 of
msgid "The stage instance or channel could not be found."
msgstr ""

#: disnake.channel.StageChannel.fetch_instance:8
#: disnake.client.Client.fetch_stage_instance:11 of
msgid "Getting the stage instance failed."
msgstr ""

#: disnake.client.Client.fetch_stage_instance:13 of
msgid "The stage instance from the stage channel ID."
msgstr ""

#: disnake.client.Client.fetch_stage_instance:14 of
msgid ":class:`.StageInstance`"
msgstr ""

#: disnake.client.Client.fetch_invite:3 of
msgid "Gets an :class:`.Invite` from a discord.gg URL or ID."
msgstr ""

#: disnake.client.Client.fetch_invite:7 of
msgid ""
"If the invite is for a guild you have not joined, the guild and channel "
"attributes of the returned :class:`.Invite` will be "
":class:`.PartialInviteGuild` and :class:`.PartialInviteChannel` "
"respectively."
msgstr ""

#: disnake.client.Client.fetch_invite:11 of
msgid "The Discord invite ID or URL (must be a discord.gg URL)."
msgstr ""

#: disnake.client.Client.fetch_invite:13 of
msgid ""
"Whether to include count information in the invite. This fills the "
":attr:`.Invite.approximate_member_count` and "
":attr:`.Invite.approximate_presence_count` fields."
msgstr ""

#: disnake.client.Client.fetch_invite:17 of
msgid ""
"Whether to include the expiration date of the invite. This fills the "
":attr:`.Invite.expires_at` field.  .. versionadded:: 2.0"
msgstr ""

#: disnake.client.Client.fetch_invite:17 of
msgid ""
"Whether to include the expiration date of the invite. This fills the "
":attr:`.Invite.expires_at` field."
msgstr ""

#: disnake.client.Client.fetch_invite:23 of
msgid "The invite has expired or is invalid."
msgstr ""

#: disnake.client.Client.fetch_invite:24 of
msgid "Getting the invite failed."
msgstr ""

#: disnake.client.Client.fetch_invite:26 of
msgid "The invite from the URL/ID."
msgstr ""

#: disnake.client.Client.fetch_invite:27 of
msgid ":class:`.Invite`"
msgstr ""

#: disnake.client.Client.delete_invite:3 of
msgid "Revokes an :class:`.Invite`, URL, or ID to an invite."
msgstr ""

#: disnake.client.Client.delete_invite:5 of
msgid ""
"You must have the :attr:`~.Permissions.manage_channels` permission in the"
" associated guild to do this."
msgstr ""

#: disnake.client.Client.delete_invite:8 of
msgid "The invite to revoke."
msgstr ""

#: disnake.client.Client.delete_invite:11 disnake.invite.Invite.delete:10 of
msgid "You do not have permissions to revoke invites."
msgstr ""

#: disnake.client.Client.delete_invite:12 disnake.invite.Invite.delete:11 of
msgid "The invite is invalid or expired."
msgstr ""

#: disnake.client.Client.delete_invite:13 disnake.invite.Invite.delete:12 of
msgid "Revoking the invite failed."
msgstr ""

#: disnake.client.Client.fetch_widget:3 of
msgid "Gets a :class:`.Widget` from a guild ID."
msgstr ""

#: disnake.client.Client.fetch_widget:7 disnake.guild.Guild.widget:7 of
msgid "The guild must have the widget enabled to get this information."
msgstr ""

#: disnake.client.Client.fetch_widget:9 of
msgid "The ID of the guild."
msgstr ""

#: disnake.client.Client.fetch_widget:12 disnake.guild.Guild.widget:9 of
msgid "The widget for this guild is disabled."
msgstr ""

#: disnake.client.Client.fetch_widget:13 disnake.guild.Guild.widget:10 of
msgid "Retrieving the widget failed."
msgstr ""

#: disnake.client.Client.fetch_widget:15 disnake.guild.Guild.widget:12 of
msgid "The guild's widget."
msgstr ""

#: disnake.client.Client.fetch_widget:16 of
msgid ":class:`.Widget`"
msgstr ""

#: disnake.client.Client.application_info:3 of
msgid "Retrieves the bot's application information."
msgstr ""

#: disnake.client.Client.application_info:5 of
msgid "Retrieving the information failed somehow."
msgstr ""

#: disnake.client.Client.application_info:7 of
msgid "The bot's application information."
msgstr ""

#: disnake.client.Client.application_info:8 of
msgid ":class:`.AppInfo`"
msgstr ""

#: disnake.client.Client.fetch_user:3 of
msgid ""
"Retrieves a :class:`~disnake.User` based on their ID. You do not have to "
"share any guilds with the user to get this information, however many "
"operations do require that you do."
msgstr ""

#: disnake.client.Client.fetch_user:9 of
msgid ""
"This method is an API call. If you have :attr:`disnake.Intents.members` "
"and member cache enabled, consider :meth:`get_user` instead."
msgstr ""

#: disnake.client.Client.fetch_user:11 of
msgid "The user's ID to fetch from."
msgstr ""

#: disnake.client.Client.fetch_user:14 of
msgid "A user with this ID does not exist."
msgstr ""

#: disnake.client.Client.fetch_user:15 of
msgid "Fetching the user failed."
msgstr ""

#: disnake.client.Client.fetch_user:17 of
msgid "The user you requested."
msgstr ""

#: disnake.client.Client.fetch_channel:3 of
msgid ""
"Retrieves a :class:`.abc.GuildChannel`, :class:`.abc.PrivateChannel`, or "
":class:`.Thread` with the specified ID."
msgstr ""

#: disnake.client.Client.fetch_channel:7 of
msgid ""
"This method is an API call. For general usage, consider "
":meth:`get_channel` instead."
msgstr ""

#: disnake.client.Client.fetch_channel:11 disnake.guild.Guild.fetch_channels:11
#: of
msgid "An unknown channel type was received from Discord."
msgstr ""

#: disnake.client.Client.fetch_channel:12 disnake.guild.Guild.fetch_channel:12
#: of
msgid "Retrieving the channel failed."
msgstr ""

#: disnake.client.Client.fetch_channel:13 disnake.guild.Guild.fetch_channel:13
#: of
msgid "Invalid Channel ID."
msgstr ""

#: disnake.client.Client.fetch_channel:14 disnake.guild.Guild.fetch_channel:14
#: of
msgid "You do not have permission to fetch this channel."
msgstr ""

#: disnake.client.Client.fetch_channel:16 disnake.guild.Guild.fetch_channel:16
#: of
msgid "The channel from the ID."
msgstr ""

#: disnake.client.Client.fetch_channel:17 of
msgid ""
"Union[:class:`.abc.GuildChannel`, :class:`.abc.PrivateChannel`, "
":class:`.Thread`]"
msgstr ""

#: disnake.client.Client.fetch_webhook:3 of
msgid "Retrieves a :class:`.Webhook` with the specified ID."
msgstr ""

#: disnake.client.Client.fetch_webhook:5 of
msgid "Retrieving the webhook failed."
msgstr ""

#: disnake.client.Client.fetch_webhook:6 of
msgid "Invalid webhook ID."
msgstr ""

#: disnake.client.Client.fetch_webhook:7 of
msgid "You do not have permission to fetch this webhook."
msgstr ""

#: disnake.client.Client.fetch_webhook:9 of
msgid "The webhook you requested."
msgstr ""

#: disnake.client.Client.fetch_webhook:10 of
msgid ":class:`.Webhook`"
msgstr ""

#: disnake.client.Client.fetch_sticker:3 of
msgid "Retrieves a :class:`.Sticker` with the specified ID."
msgstr ""

#: disnake.client.Client.fetch_sticker:7 disnake.sticker.StickerItem.fetch:5 of
msgid "Retrieving the sticker failed."
msgstr ""

#: disnake.client.Client.fetch_sticker:8 of
msgid "Invalid sticker ID."
msgstr ""

#: disnake.client.Client.fetch_sticker:10 of
msgid "The sticker you requested."
msgstr ""

#: disnake.client.Client.fetch_sticker:11 of
msgid "Union[:class:`.StandardSticker`, :class:`.GuildSticker`]"
msgstr ""

#: disnake.client.Client.fetch_premium_sticker_packs:3 of
msgid "Retrieves all available premium sticker packs."
msgstr ""

#: disnake.client.Client.fetch_premium_sticker_packs:7 of
msgid "Retrieving the sticker packs failed."
msgstr ""

#: disnake.client.Client.fetch_premium_sticker_packs:9 of
msgid "All available premium sticker packs."
msgstr ""

#: disnake.client.Client.fetch_premium_sticker_packs:10 of
msgid "List[:class:`.StickerPack`]"
msgstr ""

#: disnake.client.Client.create_dm:3 of
msgid "Creates a :class:`.DMChannel` with this user."
msgstr ""

#: disnake.client.Client.create_dm:5
#: disnake.member.flatten_user.<locals>.generate_function.<locals>.general:5
#: disnake.user.User.create_dm:5 of
msgid ""
"This should be rarely called, as this is done transparently for most "
"people."
msgstr ""

#: disnake.client.Client.create_dm:10 of
msgid "The user to create a DM with."
msgstr ""

#: disnake.abc.GuildChannel.clone:20 disnake.channel.CategoryChannel.clone:20
#: disnake.channel.StageChannel.clone:20 disnake.channel.StoreChannel.clone:20
#: disnake.channel.TextChannel.clone:20 disnake.channel.VoiceChannel.clone:20
#: disnake.client.Client.create_dm:13
#: disnake.member.flatten_user.<locals>.generate_function.<locals>.general:8
#: disnake.user.User.create_dm:8 of
msgid "The channel that was created."
msgstr ""

#: disnake.client.Client.create_dm:14
#: disnake.member.flatten_user.<locals>.generate_function.<locals>.general:9
#: disnake.user.User.create_dm:9 of
msgid ":class:`.DMChannel`"
msgstr ""

#: disnake.client.Client.add_view:1 of
msgid "Registers a :class:`~disnake.ui.View` for persistent listening."
msgstr ""

#: disnake.client.Client.add_view:3 of
msgid ""
"This method should be used for when a view is comprised of components "
"that last longer than the lifecycle of the program."
msgstr ""

#: disnake.client.Client.add_view:8 of
msgid "The view to register for dispatching."
msgstr ""

#: disnake.client.Client.add_view:10 of
msgid ""
"The message ID that the view is attached to. This is currently used to "
"refresh the view's state during message update events. If not given then "
"message update events are not propagated for the view."
msgstr ""

#: disnake.client.Client.add_view:15 of
msgid "A view was not passed."
msgstr ""

#: disnake.client.Client.add_view:16 of
msgid ""
"The view is not persistent. A persistent view has no timeout     and all "
"their components have an explicitly provided custom_id."
msgstr ""

#: disnake.Client.persistent_views:1 of
msgid "A sequence of persistent views added to the client."
msgstr ""

#: disnake.Client.persistent_views:5 of
msgid "Sequence[:class:`.View`]"
msgstr ""

#: disnake.client.Client.fetch_global_commands:3 of
msgid "Requests a list of global application commands."
msgstr ""

#: disnake.client.Client.fetch_global_commands:7
#: disnake.client.Client.fetch_guild_commands:10 of
msgid "A list of application commands."
msgstr ""

#: disnake.client.Client.fetch_global_command:3 of
msgid "Requests a global application command."
msgstr ""

#: disnake.client.Client.fetch_global_command:7
#: disnake.client.Client.fetch_guild_command:9 of
msgid "the ID of the command to request."
msgstr ""

#: disnake.client.Client.fetch_global_command:10
#: disnake.client.Client.fetch_guild_command:12 of
msgid "The requested application command."
msgstr ""

#: disnake.client.Client.create_global_command:3 of
msgid "Creates a global application command."
msgstr ""

#: disnake.client.Client.create_global_command:7
#: disnake.client.Client.create_guild_command:9 of
msgid "an object representing the application command."
msgstr ""

#: disnake.client.Client.create_global_command:10
#: disnake.client.Client.create_guild_command:12 of
msgid "The application command that was created."
msgstr ""

#: disnake.client.Client.edit_global_command:3 of
msgid "Edits a global application command."
msgstr ""

#: disnake.client.Client.edit_global_command:7
#: disnake.client.Client.edit_guild_command:9 of
msgid "the ID of the command to edit."
msgstr ""

#: disnake.client.Client.edit_global_command:9
#: disnake.client.Client.edit_guild_command:11 of
msgid "an object representing the edited command."
msgstr ""

#: disnake.client.Client.edit_global_command:12
#: disnake.client.Client.edit_guild_command:14 of
msgid "The edited application command."
msgstr ""

#: disnake.client.Client.delete_global_command:3 of
msgid "Deletes a global application command."
msgstr ""

#: disnake.client.Client.delete_global_command:7
#: disnake.client.Client.delete_guild_command:9 of
msgid "the ID of the command to delete."
msgstr ""

#: disnake.client.Client.bulk_overwrite_global_commands:3 of
msgid "Overwrites several global application commands in one API request."
msgstr ""

#: disnake.client.Client.bulk_overwrite_global_commands:7
#: disnake.client.Client.bulk_overwrite_guild_commands:9 of
msgid "a list of application commands to insert instead of the existing commands."
msgstr ""

#: disnake.client.Client.bulk_overwrite_global_commands:10
#: disnake.client.Client.bulk_overwrite_guild_commands:12 of
msgid "A list of registered application commands."
msgstr ""

#: disnake.client.Client.fetch_guild_commands:3 of
msgid "Requests a list of guild application commands."
msgstr ""

#: disnake.client.Client.fetch_guild_commands:7 of
msgid "the ID of the guild to fetch commands from."
msgstr ""

#: disnake.client.Client.fetch_guild_command:3 of
msgid "Requests a guild application command."
msgstr ""

#: disnake.client.Client.fetch_guild_command:7 of
msgid "the ID of the guild to fetch command from."
msgstr ""

#: disnake.client.Client.create_guild_command:3 of
msgid "Creates a guild application command."
msgstr ""

#: disnake.client.Client.create_guild_command:7 of
msgid "the ID of the guild where the command should be inserted."
msgstr ""

#: disnake.client.Client.edit_guild_command:3 of
msgid "Edits a guild application command."
msgstr ""

#: disnake.client.Client.edit_guild_command:7 of
msgid "the ID of the guild where the command should be edited."
msgstr ""

#: disnake.client.Client.delete_guild_command:3 of
msgid "Deletes a guild application command."
msgstr ""

#: disnake.client.Client.delete_guild_command:7 of
msgid "the ID of the guild where the command should be deleted."
msgstr ""

#: disnake.client.Client.bulk_overwrite_guild_commands:3 of
msgid "Overwrites several guild application commands in one API request."
msgstr ""

#: disnake.client.Client.bulk_overwrite_guild_commands:7 of
msgid "the ID of the guild where the commands should be overwritten."
msgstr ""

#: disnake.client.Client.bulk_fetch_command_permissions:3 of
msgid ""
"Requests a list of :class:`.GuildApplicationCommandPermissions` "
"configured for this guild."
msgstr ""

#: disnake.client.Client.bulk_fetch_command_permissions:7
#: disnake.client.Client.fetch_command_permissions:7 of
msgid "The ID of the guild to inspect."
msgstr ""

#: disnake.client.Client.fetch_command_permissions:3 of
msgid ""
"Requests :class:`.GuildApplicationCommandPermissions` for a specific "
"command."
msgstr ""

#: disnake.client.Client.fetch_command_permissions:9 of
msgid "The ID of the application command"
msgstr ""

#: disnake.client.Client.fetch_command_permissions:12
#: disnake.guild.Guild.fetch_command_permissions:10 of
msgid "The edited app command permissions."
msgstr ""

#: disnake.client.Client.edit_command_permissions:15
#: disnake.client.Client.fetch_command_permissions:13 of
msgid ":class:`.GuildApplicationCommandPermissions`"
msgstr ""

#: disnake.client.Client.edit_command_permissions:1
#: disnake.guild.Guild.edit_command_permissions:1 of
msgid "Edits guild permissions of a single command."
msgstr ""

#: disnake.client.Client.bulk_edit_command_permissions:7
#: disnake.client.Client.edit_command_permissions:3 of
msgid "The ID of the guild where the permissions should be applied."
msgstr ""

#: disnake.app_commands.PartialGuildApplicationCommandPermissions:3
#: disnake.client.Client.edit_command_permissions:5
#: disnake.guild.Guild.edit_command_permissions:3 of
msgid "The ID of the app command you want to apply these permissions to."
msgstr ""

#: disnake.app_commands.GuildApplicationCommandPermissions.edit:3
#: disnake.app_commands.PartialGuildApplicationCommandPermissions:5
#: disnake.app_commands.UnresolvedGuildApplicationCommandPermissions:4
#: disnake.client.Client.edit_command_permissions:7
#: disnake.guild.Guild.edit_command_permissions:5 of
msgid ""
"Roles or users to booleans. ``True`` means \"allow\", ``False`` means "
"\"deny\"."
msgstr ""

#: disnake.app_commands.GuildApplicationCommandPermissions.edit:5
#: disnake.app_commands.PartialGuildApplicationCommandPermissions:7
#: disnake.app_commands.UnresolvedGuildApplicationCommandPermissions:6
#: disnake.client.Client.edit_command_permissions:9
#: disnake.guild.Guild.edit_command_permissions:7 of
msgid "Role IDs to booleans."
msgstr ""

#: disnake.app_commands.GuildApplicationCommandPermissions.edit:7
#: disnake.app_commands.PartialGuildApplicationCommandPermissions:9
#: disnake.app_commands.UnresolvedGuildApplicationCommandPermissions:8
#: disnake.client.Client.edit_command_permissions:11
#: disnake.guild.Guild.edit_command_permissions:9 of
msgid "User IDs to booleans."
msgstr ""

#: disnake.client.Client.edit_command_permissions:14
#: disnake.guild.Guild.edit_command_permissions:12 of
msgid "The object representing the edited app command permissions."
msgstr ""

#: disnake.client.Client.bulk_edit_command_permissions:3
#: disnake.guild.Guild.bulk_edit_command_permissions:3 of
msgid "Edits guild permissions of multiple application commands at once."
msgstr ""

#: disnake.client.Client.bulk_edit_command_permissions:9
#: disnake.guild.Guild.bulk_edit_command_permissions:7 of
msgid "A list of partial permissions for each app command you want to edit."
msgstr ""

#: disnake.client.Client.bulk_edit_command_permissions:12
#: disnake.guild.Guild.bulk_edit_command_permissions:10 of
msgid "A list of edited permissions of application commands."
msgstr ""

#: disnake.client.Client.bulk_edit_command_permissions:13 of
msgid "List[:class:`.GuildApplicationCommandPermissions`]"
msgstr ""

#: ../../api.rst:52
msgid "AutoShardedClient"
msgstr ""

#: disnake.shard.AutoShardedClient:1 of
msgid ""
"A client similar to :class:`Client` except it handles the complications "
"of sharding for the user into a more manageable and transparent single "
"process bot."
msgstr ""

#: disnake.shard.AutoShardedClient:5 of
msgid ""
"When using this client, you will be able to use it as-if it was a regular"
" :class:`Client` with a single shard when implementation wise internally "
"it is split up into multiple shards. This allows you to not have to deal "
"with IPC or other complicated infrastructure."
msgstr ""

#: disnake.shard.AutoShardedClient:10 of
msgid ""
"It is recommended to use this client only if you have surpassed at least "
"1000 guilds."
msgstr ""

#: disnake.shard.AutoShardedClient:13 of
msgid ""
"If no :attr:`.shard_count` is provided, then the library will use the Bot"
" Gateway endpoint call to figure out how many shards to use."
msgstr ""

#: disnake.shard.AutoShardedClient:16 of
msgid ""
"If a ``shard_ids`` parameter is given, then those shard IDs will be used "
"to launch the internal shards. Note that :attr:`.shard_count` must be "
"provided if this is used. By default, when omitted, the client will "
"launch shards from 0 to ``shard_count - 1``."
msgstr ""

#: disnake.shard.AutoShardedClient:23 of
msgid "An optional list of shard_ids to launch the shards with."
msgstr ""

#: disnake.shard.AutoShardedClient:25 of
msgid "Optional[List[:class:`int`]]"
msgstr ""

#: disnake.AutoShardedClient.latency:3 of
msgid ""
"This operates similarly to :meth:`Client.latency` except it uses the "
"average latency of every shard's latency. To get a list of shard latency,"
" check the :attr:`latencies` property. Returns ``nan`` if there are no "
"shards ready."
msgstr ""

#: disnake.AutoShardedClient.latencies:1 of
msgid "A list of latencies between a HEARTBEAT and a HEARTBEAT_ACK in seconds."
msgstr ""

#: disnake.AutoShardedClient.latencies:3 of
msgid "This returns a list of tuples with elements ``(shard_id, latency)``."
msgstr ""

#: disnake.AutoShardedClient.latencies:5 of
msgid "List[Tuple[:class:`int`, :class:`float`]]"
msgstr ""

#: disnake.shard.AutoShardedClient.get_shard:1 of
msgid ""
"Optional[:class:`ShardInfo`]: Gets the shard information at a given shard"
" ID or ``None`` if not found."
msgstr ""

#: disnake.AutoShardedClient.shards:1 of
msgid "Returns a mapping of shard IDs to their respective info object."
msgstr ""

#: disnake.AutoShardedClient.shards:3 of
msgid "Mapping[int, :class:`ShardInfo`]"
msgstr ""

#: disnake.shard.AutoShardedClient.change_presence:5 of
msgid "Example: ::"
msgstr ""

#: disnake.shard.AutoShardedClient.change_presence:15 of
msgid ""
"Indicates what status to change to. If ``None``, then "
":attr:`Status.online` is used."
msgstr ""

#: disnake.shard.AutoShardedClient.change_presence:18 of
msgid ""
"The shard_id to change the presence to. If not specified or ``None``, "
"then it will change the presence of every shard the bot can see."
msgstr ""

#: disnake.shard.AutoShardedClient.change_presence:23 of
msgid "If the ``activity`` parameter is not of proper type."
msgstr ""

#: disnake.shard.AutoShardedClient.is_ws_ratelimited:6 of
msgid ""
"This implementation checks if any of the shards are rate limited. For "
"more granular control, consider :meth:`ShardInfo.is_ws_ratelimited`."
msgstr ""

#: ../../api.rst:60
msgid "Application Info"
msgstr ""

#: ../../api.rst:63
msgid "AppInfo"
msgstr ""

#: disnake.appinfo.AppInfo:1 of
msgid "Represents the application info for the bot provided by Discord."
msgstr ""

#: disnake.appinfo.AppInfo:6 disnake.appinfo.PartialAppInfo:7 of
msgid "The application ID."
msgstr ""

#: ../../api.rst:3024 ../../api.rst:3030 ../../api.rst:3075 ../../api.rst:3089
#: ../../api.rst:3111 ../../api.rst:3229 ../../api.rst:3237 ../../api.rst:3245
#: ../../api.rst:3266 ../../api.rst:3283 ../../api.rst:3352 ../../api.rst:3358
#: disnake.Colour.b:3 disnake.Colour.g:3 disnake.Colour.r:3
#: disnake.DeletedReferencedMessage.channel_id:3
#: disnake.DeletedReferencedMessage.id:3 disnake.Guild.emoji_limit:3
#: disnake.Guild.filesize_limit:3 disnake.Guild.member_count:8
#: disnake.Guild.shard_id:3 disnake.Guild.sticker_limit:5
#: disnake.abc.GuildChannel:29 disnake.abc.Snowflake:13
#: disnake.app_commands.ApplicationCommandPermissions:7
#: disnake.app_commands.ApplicationCommandPermissions:13
#: disnake.app_commands.GuildApplicationCommandPermissions:7
#: disnake.app_commands.GuildApplicationCommandPermissions:13
#: disnake.app_commands.GuildApplicationCommandPermissions:19
#: disnake.appinfo.AppInfo:8 disnake.appinfo.PartialAppInfo:9
#: disnake.asset.AssetMixin.save:18 disnake.audit_logs.AuditLogEntry:39
#: disnake.channel.CategoryChannel:39 disnake.channel.CategoryChannel:46
#: disnake.channel.DMChannel:39 disnake.channel.GroupChannel:37
#: disnake.channel.GroupChannel:51 disnake.channel.PartialMessageable:28
#: disnake.channel.StageChannel:39 disnake.channel.StageChannel:58
#: disnake.channel.StageChannel:64 disnake.channel.StageChannel:70
#: disnake.channel.StoreChannel:37 disnake.channel.StoreChannel:43
#: disnake.channel.StoreChannel:50 disnake.channel.TextChannel:37
#: disnake.channel.TextChannel:56 disnake.channel.TextChannel:72
#: disnake.channel.TextChannel:90 disnake.channel.VoiceChannel:37
#: disnake.channel.VoiceChannel:50 disnake.channel.VoiceChannel:56
#: disnake.channel.VoiceChannel:62 disnake.colour.Colour:32
#: disnake.components.SelectMenu:30 disnake.components.SelectMenu:37
#: disnake.emoji.Emoji:39 disnake.emoji.Emoji:63
#: disnake.errors.ConnectionClosed:8 disnake.errors.HTTPException:21
#: disnake.errors.HTTPException:27 disnake.flags.ApplicationFlags:27
#: disnake.flags.Intents:37 disnake.flags.MemberCacheFlags:40
#: disnake.flags.MessageFlags:29 disnake.flags.PublicUserFlags:28
#: disnake.flags.SystemChannelFlags:32 disnake.guild.Guild:54
#: disnake.guild.Guild:66 disnake.guild.Guild:72 disnake.guild.Guild:120
#: disnake.guild.Guild:186 disnake.guild.Guild:192
#: disnake.guild.Guild.estimate_pruned_members:20
#: disnake.integrations.BotIntegration:9 disnake.integrations.Integration:9
#: disnake.integrations.IntegrationApplication:9
#: disnake.integrations.StreamIntegration:9
#: disnake.integrations.StreamIntegration:57
#: disnake.interactions.application_command.ApplicationCommandInteraction:11
#: disnake.interactions.application_command.ApplicationCommandInteraction:35
#: disnake.interactions.application_command.ApplicationCommandInteractionData:9
#: disnake.interactions.application_command.ApplicationCommandInteractionData:39
#: disnake.interactions.base.Interaction:12
#: disnake.interactions.base.Interaction:36
#: disnake.interactions.message.MessageInteraction:11
#: disnake.interactions.message.MessageInteraction:29 disnake.invite.Invite:53
#: disnake.invite.Invite:90 disnake.invite.Invite:97
#: disnake.invite.PartialInviteChannel:34 disnake.invite.PartialInviteGuild:34
#: disnake.message.Attachment:28 disnake.message.Attachment:34
#: disnake.message.Attachment.save:24 disnake.message.InteractionReference:12
#: disnake.message.Message:128 disnake.message.MessageReference:18
#: disnake.message.PartialMessage:39 disnake.object.Object:32
#: disnake.opus.OpusError:7 disnake.permissions.Permissions:46
#: disnake.raw_models.RawBulkMessageDeleteEvent:13
#: disnake.raw_models.RawIntegrationDeleteEvent:9
#: disnake.raw_models.RawIntegrationDeleteEvent:21
#: disnake.raw_models.RawMessageDeleteEvent:7
#: disnake.raw_models.RawMessageDeleteEvent:19
#: disnake.raw_models.RawMessageUpdateEvent:7
#: disnake.raw_models.RawMessageUpdateEvent:15
#: disnake.raw_models.RawReactionActionEvent:8
#: disnake.raw_models.RawReactionActionEvent:14
#: disnake.raw_models.RawReactionActionEvent:20
#: disnake.raw_models.RawReactionClearEmojiEvent:9
#: disnake.raw_models.RawReactionClearEmojiEvent:15
#: disnake.raw_models.RawReactionClearEvent:7
#: disnake.raw_models.RawReactionClearEvent:13 disnake.reaction.Reaction:36
#: disnake.role.Role:41 disnake.role.Role:74 disnake.shard.ShardInfo:12
#: disnake.stage_instance.StageInstance:23
#: disnake.stage_instance.StageInstance:35 disnake.sticker.GuildSticker:29
#: disnake.sticker.GuildSticker:53 disnake.sticker.StandardSticker:29
#: disnake.sticker.StandardSticker:41 disnake.sticker.StandardSticker:59
#: disnake.sticker.Sticker:29 disnake.sticker.Sticker:41
#: disnake.sticker.StickerItem:29 disnake.sticker.StickerPack:35
#: disnake.sticker.StickerPack:47 disnake.sticker.StickerPack:53
#: disnake.team.Team:7 disnake.team.Team:19 disnake.team.TeamMember:33
#: disnake.template.Template:15 disnake.threads.Thread:39
#: disnake.threads.Thread:45 disnake.threads.Thread:67
#: disnake.threads.Thread:118 disnake.threads.ThreadMember:27
#: disnake.threads.ThreadMember:33 disnake.ui.Select.max_values:3
#: disnake.ui.Select.min_values:3 disnake.user.ClientUser:31
#: disnake.user.User:31 disnake.webhook.async_.PartialWebhookChannel:11
#: disnake.webhook.async_.PartialWebhookGuild:11
#: disnake.webhook.async_.Webhook:49 disnake.webhook.sync.SyncWebhook:26
#: disnake.widget.Widget:21 disnake.widget.WidgetChannel:25
#: disnake.widget.WidgetChannel:37 disnake.widget.WidgetMember:25 of
msgid ":class:`int`"
msgstr ""

#: disnake.appinfo.AppInfo:12 disnake.appinfo.PartialAppInfo:13 of
msgid "The application name."
msgstr ""

#: ../../api.rst:2936 ../../api.rst:3083 ../../api.rst:3103 ../../api.rst:3204
#: ../../api.rst:3316 ../../api.rst:3324 ../../docstring disnake.Asset.key:3
#: disnake.Asset.url:3 disnake.CategoryChannel.mention:3
#: disnake.ClientUser.display_name:7 disnake.ClientUser.mention:3
#: disnake.Emoji.url:3 disnake.Invite.id:3 disnake.Invite.url:3
#: disnake.Member.display_name:7 disnake.Member.mention:3
#: disnake.Member.raw_status:5 disnake.Message.clean_content:15
#: disnake.Message.jump_url:3 disnake.Message.system_content:8
#: disnake.MessageReference.jump_url:5 disnake.PartialEmoji.url:5
#: disnake.PartialInviteChannel.mention:3 disnake.PartialMessage.jump_url:3
#: disnake.Role.mention:3 disnake.Spotify.album:3
#: disnake.Spotify.album_cover_url:3 disnake.Spotify.artist:6
#: disnake.Spotify.name:3 disnake.Spotify.party_id:3 disnake.Spotify.title:3
#: disnake.Spotify.track_id:3 disnake.Spotify.track_url:5
#: disnake.StageChannel.mention:3 disnake.StoreChannel.mention:3
#: disnake.SyncWebhook.url:3 disnake.Template.url:5
#: disnake.TextChannel.mention:3 disnake.Thread.mention:3
#: disnake.User.display_name:7 disnake.User.mention:3
#: disnake.VoiceChannel.mention:3 disnake.Webhook.url:3
#: disnake.Widget.json_url:3 disnake.WidgetChannel.mention:3
#: disnake.WidgetMember.display_name:3 disnake.WidgetMember.mention:3
#: disnake.abc.GuildChannel:16 disnake.abc.GuildChannel.mention:3
#: disnake.abc.User:15 disnake.abc.User:21 disnake.abc.User.display_name:3
#: disnake.abc.User.mention:3 disnake.activity.Game:30
#: disnake.activity.Streaming:55 disnake.appinfo.AppInfo:14
#: disnake.appinfo.AppInfo:34 disnake.appinfo.AppInfo:63
#: disnake.appinfo.AppInfo:72 disnake.appinfo.PartialAppInfo:15
#: disnake.appinfo.PartialAppInfo:21 disnake.appinfo.PartialAppInfo:34
#: disnake.appinfo.PartialAppInfo:41 disnake.channel.CategoryChannel:27
#: disnake.channel.StageChannel:27 disnake.channel.StoreChannel:25
#: disnake.channel.TextChannel:25 disnake.channel.VoiceChannel:25
#: disnake.components.SelectOption:12 disnake.components.SelectOption:20
#: disnake.embeds.Embed:30 disnake.embeds.Embed:39 disnake.embeds.Embed:46
#: disnake.embeds.Embed:53 disnake.emoji.Emoji:33
#: disnake.errors.ConnectionClosed:14 disnake.errors.HTTPException:15
#: disnake.guild.Guild:27 disnake.integrations.BotIntegration:15
#: disnake.integrations.BotIntegration:27 disnake.integrations.Integration:15
#: disnake.integrations.Integration:27
#: disnake.integrations.IntegrationAccount:9
#: disnake.integrations.IntegrationAccount:15
#: disnake.integrations.IntegrationApplication:15
#: disnake.integrations.IntegrationApplication:27
#: disnake.integrations.IntegrationApplication:33
#: disnake.integrations.StreamIntegration:15
#: disnake.integrations.StreamIntegration:27
#: disnake.interactions.application_command.ApplicationCommandInteraction:90
#: disnake.interactions.application_command.ApplicationCommandInteractionData:15
#: disnake.interactions.application_command.ApplicationCommandInteractionDataOption:7
#: disnake.interactions.base.Interaction:49
#: disnake.interactions.message.MessageInteraction:90
#: disnake.interactions.message.MessageInteractionData:9
#: disnake.invite.Invite:59 disnake.invite.PartialInviteChannel:28
#: disnake.invite.PartialInviteGuild:28 disnake.message.Attachment:52
#: disnake.message.Attachment:59 disnake.message.Attachment:67
#: disnake.message.InteractionReference:24 disnake.message.Message:43
#: disnake.raw_models.RawReactionActionEvent:50 disnake.role.Role:47
#: disnake.stage_instance.StageInstance:41 disnake.sticker.GuildSticker:23
#: disnake.sticker.GuildSticker:35 disnake.sticker.GuildSticker:66
#: disnake.sticker.StandardSticker:23 disnake.sticker.StandardSticker:35
#: disnake.sticker.Sticker:23 disnake.sticker.Sticker:35
#: disnake.sticker.Sticker:53 disnake.sticker.StickerItem:23
#: disnake.sticker.StickerItem:41 disnake.sticker.StickerPack:23
#: disnake.sticker.StickerPack:29 disnake.team.Team:13
#: disnake.team.TeamMember:27 disnake.team.TeamMember:39
#: disnake.template.Template:9 disnake.template.Template:21
#: disnake.template.Template:27 disnake.threads.Thread:27
#: disnake.ui.Select.custom_id:3 disnake.user.ClientUser:25
#: disnake.user.ClientUser:37 disnake.user.User:25 disnake.user.User:37
#: disnake.utils.escape_markdown:18 disnake.utils.escape_mentions:17
#: disnake.utils.format_dt:34 disnake.utils.oauth_url:23
#: disnake.utils.remove_markdown:17 disnake.utils.resolve_invite:7
#: disnake.utils.resolve_template:9 disnake.voice_client.VoiceClient:17
#: disnake.voice_client.VoiceClient:23 disnake.voice_client.VoiceClient:29
#: disnake.webhook.async_.PartialWebhookChannel:17
#: disnake.webhook.async_.PartialWebhookGuild:17 disnake.widget.Widget:27
#: disnake.widget.WidgetChannel:31 disnake.widget.WidgetMember:31
#: disnake.widget.WidgetMember:37 of
msgid ":class:`str`"
msgstr ""

#: disnake.appinfo.AppInfo:18 of
msgid "The application owner."
msgstr ""

#: ../../api.rst:3709 disnake.appinfo.AppInfo:20
#: disnake.integrations.BotIntegration:39 disnake.integrations.Integration:45
#: disnake.integrations.StreamIntegration:63
#: disnake.message.InteractionReference:30 disnake.template.Template:33 of
msgid ":class:`User`"
msgstr ""

#: disnake.appinfo.AppInfo:24 of
msgid "The application's team."
msgstr ""

#: disnake.appinfo.AppInfo:28 of
msgid "Optional[:class:`Team`]"
msgstr ""

#: disnake.appinfo.AppInfo:32 disnake.appinfo.PartialAppInfo:19 of
msgid "The application description."
msgstr ""

#: disnake.appinfo.AppInfo:38 of
msgid ""
"Whether the bot can be invited by anyone or if it is locked to the "
"application owner."
msgstr ""

#: disnake.appinfo.AppInfo:45 of
msgid ""
"Whether the bot requires the completion of the full oauth2 code grant "
"flow to join."
msgstr ""

#: disnake.appinfo.AppInfo:52 disnake.appinfo.PartialAppInfo:25 of
msgid "A list of RPC origin URLs, if RPC is enabled."
msgstr ""

#: disnake.MessageInteraction.values:3 disnake.appinfo.AppInfo:54
#: disnake.appinfo.PartialAppInfo:27
#: disnake.interactions.message.MessageInteractionData:21 of
msgid "Optional[List[:class:`str`]]"
msgstr ""

#: disnake.appinfo.AppInfo:58 disnake.appinfo.PartialAppInfo:31 of
msgid ""
"If this application is a game sold on Discord, this field will be the "
"summary field for the store page of its primary SKU."
msgstr ""

#: disnake.appinfo.AppInfo:67 disnake.appinfo.PartialAppInfo:38 of
msgid ""
"The hex encoded key for verification in interactions and the GameSDK's "
"`GetTicket <https://discord.com/developers/docs/game-"
"sdk/applications#getticket>`_."
msgstr ""

#: disnake.appinfo.AppInfo:76 of
msgid ""
"If this application is a game sold on Discord, this field will be the "
"guild to which it has been linked to."
msgstr ""

#: disnake.appinfo.AppInfo:85 of
msgid ""
"If this application is a game sold on Discord, this field will be the id "
"of the \"Game SKU\" that is created, if it exists."
msgstr ""

#: disnake.appinfo.AppInfo:95 of
msgid ""
"If this application is a game sold on Discord, this field will be the URL"
" slug that links to the store page."
msgstr ""

#: ../../api.rst:3147 ../../api.rst:3704 disnake.Activity.large_image_text:3
#: disnake.Activity.large_image_url:3 disnake.Activity.small_image_text:3
#: disnake.Activity.small_image_url:3 disnake.Streaming.twitch_name:6
#: disnake.Widget.invite_url:3 disnake.activity.Activity:22
#: disnake.activity.Activity:28 disnake.activity.Activity:40
#: disnake.activity.Activity:46 disnake.activity.CustomActivity:27
#: disnake.activity.Streaming:29 disnake.activity.Streaming:35
#: disnake.activity.Streaming:41 disnake.activity.Streaming:49
#: disnake.appinfo.AppInfo:100 disnake.appinfo.AppInfo:108
#: disnake.appinfo.AppInfo:116 disnake.appinfo.PartialAppInfo:47
#: disnake.appinfo.PartialAppInfo:53 disnake.audit_logs.AuditLogEntry:52
#: disnake.channel.GroupChannel:57 disnake.channel.StageChannel:45
#: disnake.channel.TextChannel:49 disnake.components.Button:23
#: disnake.components.Button:29 disnake.components.Button:41
#: disnake.components.SelectMenu:17 disnake.components.SelectMenu:23
#: disnake.components.SelectOption:27 disnake.file.File:30
#: disnake.guild.Guild:112 disnake.guild.Guild:199
#: disnake.integrations.IntegrationApplication:21
#: disnake.invite.PartialInviteGuild:52 disnake.member.Member:54
#: disnake.message.Attachment:75 disnake.partial_emoji.PartialEmoji:32
#: disnake.team.TeamMember:45 disnake.ui.Button.custom_id:5
#: disnake.ui.Button.label:3 disnake.ui.Button.url:3
#: disnake.ui.Select.placeholder:3 disnake.user.ClientUser:63
#: disnake.webhook.async_.Webhook:64 disnake.webhook.async_.Webhook:89
#: disnake.webhook.sync.SyncWebhook:41 disnake.webhook.sync.SyncWebhook:66
#: disnake.widget.WidgetMember:55 disnake.widget.WidgetMember:61 of
msgid "Optional[:class:`str`]"
msgstr ""

#: disnake.appinfo.AppInfo:104 disnake.appinfo.PartialAppInfo:45 of
msgid "The application's terms of service URL, if set."
msgstr ""

#: disnake.appinfo.AppInfo:112 disnake.appinfo.PartialAppInfo:51 of
msgid "The application's privacy policy URL, if set."
msgstr ""

#: disnake.AppInfo.icon:1 disnake.PartialAppInfo.icon:1 of
msgid "Retrieves the application's icon asset, if any."
msgstr ""

#: disnake.AppInfo.cover_image:5 disnake.AppInfo.icon:3
#: disnake.PartialAppInfo.icon:3 disnake.Team.icon:3 of
msgid "Optional[:class:`.Asset`]"
msgstr ""

#: disnake.AppInfo.cover_image:1 of
msgid "Retrieves the cover image on a store embed, if any."
msgstr ""

#: disnake.AppInfo.cover_image:3 of
msgid "This is only available if the application is a game sold on Discord."
msgstr ""

#: disnake.AppInfo.guild:1 of
msgid ""
"If this application is a game sold on Discord, this field will be the "
"guild to which it has been linked"
msgstr ""

#: ../../docstring disnake.AppInfo.guild:6 disnake.GuildSticker.guild:6
#: disnake.Interaction.guild:3 disnake.PartialMessage.guild:3
#: disnake.SyncWebhook.guild:5 disnake.VoiceClient.guild:3
#: disnake.Webhook.guild:5
#: disnake.interactions.application_command.ApplicationCommandInteraction:47
#: disnake.interactions.message.MessageInteraction:41
#: disnake.message.Message:209 of
msgid "Optional[:class:`Guild`]"
msgstr ""

#: ../../api.rst:71
msgid "PartialAppInfo"
msgstr ""

#: disnake.appinfo.PartialAppInfo:1 of
msgid ""
"Represents a partial AppInfo given by "
":func:`~disnake.abc.GuildChannel.create_invite`"
msgstr ""

#: ../../api.rst:79
msgid "Team"
msgstr ""

#: disnake.team.Team:1 of
msgid "Represents an application team for a bot provided by Discord."
msgstr ""

#: disnake.team.Team:5 of
msgid "The team ID."
msgstr ""

#: disnake.team.Team:11 of
msgid "The team name"
msgstr ""

#: disnake.team.Team:17 of
msgid "The team's owner ID."
msgstr ""

#: disnake.team.Team:23 of
msgid "A list of the members in the team"
msgstr ""

#: disnake.team.Team:27 of
msgid "List[:class:`TeamMember`]"
msgstr ""

#: disnake.Team.icon:1 of
msgid "Retrieves the team's icon asset, if any."
msgstr ""

#: disnake.Team.owner:1 of
msgid "The team's owner."
msgstr ""

#: disnake.Team.owner:3 of
msgid "Optional[:class:`TeamMember`]"
msgstr ""

#: ../../api.rst:87
msgid "TeamMember"
msgstr ""

#: disnake.team.TeamMember:1 of
msgid "Represents a team member in a team."
msgstr ""

#: disnake.team.TeamMember:7 of
msgid "Checks if two team members are equal."
msgstr ""

#: disnake.team.TeamMember:11 of
msgid "Checks if two team members are not equal."
msgstr ""

#: disnake.team.TeamMember:15 of
msgid "Return the team member's hash."
msgstr ""

#: disnake.team.TeamMember:19 of
msgid "Returns the team member's name with discriminator."
msgstr ""

#: disnake.team.TeamMember:25 of
msgid "The team member's username."
msgstr ""

#: disnake.team.TeamMember:31 of
msgid "The team member's unique ID."
msgstr ""

#: disnake.team.TeamMember:37 of
msgid ""
"The team member's discriminator. This is given when the username has "
"conflicts."
msgstr ""

#: disnake.team.TeamMember:43 of
msgid "The avatar hash the team member has. Could be None."
msgstr ""

#: disnake.team.TeamMember:49 disnake.user.ClientUser:41 disnake.user.User:41
#: of
msgid "Specifies if the user is a bot account."
msgstr ""

#: disnake.team.TeamMember:55 of
msgid "The team that the member is from."
msgstr ""

#: disnake.team.TeamMember:57 of
msgid ":class:`Team`"
msgstr ""

#: disnake.team.TeamMember:61 of
msgid "The membership state of the member (e.g. invited or accepted)"
msgstr ""

#: disnake.team.TeamMember:63 of
msgid ":class:`TeamMembershipState`"
msgstr ""

#: ../../api.rst:95
msgid "Voice Related"
msgstr ""

#: ../../api.rst:98
msgid "VoiceClient"
msgstr ""

#: disnake.voice_client.VoiceClient:1 of
msgid "Represents a Discord voice connection."
msgstr ""

#: disnake.voice_client.VoiceClient:3 of
msgid ""
"You do not create these, you typically get them from e.g. "
":meth:`VoiceChannel.connect`."
msgstr ""

#: disnake.voice_client.VoiceClient:8 of
msgid ""
"In order to use PCM based AudioSources, you must have the opus library "
"installed on your system and loaded through :func:`opus.load_opus`. "
"Otherwise, your AudioSources must be opus encoded (e.g. using "
":class:`FFmpegOpusAudio`) or the library will not be able to transmit "
"audio."
msgstr ""

#: disnake.voice_client.VoiceClient:15 of
msgid "The voice connection session ID."
msgstr ""

#: disnake.voice_client.VoiceClient:21 of
msgid "The voice connection token."
msgstr ""

#: disnake.voice_client.VoiceClient:27 of
msgid "The endpoint we are connecting to."
msgstr ""

#: disnake.voice_client.VoiceClient:33 of
msgid "The voice channel connected to."
msgstr ""

#: disnake.voice_client.VoiceClient:35 of
msgid ":class:`abc.Connectable`"
msgstr ""

#: disnake.voice_client.VoiceClient:39 of
msgid "The event loop that the voice client is running on."
msgstr ""

#: disnake.VoiceClient.guild:1 of
msgid "The guild we're connected to, if applicable."
msgstr ""

#: disnake.VoiceClient.user:1 of
msgid "The user connected to voice (i.e. ourselves)."
msgstr ""

#: disnake.VoiceClient.user:3 disnake.channel.DMChannel:33
#: disnake.channel.GroupChannel:31 disnake.user.ClientUser.edit:27 of
msgid ":class:`ClientUser`"
msgstr ""

#: disnake.VoiceClient.latency:1 of
msgid "Latency between a HEARTBEAT and a HEARTBEAT_ACK in seconds."
msgstr ""

#: disnake.VoiceClient.latency:3 of
msgid ""
"This could be referred to as the Discord Voice WebSocket latency and is "
"an analogue of user's voice latencies as seen in the Discord client."
msgstr ""

#: disnake.VoiceClient.average_latency:1 of
msgid "Average of most recent 20 HEARTBEAT latencies in seconds."
msgstr ""

#: disnake.voice_client.VoiceClient.disconnect:3 of
msgid "Disconnects this voice client from voice."
msgstr ""

#: disnake.voice_client.VoiceClient.move_to:3 of
msgid "Moves you to a different voice channel."
msgstr ""

#: disnake.voice_client.VoiceClient.move_to:5 of
msgid "The channel to move to. Must be a voice channel."
msgstr ""

#: disnake.voice_client.VoiceClient.is_connected:1 of
msgid "Indicates if the voice client is connected to voice."
msgstr ""

#: disnake.voice_client.VoiceClient.play:1 of
msgid "Plays an :class:`AudioSource`."
msgstr ""

#: disnake.voice_client.VoiceClient.play:3 of
msgid ""
"The finalizer, ``after`` is called after the source has been exhausted or"
" an error occurred."
msgstr ""

#: disnake.voice_client.VoiceClient.play:6 of
msgid ""
"If an error happens while the audio player is running, the exception is "
"caught and the audio player is then stopped.  If no after callback is "
"passed, any caught exception will be displayed as if it were raised."
msgstr ""

#: disnake.voice_client.VoiceClient.play:10 of
msgid "The audio source we're reading from."
msgstr ""

#: disnake.voice_client.VoiceClient.play:12 of
msgid ""
"The finalizer that is called after the stream is exhausted. This function"
" must have a single parameter, ``error``, that denotes an optional "
"exception that was raised during playing."
msgstr ""

#: disnake.voice_client.VoiceClient.play:17 of
msgid "Already playing audio or not connected."
msgstr ""

#: disnake.voice_client.VoiceClient.play:18 of
msgid "Source is not a :class:`AudioSource` or after is not a callable."
msgstr ""

#: disnake.voice_client.VoiceClient.play:19 of
msgid "Source is not opus encoded and opus is not loaded."
msgstr ""

#: disnake.voice_client.VoiceClient.is_playing:1 of
msgid "Indicates if we're currently playing audio."
msgstr ""

#: disnake.voice_client.VoiceClient.is_paused:1 of
msgid "Indicates if we're playing audio, but if we're paused."
msgstr ""

#: disnake.voice_client.VoiceClient.stop:1 of
msgid "Stops playing audio."
msgstr ""

#: disnake.voice_client.VoiceClient.pause:1 of
msgid "Pauses the audio playing."
msgstr ""

#: disnake.voice_client.VoiceClient.resume:1 of
msgid "Resumes the audio playing."
msgstr ""

#: disnake.VoiceClient.source:1 of
msgid "The audio source being played, if playing."
msgstr ""

#: disnake.VoiceClient.source:3 of
msgid ""
"This property can also be used to change the audio source currently being"
" played."
msgstr ""

#: disnake.VoiceClient.source:5 of
msgid "Optional[:class:`AudioSource`]"
msgstr ""

#: disnake.voice_client.VoiceClient.send_audio_packet:1 of
msgid "Sends an audio packet composed of the data."
msgstr ""

#: disnake.voice_client.VoiceClient.send_audio_packet:3 of
msgid "You must be connected to play audio."
msgstr ""

#: disnake.voice_client.VoiceClient.send_audio_packet:5 of
msgid "The :term:`py:bytes-like object` denoting PCM or Opus voice data."
msgstr ""

#: disnake.voice_client.VoiceClient.send_audio_packet:7 of
msgid "Indicates if ``data`` should be encoded into Opus."
msgstr ""

#: disnake.voice_client.VoiceClient.send_audio_packet:10 of
msgid "You are not connected."
msgstr ""

#: disnake.voice_client.VoiceClient.send_audio_packet:11 of
msgid "Encoding the data failed."
msgstr ""

#: ../../api.rst:107
msgid "VoiceProtocol"
msgstr ""

#: disnake.voice_client.VoiceProtocol:1 of
msgid "A class that represents the Discord voice protocol."
msgstr ""

#: disnake.voice_client.VoiceProtocol:3 of
msgid ""
"This is an abstract class. The library provides a concrete implementation"
" under :class:`VoiceClient`."
msgstr ""

#: disnake.voice_client.VoiceProtocol:6 of
msgid ""
"This class allows you to implement a protocol to allow for an external "
"method of sending voice, such as Lavalink_ or a native library "
"implementation."
msgstr ""

#: disnake.voice_client.VoiceProtocol:9 of
msgid ""
"These classes are passed to :meth:`abc.Connectable.connect "
"<VoiceChannel.connect>`."
msgstr ""

#: disnake.voice_client.VoiceProtocol:13 of
msgid "The client (or its subclasses) that started the connection request."
msgstr ""

#: disnake.voice_client.VoiceProtocol:15 of
msgid "The voice channel that is being connected to."
msgstr ""

#: disnake.voice_client.VoiceProtocol.on_voice_state_update:3 of
msgid ""
"An abstract method that is called when the client's voice state has "
"changed. This corresponds to ``VOICE_STATE_UPDATE``."
msgstr ""

#: disnake.voice_client.VoiceProtocol.on_voice_state_update:6 of
msgid ""
"The raw `voice state payload`__.  .. _voice_state_update_payload: "
"https://discord.com/developers/docs/resources/voice#voice-state-object  "
"__ voice_state_update_payload_"
msgstr ""

#: disnake.voice_client.VoiceProtocol.on_voice_state_update:6 of
msgid "The raw `voice state payload`__."
msgstr ""

#: disnake.voice_client.VoiceProtocol.on_voice_server_update:3 of
msgid ""
"An abstract method that is called when initially connecting to voice. "
"This corresponds to ``VOICE_SERVER_UPDATE``."
msgstr ""

#: disnake.voice_client.VoiceProtocol.on_voice_server_update:6 of
msgid ""
"The raw `voice server update payload`__.  .. "
"_voice_server_update_payload: "
"https://discord.com/developers/docs/topics/gateway#voice-server-update-"
"voice-server-update-event-fields  __ voice_server_update_payload_"
msgstr ""

#: disnake.voice_client.VoiceProtocol.on_voice_server_update:6 of
msgid "The raw `voice server update payload`__."
msgstr ""

#: disnake.voice_client.VoiceProtocol.connect:3 of
msgid ""
"An abstract method called when the client initiates the connection "
"request."
msgstr ""

#: disnake.voice_client.VoiceProtocol.connect:5 of
msgid ""
"When a connection is requested initially, the library calls the "
"constructor under ``__init__`` and then calls :meth:`connect`. If "
":meth:`connect` fails at some point then :meth:`disconnect` is called."
msgstr ""

#: disnake.voice_client.VoiceProtocol.connect:9 of
msgid ""
"Within this method, to start the voice connection flow it is recommended "
"to use :meth:`Guild.change_voice_state` to start the flow. After which, "
":meth:`on_voice_server_update` and :meth:`on_voice_state_update` will be "
"called. The order that these two are called is unspecified."
msgstr ""

#: disnake.voice_client.VoiceProtocol.connect:14 of
msgid "The timeout for the connection."
msgstr ""

#: disnake.voice_client.VoiceProtocol.connect:16 of
msgid "Whether reconnection is expected."
msgstr ""

#: disnake.voice_client.VoiceProtocol.disconnect:3 of
msgid "An abstract method called when the client terminates the connection."
msgstr ""

#: disnake.voice_client.VoiceProtocol.disconnect:5 of
msgid "See :meth:`cleanup`."
msgstr ""

#: disnake.voice_client.VoiceProtocol.disconnect:7 of
msgid "Whether the disconnection was forced."
msgstr ""

#: disnake.voice_client.VoiceProtocol.cleanup:1 of
msgid ""
"This method *must* be called to ensure proper clean-up during a "
"disconnect."
msgstr ""

#: disnake.voice_client.VoiceProtocol.cleanup:3 of
msgid ""
"It is advisable to call this from within :meth:`disconnect` when you are "
"completely done with the voice protocol instance."
msgstr ""

#: disnake.voice_client.VoiceProtocol.cleanup:6 of
msgid ""
"This method removes it from the internal state cache that keeps track of "
"currently alive voice clients. Failure to clean-up will cause subsequent "
"connections to report that it's still connected."
msgstr ""

#: ../../api.rst:115
msgid "AudioSource"
msgstr ""

#: disnake.player.AudioSource:1 of
msgid "Represents an audio stream."
msgstr ""

#: disnake.player.AudioSource:3 of
msgid ""
"The audio stream can be Opus encoded or not, however if the audio stream "
"is not Opus encoded then the audio format must be 16-bit 48KHz stereo "
"PCM."
msgstr ""

#: disnake.player.AudioSource:8 of
msgid "The audio source reads are done in a separate thread."
msgstr ""

#: disnake.player.AudioSource.read:1 disnake.player.FFmpegOpusAudio.read:1
#: disnake.player.FFmpegPCMAudio.read:1 disnake.player.PCMAudio.read:1
#: disnake.player.PCMVolumeTransformer.read:1 of
msgid "Reads 20ms worth of audio."
msgstr ""

#: disnake.player.AudioSource.read:3 disnake.player.FFmpegOpusAudio.read:3
#: disnake.player.FFmpegPCMAudio.read:3 disnake.player.PCMAudio.read:3
#: disnake.player.PCMVolumeTransformer.read:3 of
msgid "Subclasses must implement this."
msgstr ""

#: disnake.player.AudioSource.read:5 disnake.player.FFmpegOpusAudio.read:5
#: disnake.player.FFmpegPCMAudio.read:5 disnake.player.PCMAudio.read:5
#: disnake.player.PCMVolumeTransformer.read:5 of
msgid ""
"If the audio is complete, then returning an empty :term:`py:bytes-like "
"object` to signal this is the way to do so."
msgstr ""

#: disnake.player.AudioSource.read:8 disnake.player.FFmpegOpusAudio.read:8
#: disnake.player.FFmpegPCMAudio.read:8 disnake.player.PCMAudio.read:8
#: disnake.player.PCMVolumeTransformer.read:8 of
msgid ""
"If :meth:`~AudioSource.is_opus` method returns ``True``, then it must "
"return 20ms worth of Opus encoded audio. Otherwise, it must be 20ms worth"
" of 16-bit 48KHz stereo PCM, which is about 3,840 bytes per frame (20ms "
"worth of audio)."
msgstr ""

#: disnake.player.AudioSource.read:13 disnake.player.FFmpegOpusAudio.read:13
#: disnake.player.FFmpegPCMAudio.read:13 disnake.player.PCMAudio.read:13
#: disnake.player.PCMVolumeTransformer.read:13 of
msgid "A bytes like object that represents the PCM or Opus data."
msgstr ""

#: disnake.asset.AssetMixin.read:10 disnake.message.Attachment.read:20
#: disnake.partial_emoji.PartialEmoji.read:10
#: disnake.player.AudioSource.read:14 disnake.player.FFmpegOpusAudio.read:14
#: disnake.player.FFmpegPCMAudio.read:14 disnake.player.PCMAudio.read:14
#: disnake.player.PCMVolumeTransformer.read:14 of
msgid ":class:`bytes`"
msgstr ""

#: disnake.player.AudioSource.is_opus:1
#: disnake.player.FFmpegOpusAudio.is_opus:1
#: disnake.player.FFmpegPCMAudio.is_opus:1 of
msgid "Checks if the audio source is already encoded in Opus."
msgstr ""

#: disnake.player.AudioSource.cleanup:1 disnake.player.FFmpegAudio.cleanup:1
#: disnake.player.PCMVolumeTransformer.cleanup:1 of
msgid "Called when clean-up is needed to be done."
msgstr ""

#: disnake.player.AudioSource.cleanup:3 disnake.player.FFmpegAudio.cleanup:3
#: disnake.player.PCMVolumeTransformer.cleanup:3 of
msgid ""
"Useful for clearing buffer data or processes after it is done playing "
"audio."
msgstr ""

#: ../../api.rst:123
msgid "PCMAudio"
msgstr ""

#: disnake.player.PCMAudio:1 of
msgid "Represents raw 16-bit 48KHz stereo PCM audio source."
msgstr ""

#: disnake.player.PCMAudio:5 of
msgid "A file-like object that reads byte data representing raw PCM."
msgstr ""

#: disnake.player.PCMAudio:7 of
msgid ":term:`py:file object`"
msgstr ""

#: ../../api.rst:131
msgid "FFmpegAudio"
msgstr ""

#: disnake.player.FFmpegAudio:1 of
msgid "Represents an FFmpeg (or AVConv) based AudioSource."
msgstr ""

#: disnake.player.FFmpegAudio:3 of
msgid ""
"User created AudioSources using FFmpeg differently from how "
":class:`FFmpegPCMAudio` and :class:`FFmpegOpusAudio` work should subclass"
" this."
msgstr ""

#: ../../api.rst:139
msgid "FFmpegPCMAudio"
msgstr ""

#: disnake.player.FFmpegOpusAudio:1 disnake.player.FFmpegPCMAudio:1 of
msgid "An audio source from FFmpeg (or AVConv)."
msgstr ""

#: disnake.player.FFmpegPCMAudio:3 of
msgid "This launches a sub-process to a specific input file given."
msgstr ""

#: disnake.player.FFmpegOpusAudio:18 disnake.player.FFmpegPCMAudio:7 of
msgid ""
"You must have the ffmpeg or avconv executable in your path environment "
"variable in order for this to work."
msgstr ""

#: disnake.player.FFmpegPCMAudio:10 of
msgid ""
"The input that ffmpeg will take and convert to PCM bytes. If ``pipe`` is "
"``True`` then this is a file-like object that is passed to the stdin of "
"ffmpeg."
msgstr ""

#: disnake.player.FFmpegOpusAudio:39 disnake.player.FFmpegPCMAudio:14 of
msgid "The executable name (and path) to use. Defaults to ``ffmpeg``."
msgstr ""

#: disnake.player.FFmpegOpusAudio:41 disnake.player.FFmpegPCMAudio:16 of
msgid ""
"If ``True``, denotes that ``source`` parameter will be passed to the "
"stdin of ffmpeg. Defaults to ``False``."
msgstr ""

#: disnake.player.FFmpegOpusAudio:44 disnake.player.FFmpegPCMAudio:19 of
msgid ""
"A file-like object to pass to the Popen constructor. Could also be an "
"instance of ``subprocess.PIPE``."
msgstr ""

#: disnake.player.FFmpegOpusAudio:47 disnake.player.FFmpegPCMAudio:22 of
msgid "Extra command line arguments to pass to ffmpeg before the ``-i`` flag."
msgstr ""

#: disnake.player.FFmpegOpusAudio:49 disnake.player.FFmpegPCMAudio:24 of
msgid "Extra command line arguments to pass to ffmpeg after the ``-i`` flag."
msgstr ""

#: disnake.player.FFmpegOpusAudio:52 disnake.player.FFmpegPCMAudio:27 of
msgid "The subprocess failed to be created."
msgstr ""

#: ../../api.rst:147
msgid "FFmpegOpusAudio"
msgstr ""

#: disnake.player.FFmpegOpusAudio:3 of
msgid ""
"This launches a sub-process to a specific input file given.  However, "
"rather than producing PCM packets like :class:`FFmpegPCMAudio` does that "
"need to be encoded to Opus, this class produces Opus packets, skipping "
"the encoding step done by the library."
msgstr ""

#: disnake.player.FFmpegOpusAudio:7 of
msgid ""
"Alternatively, instead of instantiating this class directly, you can use "
":meth:`FFmpegOpusAudio.from_probe` to probe for bitrate and codec "
"information.  This can be used to opportunistically skip pointless re-"
"encoding of existing Opus audio data for a boost in performance at the "
"cost of a short initial delay to gather the information. The same can be "
"achieved by passing ``copy`` to the ``codec`` parameter, but only if you "
"know that the input source is Opus encoded beforehand."
msgstr ""

#: disnake.player.FFmpegOpusAudio:21 of
msgid ""
"The input that ffmpeg will take and convert to Opus bytes. If ``pipe`` is"
" ``True`` then this is a file-like object that is passed to the stdin of "
"ffmpeg."
msgstr ""

#: disnake.player.FFmpegOpusAudio:25 of
msgid "The bitrate in kbps to encode the output to.  Defaults to ``128``."
msgstr ""

#: disnake.player.FFmpegOpusAudio:27 of
msgid ""
"The codec to use to encode the audio data.  Normally this would be just "
"``libopus``, but is used by :meth:`FFmpegOpusAudio.from_probe` to "
"opportunistically skip pointlessly re-encoding Opus audio data by passing"
" ``copy`` as the codec value.  Any values other than ``copy``, ``opus``, "
"or ``libopus`` will be considered ``libopus``.  Defaults to ``libopus``."
"  .. warning::      Do not provide this parameter unless you are certain "
"that the audio input is     already Opus encoded.  For typical use "
":meth:`FFmpegOpusAudio.from_probe`     should be used to determine the "
"proper value for this parameter."
msgstr ""

#: disnake.player.FFmpegOpusAudio:27 of
msgid ""
"The codec to use to encode the audio data.  Normally this would be just "
"``libopus``, but is used by :meth:`FFmpegOpusAudio.from_probe` to "
"opportunistically skip pointlessly re-encoding Opus audio data by passing"
" ``copy`` as the codec value.  Any values other than ``copy``, ``opus``, "
"or ``libopus`` will be considered ``libopus``.  Defaults to ``libopus``."
msgstr ""

#: disnake.player.FFmpegOpusAudio:35 of
msgid ""
"Do not provide this parameter unless you are certain that the audio input"
" is already Opus encoded.  For typical use "
":meth:`FFmpegOpusAudio.from_probe` should be used to determine the proper"
" value for this parameter."
msgstr ""

#: disnake.player.FFmpegOpusAudio.from_probe:3 of
msgid ""
"A factory method that creates a :class:`FFmpegOpusAudio` after probing "
"the input source for audio codec and bitrate information."
msgstr ""

#: disnake.player.FFmpegOpusAudio.from_probe:8 of
msgid ""
"Use this function to create an :class:`FFmpegOpusAudio` instance instead "
"of the constructor: ::"
msgstr ""

#: disnake.player.FFmpegOpusAudio.from_probe:13 of
msgid ""
"If you are on Windows and don't have ffprobe installed, use the "
"``fallback`` method to probe using ffmpeg instead: ::"
msgstr ""

#: disnake.player.FFmpegOpusAudio.from_probe:19 of
msgid "Using a custom method of determining codec and bitrate: ::"
msgstr ""

#: disnake.player.FFmpegOpusAudio.from_probe:28 of
msgid "Identical to the ``source`` parameter for the constructor."
msgstr ""

#: disnake.player.FFmpegOpusAudio.from_probe:29 of
msgid ""
"The probing method used to determine bitrate and codec information. As a "
"string, valid values are ``native`` to use ffprobe (or avprobe) and "
"``fallback`` to use ffmpeg (or avconv).  As a callable, it must take two "
"string arguments, ``source`` and ``executable``.  Both parameters are the"
" same values passed to this factory function. ``executable`` will default"
" to ``ffmpeg`` if not provided as a keyword argument."
msgstr ""

#: disnake.player.FFmpegOpusAudio.from_probe:35 of
msgid ""
"The remaining parameters to be passed to the :class:`FFmpegOpusAudio` "
"constructor, excluding ``bitrate`` and ``codec``."
msgstr ""

#: disnake.player.FFmpegOpusAudio.from_probe:38
#: disnake.player.FFmpegOpusAudio.probe:10 of
msgid "Invalid probe method, must be ``'native'`` or ``'fallback'``."
msgstr ""

#: disnake.player.FFmpegOpusAudio.from_probe:39
#: disnake.player.FFmpegOpusAudio.probe:11 of
msgid "Invalid value for ``probe`` parameter, must be :class:`str` or a callable."
msgstr ""

#: disnake.player.FFmpegOpusAudio.from_probe:41 of
msgid "An instance of this class."
msgstr ""

#: disnake.player.FFmpegOpusAudio.from_probe:42 of
msgid ":class:`FFmpegOpusAudio`"
msgstr ""

#: disnake.player.FFmpegOpusAudio.probe:3 of
msgid "Probes the input source for bitrate and codec information."
msgstr ""

#: disnake.player.FFmpegOpusAudio.probe:5 of
msgid "Identical to the ``source`` parameter for :class:`FFmpegOpusAudio`."
msgstr ""

#: disnake.player.FFmpegOpusAudio.probe:6 of
msgid ""
"Identical to the ``method`` parameter for "
":meth:`FFmpegOpusAudio.from_probe`."
msgstr ""

#: disnake.player.FFmpegOpusAudio.probe:7 of
msgid "Identical to the ``executable`` parameter for :class:`FFmpegOpusAudio`."
msgstr ""

#: disnake.player.FFmpegOpusAudio.probe:13 of
msgid "A 2-tuple with the codec and bitrate of the input source."
msgstr ""

#: disnake.player.FFmpegOpusAudio.probe:14 of
msgid "Optional[Tuple[Optional[:class:`str`], Optional[:class:`int`]]]"
msgstr ""

#: ../../api.rst:155
msgid "PCMVolumeTransformer"
msgstr ""

#: disnake.player.PCMVolumeTransformer:1 of
msgid "Transforms a previous :class:`AudioSource` to have volume controls."
msgstr ""

#: disnake.player.PCMVolumeTransformer:3 of
msgid ""
"This does not work on audio sources that have :meth:`AudioSource.is_opus`"
" set to ``True``."
msgstr ""

#: disnake.player.PCMVolumeTransformer:6 of
msgid "The original AudioSource to transform."
msgstr ""

#: disnake.player.PCMVolumeTransformer:8 of
msgid "The initial volume to set it to. See :attr:`volume` for more info."
msgstr ""

#: disnake.player.PCMVolumeTransformer:12 of
msgid "Not an audio source."
msgstr ""

#: disnake.player.PCMVolumeTransformer:13 of
msgid "The audio source is opus encoded."
msgstr ""

#: disnake.PCMVolumeTransformer.volume:1 of
msgid ""
"Retrieves or sets the volume as a floating point percentage (e.g. ``1.0``"
" for 100%)."
msgstr ""

#: ../../api.rst:163
msgid "Opus Library"
msgstr ""

#: disnake.opus.load_opus:1 of
msgid "Loads the libopus shared library for use with voice."
msgstr ""

#: disnake.opus.load_opus:3 of
msgid ""
"If this function is not called then the library uses the function "
":func:`ctypes.util.find_library` and then loads that one if available."
msgstr ""

#: disnake.opus.load_opus:6 of
msgid ""
"Not loading a library and attempting to use PCM based AudioSources will "
"lead to voice not working."
msgstr ""

#: disnake.opus.load_opus:9 of
msgid "This function propagates the exceptions thrown."
msgstr ""

#: disnake.opus.load_opus:13 of
msgid ""
"The bitness of the library must match the bitness of your python "
"interpreter. If the library is 64-bit then your python interpreter must "
"be 64-bit as well. Usually if there's a mismatch in bitness then the load"
" will throw an exception."
msgstr ""

#: disnake.opus.load_opus:20 of
msgid ""
"On Windows, this function should not need to be called as the binaries "
"are automatically loaded."
msgstr ""

#: disnake.opus.load_opus:25 of
msgid ""
"On Windows, the .dll extension is not necessary. However, on Linux the "
"full extension is required to load the library, e.g. ``libopus.so.1``. On"
" Linux however, :func:`ctypes.util.find_library` will usually find the "
"library automatically without you having to call this."
msgstr ""

#: disnake.opus.load_opus:30 of
msgid "The filename of the shared library."
msgstr ""

#: disnake.opus.is_loaded:1 of
msgid ""
"Function to check if opus lib is successfully loaded either via the "
":func:`ctypes.util.find_library` call of :func:`load_opus`."
msgstr ""

#: disnake.opus.is_loaded:4 of
msgid "This must return ``True`` for voice to work."
msgstr ""

#: disnake.opus.is_loaded:6 of
msgid "Indicates if the opus library has been loaded."
msgstr ""

#: ../../api.rst:172
msgid "Event Reference"
msgstr ""

#: ../../api.rst:174
msgid ""
"This section outlines the different types of events listened by "
":class:`Client`."
msgstr ""

#: ../../api.rst:176
msgid ""
"There are two ways to register an event, the first way is through the use"
" of :meth:`Client.event`. The second way is through subclassing "
":class:`Client` and overriding the specific events. For example: ::"
msgstr ""

#: ../../api.rst:191
msgid ""
"If an event handler raises an exception, :func:`on_error` will be called "
"to handle it, which defaults to print a traceback and ignoring the "
"exception."
msgstr ""

#: ../../api.rst:196
msgid ""
"All the events must be a |coroutine_link|_. If they aren't, then you "
"might get unexpected errors. In order to turn a function into a coroutine"
" they must be ``async def`` functions."
msgstr ""

#: ../../api.rst:202
msgid ""
"Called when the client has successfully connected to Discord. This is not"
" the same as the client being fully prepared, see :func:`on_ready` for "
"that."
msgstr ""

#: ../../api.rst:205
msgid "The warnings on :func:`on_ready` also apply."
msgstr ""

#: ../../api.rst:209
msgid ""
"Similar to :func:`on_connect` except used by :class:`AutoShardedClient` "
"to denote when a particular shard ID has connected to Discord."
msgstr ""

#: ../../api.rst:214
msgid "The shard ID that has connected."
msgstr ""

#: ../../api.rst:219
msgid ""
"Called when the client has disconnected from Discord, or a connection "
"attempt to Discord has failed. This could happen either through the "
"internet being disconnected, explicit calls to close, or Discord "
"terminating the connection one way or the other."
msgstr ""

#: ../../api.rst:223
msgid ""
"This function can be called many times without a corresponding "
":func:`on_connect` call."
msgstr ""

#: ../../api.rst:227
msgid ""
"Similar to :func:`on_disconnect` except used by "
":class:`AutoShardedClient` to denote when a particular shard ID has "
"disconnected from Discord."
msgstr ""

#: ../../api.rst:232
msgid "The shard ID that has disconnected."
msgstr ""

#: ../../api.rst:237
msgid ""
"Called when the client is done preparing the data received from Discord. "
"Usually after login is successful and the :attr:`Client.guilds` and co. "
"are filled up."
msgstr ""

#: ../../api.rst:242
msgid ""
"This function is not guaranteed to be the first event called. Likewise, "
"this function is **not** guaranteed to only be called once. This library "
"implements reconnection logic and thus will end up calling this event "
"whenever a RESUME request fails."
msgstr ""

#: ../../api.rst:249
msgid ""
"Similar to :func:`on_ready` except used by :class:`AutoShardedClient` to "
"denote when a particular shard ID has become ready."
msgstr ""

#: ../../api.rst:252
msgid "The shard ID that is ready."
msgstr ""

#: ../../api.rst:257
msgid "Called when the client has resumed a session."
msgstr ""

#: ../../api.rst:261
msgid ""
"Similar to :func:`on_resumed` except used by :class:`AutoShardedClient` "
"to denote when a particular shard ID has resumed a session."
msgstr ""

#: ../../api.rst:266
msgid "The shard ID that has resumed."
msgstr ""

#: ../../api.rst:271
msgid ""
"Usually when an event raises an uncaught exception, a traceback is "
"printed to stderr and the exception is ignored. If you want to change "
"this behaviour and handle the exception for whatever reason yourself, "
"this event can be overridden. Which, when done, will suppress the default"
" action of printing the traceback."
msgstr ""

#: ../../api.rst:277
msgid ""
"The information of the exception raised and the exception itself can be "
"retrieved with a standard call to :func:`sys.exc_info`."
msgstr ""

#: ../../api.rst:280
msgid ""
"If you want exception to propagate out of the :class:`Client` class you "
"can define an ``on_error`` handler consisting of a single empty "
":ref:`raise statement <py:raise>`. Exceptions raised by ``on_error`` will"
" not be handled in any way by :class:`Client`."
msgstr ""

#: ../../api.rst:287
msgid "``on_error`` will only be dispatched to :meth:`Client.event`."
msgstr ""

#: ../../api.rst:289
msgid ""
"It will not be received by :meth:`Client.wait_for`, or, if used, "
":ref:`ext_commands_api_bot` listeners such as "
":meth:`~ext.commands.Bot.listen` or :meth:`~ext.commands.Cog.listener`."
msgstr ""

#: ../../api.rst:293
msgid "The name of the event that raised the exception."
msgstr ""

#: ../../api.rst:296
msgid "The positional arguments for the event that raised the exception."
msgstr ""

#: ../../api.rst:298
msgid "The keyword arguments for the event that raised the exception."
msgstr ""

#: ../../api.rst:303
msgid "Called whenever a websocket event is received from the WebSocket."
msgstr ""

#: ../../api.rst:305
msgid ""
"This is mainly useful for logging how many events you are receiving from "
"the Discord gateway."
msgstr ""

#: ../../api.rst:310
msgid "The event type from Discord that is received, e.g. ``'READY'``."
msgstr ""

#: ../../api.rst:315
msgid ""
"Called whenever a message is completely received from the WebSocket, "
"before it's processed and parsed. This event is always dispatched when a "
"complete message is received and the passed data is not parsed in any "
"way."
msgstr ""

#: ../../api.rst:319 ../../api.rst:338
msgid ""
"This is only really useful for grabbing the WebSocket stream and "
"debugging purposes."
msgstr ""

#: ../../api.rst:322 ../../api.rst:341
msgid ""
"This requires setting the ``enable_debug_events`` setting in the "
":class:`Client`."
msgstr ""

#: ../../api.rst:326
msgid ""
"This is only for the messages received from the client WebSocket. The "
"voice WebSocket will not trigger this event."
msgstr ""

#: ../../api.rst:329
msgid "The message passed in from the WebSocket library."
msgstr ""

#: ../../api.rst:334
msgid ""
"Called whenever a send operation is done on the WebSocket before the "
"message is sent. The passed parameter is the message that is being sent "
"to the WebSocket."
msgstr ""

#: ../../api.rst:345
msgid ""
"This is only for the messages sent from the client WebSocket. The voice "
"WebSocket will not trigger this event."
msgstr ""

#: ../../api.rst:348
msgid ""
"The message that is about to be passed on to the WebSocket library. It "
"can be :class:`bytes` to denote a binary message or :class:`str` to "
"denote a regular text message."
msgstr ""

#: ../../api.rst:354
msgid "Called when someone begins typing a message."
msgstr ""

#: ../../api.rst:356
msgid ""
"The ``channel`` parameter can be a :class:`abc.Messageable` instance. "
"Which could either be :class:`TextChannel`, :class:`GroupChannel`, or "
":class:`DMChannel`."
msgstr ""

#: ../../api.rst:360
msgid ""
"If the ``channel`` is a :class:`TextChannel` then the ``user`` parameter "
"is a :class:`Member`, otherwise it is a :class:`User`."
msgstr ""

#: ../../api.rst:363
msgid "This requires :attr:`Intents.typing` to be enabled."
msgstr ""

#: ../../api.rst:365
msgid "The location where the typing originated from."
msgstr ""

#: ../../api.rst:367
msgid "The user that started typing."
msgstr ""

#: ../../api.rst:369
msgid "When the typing started as an aware datetime in UTC."
msgstr ""

#: ../../api.rst:374
msgid "Called when a :class:`Message` is created and sent."
msgstr ""

#: ../../api.rst:376 ../../api.rst:399 ../../api.rst:416 ../../api.rst:429
#: ../../api.rst:442 ../../api.rst:468 ../../api.rst:494 ../../api.rst:690
msgid "This requires :attr:`Intents.messages` to be enabled."
msgstr ""

#: ../../api.rst:380
msgid ""
"Your bot's own messages and private messages are sent through this event."
" This can lead cases of 'recursion' depending on how your bot was "
"programmed. If you want the bot to not reply to itself, consider checking"
" the user IDs. Note that :class:`~ext.commands.Bot` does not have this "
"problem."
msgstr ""

#: ../../api.rst:386
msgid "The current message."
msgstr ""

#: ../../api.rst:391
msgid ""
"Called when a message is deleted. If the message is not found in the "
"internal message cache, then this event will not be called. Messages "
"might not be in cache if the message is too old or the client is "
"participating in high traffic guilds."
msgstr ""

#: ../../api.rst:396
msgid ""
"If this occurs increase the :class:`max_messages <Client>` parameter or "
"use the :func:`on_raw_message_delete` event instead."
msgstr ""

#: ../../api.rst:401
msgid "The deleted message."
msgstr ""

#: ../../api.rst:406
msgid ""
"Called when messages are bulk deleted. If none of the messages deleted "
"are found in the internal message cache, then this event will not be "
"called. If individual messages were not found in the internal message "
"cache, this event will still be called, but the messages not found will "
"not be included in the messages list. Messages might not be in cache if "
"the message is too old or the client is participating in high traffic "
"guilds."
msgstr ""

#: ../../api.rst:413
msgid ""
"If this occurs increase the :class:`max_messages <Client>` parameter or "
"use the :func:`on_raw_bulk_message_delete` event instead."
msgstr ""

#: ../../api.rst:418
msgid "The messages that have been deleted."
msgstr ""

#: ../../api.rst:423
msgid ""
"Called when a message is deleted. Unlike :func:`on_message_delete`, this "
"is called regardless of the message being in the internal message cache "
"or not."
msgstr ""

#: ../../api.rst:426
msgid ""
"If the message is found in the message cache, it can be accessed via "
":attr:`RawMessageDeleteEvent.cached_message`"
msgstr ""

#: ../../api.rst:431 ../../api.rst:444 ../../api.rst:496 ../../api.rst:531
#: ../../api.rst:563 ../../api.rst:586 ../../api.rst:611 ../../api.rst:855
msgid "The raw event payload data."
msgstr ""

#: ../../api.rst:436
msgid ""
"Called when a bulk delete is triggered. Unlike "
":func:`on_bulk_message_delete`, this is called regardless of the messages"
" being in the internal message cache or not."
msgstr ""

#: ../../api.rst:439
msgid ""
"If the messages are found in the message cache, they can be accessed via "
":attr:`RawBulkMessageDeleteEvent.cached_messages`"
msgstr ""

#: ../../api.rst:449
msgid ""
"Called when a :class:`Message` receives an update event. If the message "
"is not found in the internal message cache, then these events will not be"
" called. Messages might not be in cache if the message is too old or the "
"client is participating in high traffic guilds."
msgstr ""

#: ../../api.rst:454
msgid ""
"If this occurs increase the :class:`max_messages <Client>` parameter or "
"use the :func:`on_raw_message_edit` event instead."
msgstr ""

#: ../../api.rst:457
msgid "The following non-exhaustive cases trigger this event:"
msgstr ""

#: ../../api.rst:459
msgid "A message has been pinned or unpinned."
msgstr ""

#: ../../api.rst:460
msgid "The message content has been changed."
msgstr ""

#: ../../api.rst:461
msgid "The message has received an embed."
msgstr ""

#: ../../api.rst:463
msgid ""
"For performance reasons, the embed server does not do this in a "
"\"consistent\" manner."
msgstr ""

#: ../../api.rst:465
msgid "The message's embeds were suppressed or unsuppressed."
msgstr ""

#: ../../api.rst:466
msgid "A call message has received an update to its participants or ending time."
msgstr ""

#: ../../api.rst:470
msgid "The previous version of the message."
msgstr ""

#: ../../api.rst:472
msgid "The current version of the message."
msgstr ""

#: ../../api.rst:477
msgid ""
"Called when a message is edited. Unlike :func:`on_message_edit`, this is "
"called regardless of the state of the internal message cache."
msgstr ""

#: ../../api.rst:480
msgid ""
"If the message is found in the message cache, it can be accessed via "
":attr:`RawMessageUpdateEvent.cached_message`. The cached message "
"represents the message before it has been edited. For example, if the "
"content of a message is modified and triggers the "
":func:`on_raw_message_edit` coroutine, the "
":attr:`RawMessageUpdateEvent.cached_message` will return a "
":class:`Message` object that represents the message before the content "
"was modified."
msgstr ""

#: ../../api.rst:486
msgid ""
"Due to the inherently raw nature of this event, the data parameter "
"coincides with the raw data given by the `gateway "
"<https://discord.com/developers/docs/topics/gateway#message-update>`_."
msgstr ""

#: ../../api.rst:489
msgid ""
"Since the data payload can be partial, care must be taken when accessing "
"stuff in the dictionary. One example of a common case of partial data is "
"when the ``'content'`` key is inaccessible. This denotes an \"embed\" "
"only edit, which is an edit in which only the embeds are updated by the "
"Discord embed server."
msgstr ""

#: ../../api.rst:501
msgid ""
"Called when a message has a reaction added to it. Similar to "
":func:`on_message_edit`, if the message is not found in the internal "
"message cache, then this event will not be called. Consider using "
":func:`on_raw_reaction_add` instead."
msgstr ""

#: ../../api.rst:507
msgid ""
"To get the :class:`Message` being reacted, access it via "
":attr:`Reaction.message`."
msgstr ""

#: ../../api.rst:509 ../../api.rst:529 ../../api.rst:561 ../../api.rst:572
#: ../../api.rst:584 ../../api.rst:595 ../../api.rst:607
msgid "This requires :attr:`Intents.reactions` to be enabled."
msgstr ""

#: ../../api.rst:513
msgid ""
"This doesn't require :attr:`Intents.members` within a guild context, but "
"due to Discord not providing updated user information in a direct message"
" it's required for direct messages to receive this event. Consider using "
":func:`on_raw_reaction_add` if you need this and do not otherwise want to"
" enable the members intent."
msgstr ""

#: ../../api.rst:519 ../../api.rst:551
msgid "The current state of the reaction."
msgstr ""

#: ../../api.rst:521 ../../api.rst:553
msgid "The user who added the reaction."
msgstr ""

#: ../../api.rst:526
msgid ""
"Called when a message has a reaction added. Unlike "
":func:`on_reaction_add`, this is called regardless of the state of the "
"internal message cache."
msgstr ""

#: ../../api.rst:536
msgid ""
"Called when a message has a reaction removed from it. Similar to "
"on_message_edit, if the message is not found in the internal message "
"cache, then this event will not be called."
msgstr ""

#: ../../api.rst:542
msgid "To get the message being reacted, access it via :attr:`Reaction.message`."
msgstr ""

#: ../../api.rst:544
msgid ""
"This requires both :attr:`Intents.reactions` and :attr:`Intents.members` "
"to be enabled."
msgstr ""

#: ../../api.rst:548
msgid ""
"Consider using :func:`on_raw_reaction_remove` if you need this and do not"
" want to enable the members intent."
msgstr ""

#: ../../api.rst:558
msgid ""
"Called when a message has a reaction removed. Unlike "
":func:`on_reaction_remove`, this is called regardless of the state of the"
" internal message cache."
msgstr ""

#: ../../api.rst:568
msgid ""
"Called when a message has all its reactions removed from it. Similar to "
":func:`on_message_edit`, if the message is not found in the internal "
"message cache, then this event will not be called. Consider using "
":func:`on_raw_reaction_clear` instead."
msgstr ""

#: ../../api.rst:574
msgid "The message that had its reactions cleared."
msgstr ""

#: ../../api.rst:576
msgid "The reactions that were removed."
msgstr ""

#: ../../api.rst:581
msgid ""
"Called when a message has all its reactions removed. Unlike "
":func:`on_reaction_clear`, this is called regardless of the state of the "
"internal message cache."
msgstr ""

#: ../../api.rst:591
msgid ""
"Called when a message has a specific reaction removed from it. Similar to"
" :func:`on_message_edit`, if the message is not found in the internal "
"message cache, then this event will not be called. Consider using "
":func:`on_raw_reaction_clear_emoji` instead."
msgstr ""

#: ../../api.rst:599
msgid "The reaction that got cleared."
msgstr ""

#: ../../api.rst:604
msgid ""
"Called when a message has a specific reaction removed from it. Unlike "
":func:`on_reaction_clear_emoji` this is called regardless of the state of"
" the internal message cache."
msgstr ""

#: ../../api.rst:616
msgid "Called when an interaction happened."
msgstr ""

#: ../../api.rst:618
msgid ""
"This currently happens due to application command invocations or "
"components being used."
msgstr ""

#: ../../api.rst:622
msgid "This is a low level function that is not generally meant to be used."
msgstr ""

#: ../../api.rst:626 ../../api.rst:643 ../../api.rst:656 ../../api.rst:669
#: ../../api.rst:683
msgid "The interaction object."
msgstr ""

#: ../../api.rst:631
msgid "Called when a message interaction happened."
msgstr ""

#: ../../api.rst:633
msgid "This currently happens due to components being used."
msgstr ""

#: ../../api.rst:637
msgid ""
"This is a low level function that is not generally meant to be used. If "
"you are working with components, consider using the callbacks associated "
"with the :class:`~disnake.ui.View` instead as it provides a nicer user "
"experience."
msgstr ""

#: ../../api.rst:648
msgid "Called when a button is clicked."
msgstr ""

#: ../../api.rst:652 ../../api.rst:665
msgid ""
"Consider using the callbacks associated with the "
":class:`~disnake.ui.View` instead."
msgstr ""

#: ../../api.rst:661
msgid "Called when a select menu is clicked."
msgstr ""

#: ../../api.rst:674
msgid "Called when an application_command is invoked."
msgstr ""

#: ../../api.rst:678
msgid ""
"This is a low level function that is not generally meant to be used. "
"Consider using :class:`~ext.commands.Bot` or "
":class:`~ext.commands.InteractionBot` instead."
msgstr ""

#: ../../api.rst:688
msgid "Called whenever a private group DM is updated. e.g. changed name or topic."
msgstr ""

#: ../../api.rst:692
msgid "The updated group channel's old info."
msgstr ""

#: ../../api.rst:694
msgid "The updated group channel's new info."
msgstr ""

#: ../../api.rst:699
msgid "Called whenever a message is pinned or unpinned from a private channel."
msgstr ""

#: ../../api.rst:701
msgid "The private channel that had its pins updated."
msgstr ""

#: ../../api.rst:703 ../../api.rst:737
msgid ""
"The latest message that was pinned as an aware datetime in UTC. Could be "
"``None``."
msgstr ""

#: ../../api.rst:709
msgid "Called whenever a guild channel is deleted or created."
msgstr ""

#: ../../api.rst:711
msgid "Note that you can get the guild from :attr:`~abc.GuildChannel.guild`."
msgstr ""

#: ../../api.rst:713 ../../api.rst:722 ../../api.rst:733 ../../api.rst:747
#: ../../api.rst:760 ../../api.rst:780 ../../api.rst:805 ../../api.rst:934
#: ../../api.rst:953 ../../api.rst:967 ../../api.rst:981 ../../api.rst:990
#: ../../api.rst:1031
msgid "This requires :attr:`Intents.guilds` to be enabled."
msgstr ""

#: ../../api.rst:715
msgid "The guild channel that got created or deleted."
msgstr ""

#: ../../api.rst:720
msgid ""
"Called whenever a guild channel is updated. e.g. changed name, topic, "
"permissions."
msgstr ""

#: ../../api.rst:724
msgid "The updated guild channel's old info."
msgstr ""

#: ../../api.rst:726
msgid "The updated guild channel's new info."
msgstr ""

#: ../../api.rst:731
msgid "Called whenever a message is pinned or unpinned from a guild channel."
msgstr ""

#: ../../api.rst:735
msgid "The guild channel that had its pins updated."
msgstr ""

#: ../../api.rst:742
msgid ""
"Called whenever a thread is joined or created. Note that from the API's "
"perspective there is no way to differentiate between a thread being "
"created or the bot joining a thread."
msgstr ""

#: ../../api.rst:745 ../../api.rst:758 ../../api.rst:778
msgid "Note that you can get the guild from :attr:`Thread.guild`."
msgstr ""

#: ../../api.rst:751
msgid "The thread that got joined."
msgstr ""

#: ../../api.rst:756
msgid ""
"Called whenever a thread is removed. This is different from a thread "
"being deleted."
msgstr ""

#: ../../api.rst:764
msgid ""
"Due to technical limitations, this event might not be called as soon as "
"one expects. Since the library tracks thread membership locally, the API "
"only sends updated thread membership status upon being synced by joining "
"a thread."
msgstr ""

#: ../../api.rst:771
msgid "The thread that got removed."
msgstr ""

#: ../../api.rst:776
msgid "Called whenever a thread is deleted."
msgstr ""

#: ../../api.rst:784
msgid "The thread that got deleted."
msgstr ""

#: ../../api.rst:790
msgid "Called when a :class:`ThreadMember` leaves or joins a :class:`Thread`."
msgstr ""

#: ../../api.rst:792
msgid ""
"You can get the thread a member belongs in by accessing "
":attr:`ThreadMember.thread`."
msgstr ""

#: ../../api.rst:794 ../../api.rst:872 ../../api.rst:887 ../../api.rst:922
msgid "This requires :attr:`Intents.members` to be enabled."
msgstr ""

#: ../../api.rst:798 ../../api.rst:874
msgid "The member who joined or left."
msgstr ""

#: ../../api.rst:803
msgid "Called whenever a thread is updated."
msgstr ""

#: ../../api.rst:809
msgid "The updated thread's old info."
msgstr ""

#: ../../api.rst:811
msgid "The updated thread's new info."
msgstr ""

#: ../../api.rst:816
msgid ""
"Called whenever an integration is created, modified, or removed from a "
"guild."
msgstr ""

#: ../../api.rst:818 ../../api.rst:829 ../../api.rst:840 ../../api.rst:851
msgid "This requires :attr:`Intents.integrations` to be enabled."
msgstr ""

#: ../../api.rst:822
msgid "The guild that had its integrations updated."
msgstr ""

#: ../../api.rst:827
msgid "Called when an integration is created."
msgstr ""

#: ../../api.rst:833 ../../api.rst:844
msgid "The integration that was created."
msgstr ""

#: ../../api.rst:838
msgid "Called when an integration is updated."
msgstr ""

#: ../../api.rst:849
msgid "Called when an integration is deleted."
msgstr ""

#: ../../api.rst:860
msgid ""
"Called whenever a webhook is created, modified, or removed from a guild "
"channel."
msgstr ""

#: ../../api.rst:862
msgid "This requires :attr:`Intents.webhooks` to be enabled."
msgstr ""

#: ../../api.rst:864
msgid "The channel that had its webhooks updated."
msgstr ""

#: ../../api.rst:870
msgid "Called when a :class:`Member` leaves or joins a :class:`Guild`."
msgstr ""

#: ../../api.rst:879
msgid "Called when a :class:`Member` updates their profile."
msgstr ""

#: ../../api.rst:881 ../../api.rst:898 ../../api.rst:916
msgid "This is called when one or more of the following things change:"
msgstr ""

#: ../../api.rst:883
msgid "nickname"
msgstr ""

#: ../../api.rst:884 disnake.member.Member.edit:16 of
msgid "roles"
msgstr ""

#: ../../api.rst:885
msgid "pending"
msgstr ""

#: ../../api.rst:889 ../../api.rst:907
msgid "The updated member's old info."
msgstr ""

#: ../../api.rst:891 ../../api.rst:909
msgid "The updated member's updated info."
msgstr ""

#: ../../api.rst:896
msgid "Called when a :class:`Member` updates their presence."
msgstr ""

#: ../../api.rst:900
msgid "status"
msgstr ""

#: ../../api.rst:901
msgid "activity"
msgstr ""

#: ../../api.rst:903
msgid ""
"This requires :attr:`Intents.presences` and :attr:`Intents.members` to be"
" enabled."
msgstr ""

#: ../../api.rst:914
msgid "Called when a :class:`User` updates their profile."
msgstr ""

#: ../../api.rst:918
msgid "avatar"
msgstr ""

#: ../../api.rst:919
msgid "username"
msgstr ""

#: ../../api.rst:920
msgid "discriminator"
msgstr ""

#: ../../api.rst:924
msgid "The updated user's old info."
msgstr ""

#: ../../api.rst:926
msgid "The updated user's updated info."
msgstr ""

#: ../../api.rst:931
msgid ""
"Called when a :class:`Guild` is either created by the :class:`Client` or "
"when the :class:`Client` joins a guild."
msgstr ""

#: ../../api.rst:936
msgid "The guild that was joined."
msgstr ""

#: ../../api.rst:941
msgid "Called when a :class:`Guild` is removed from the :class:`Client`."
msgstr ""

#: ../../api.rst:943
msgid "This happens through, but not limited to, these circumstances:"
msgstr ""

#: ../../api.rst:945
msgid "The client got banned."
msgstr ""

#: ../../api.rst:946
msgid "The client got kicked."
msgstr ""

#: ../../api.rst:947
msgid "The client left the guild."
msgstr ""

#: ../../api.rst:948
msgid "The client or the guild owner deleted the guild."
msgstr ""

#: ../../api.rst:950
msgid ""
"In order for this event to be invoked then the :class:`Client` must have "
"been part of the guild to begin with. (i.e. it is part of "
":attr:`Client.guilds`)"
msgstr ""

#: ../../api.rst:955
msgid "The guild that got removed."
msgstr ""

#: ../../api.rst:960
msgid "Called when a :class:`Guild` updates, for example:"
msgstr ""

#: ../../api.rst:962
msgid "Changed name"
msgstr ""

#: ../../api.rst:963
msgid "Changed AFK channel"
msgstr ""

#: ../../api.rst:964
msgid "Changed AFK timeout"
msgstr ""

#: ../../api.rst:965
msgid "etc"
msgstr ""

#: ../../api.rst:969
msgid "The guild prior to being updated."
msgstr ""

#: ../../api.rst:971
msgid "The guild after being updated."
msgstr ""

#: ../../api.rst:977
msgid "Called when a :class:`Guild` creates or deletes a new :class:`Role`."
msgstr ""

#: ../../api.rst:979
msgid "To get the guild it belongs to, use :attr:`Role.guild`."
msgstr ""

#: ../../api.rst:983
msgid "The role that was created or deleted."
msgstr ""

#: ../../api.rst:988
msgid "Called when a :class:`Role` is changed guild-wide."
msgstr ""

#: ../../api.rst:992
msgid "The updated role's old info."
msgstr ""

#: ../../api.rst:994
msgid "The updated role's updated info."
msgstr ""

#: ../../api.rst:999
msgid "Called when a :class:`Guild` adds or removes :class:`Emoji`."
msgstr ""

#: ../../api.rst:1001 ../../api.rst:1014
msgid "This requires :attr:`Intents.emojis_and_stickers` to be enabled."
msgstr ""

#: ../../api.rst:1003
msgid "The guild who got their emojis updated."
msgstr ""

#: ../../api.rst:1005
msgid "A list of emojis before the update."
msgstr ""

#: ../../api.rst:1007
msgid "A list of emojis after the update."
msgstr ""

#: ../../api.rst:1012
msgid "Called when a :class:`Guild` updates its stickers."
msgstr ""

#: ../../api.rst:1018
msgid "The guild who got their stickers updated."
msgstr ""

#: ../../api.rst:1020
msgid "A list of stickers before the update."
msgstr ""

#: ../../api.rst:1022
msgid "A list of stickers after the update."
msgstr ""

#: ../../api.rst:1028
msgid ""
"Called when a guild becomes available or unavailable. The guild must have"
" existed in the :attr:`Client.guilds` cache."
msgstr ""

#: ../../api.rst:1033
msgid "The :class:`Guild` that has changed availability."
msgstr ""

#: ../../api.rst:1037
msgid "Called when a :class:`Member` changes their :class:`VoiceState`."
msgstr ""

#: ../../api.rst:1039 ../../api.rst:1069
msgid ""
"The following, but not limited to, examples illustrate when this event is"
" called:"
msgstr ""

#: ../../api.rst:1041
msgid "A member joins a voice or stage channel."
msgstr ""

#: ../../api.rst:1042
msgid "A member leaves a voice or stage channel."
msgstr ""

#: ../../api.rst:1043
msgid "A member is muted or deafened by their own accord."
msgstr ""

#: ../../api.rst:1044
msgid "A member is muted or deafened by a guild administrator."
msgstr ""

#: ../../api.rst:1046
msgid "This requires :attr:`Intents.voice_states` to be enabled."
msgstr ""

#: ../../api.rst:1048
msgid "The member whose voice states changed."
msgstr ""

#: ../../api.rst:1050
msgid "The voice state prior to the changes."
msgstr ""

#: ../../api.rst:1052
msgid "The voice state after the changes."
msgstr ""

#: ../../api.rst:1058
msgid ""
"Called when a :class:`StageInstance` is created or deleted for a "
":class:`StageChannel`."
msgstr ""

#: ../../api.rst:1062
msgid "The stage instance that was created or deleted."
msgstr ""

#: ../../api.rst:1067
msgid "Called when a :class:`StageInstance` is updated."
msgstr ""

#: ../../api.rst:1071
msgid "The topic is changed."
msgstr ""

#: ../../api.rst:1072
msgid "The privacy level is changed."
msgstr ""

#: ../../api.rst:1076
msgid "The stage instance before the update."
msgstr ""

#: ../../api.rst:1078
msgid "The stage instance after the update."
msgstr ""

#: ../../api.rst:1083
msgid "Called when user gets banned from a :class:`Guild`."
msgstr ""

#: ../../api.rst:1085 ../../api.rst:1098
msgid "This requires :attr:`Intents.bans` to be enabled."
msgstr ""

#: ../../api.rst:1087
msgid "The guild the user got banned from."
msgstr ""

#: ../../api.rst:1089
msgid ""
"The user that got banned. Can be either :class:`User` or :class:`Member` "
"depending if the user was in the guild or not at the time of removal."
msgstr ""

#: ../../api.rst:1096
msgid "Called when a :class:`User` gets unbanned from a :class:`Guild`."
msgstr ""

#: ../../api.rst:1100
msgid "The guild the user got unbanned from."
msgstr ""

#: ../../api.rst:1102
msgid "The user that got unbanned."
msgstr ""

#: ../../api.rst:1107
msgid ""
"Called when an :class:`Invite` is created. You must have the "
":attr:`~Permissions.manage_channels` permission to receive this."
msgstr ""

#: ../../api.rst:1114 ../../api.rst:1131
msgid ""
"There is a rare possibility that the :attr:`Invite.guild` and "
":attr:`Invite.channel` attributes will be of :class:`Object` rather than "
"the respective models."
msgstr ""

#: ../../api.rst:1117 ../../api.rst:1137
msgid "This requires :attr:`Intents.invites` to be enabled."
msgstr ""

#: ../../api.rst:1119 disnake.abc.GuildChannel.create_invite:39 of
msgid "The invite that was created."
msgstr ""

#: ../../api.rst:1124
msgid ""
"Called when an :class:`Invite` is deleted. You must have the "
":attr:`~Permissions.manage_channels` permission to receive this."
msgstr ""

#: ../../api.rst:1134
msgid ""
"Outside of those two attributes, the only other attribute guaranteed to "
"be filled by the Discord gateway for this event is :attr:`Invite.code`."
msgstr ""

#: ../../api.rst:1139
msgid "The invite that was deleted."
msgstr ""

#: ../../api.rst:1145
msgid "Called when someone joins or leaves a :class:`GroupChannel`."
msgstr ""

#: ../../api.rst:1147
msgid "The group that the user joined or left."
msgstr ""

#: ../../api.rst:1149
msgid "The user that joined or left."
msgstr ""

#: ../../api.rst:1155
msgid "Utility Functions"
msgstr ""

#: disnake.utils.find:1 of
msgid ""
"A helper to return the first element found in the sequence that meets the"
" predicate. For example: ::"
msgstr ""

#: disnake.utils.find:6 of
msgid ""
"would find the first :class:`~disnake.Member` whose name is 'Mighty' and "
"return it. If an entry is not found, then ``None`` is returned."
msgstr ""

#: disnake.utils.find:9 of
msgid ""
"This is different from :func:`py:filter` due to the fact it stops the "
"moment it finds a valid entry."
msgstr ""

#: disnake.utils.find:12 of
msgid "A function that returns a boolean-like result."
msgstr ""

#: disnake.utils.find:13 of
msgid "The iterable to search through."
msgstr ""

#: disnake.utils.get:1 of
msgid ""
"A helper that returns the first element in the iterable that meets all "
"the traits passed in ``attrs``. This is an alternative for "
":func:`~disnake.utils.find`."
msgstr ""

#: disnake.utils.get:5 of
msgid ""
"When multiple attributes are specified, they are checked using logical "
"AND, not logical OR. Meaning they have to meet every attribute passed in "
"and not one of them."
msgstr ""

#: disnake.utils.get:9 of
msgid ""
"To have a nested attribute search (i.e. search by ``x.y``) then pass in "
"``x__y`` as the keyword argument."
msgstr ""

#: disnake.utils.get:12 of
msgid ""
"If nothing is found that matches the attributes passed, then ``None`` is "
"returned."
msgstr ""

#: disnake.utils.get:17 of
msgid "Basic usage:"
msgstr ""

#: disnake.utils.get:23 of
msgid "Multiple attribute matching:"
msgstr ""

#: disnake.utils.get:29 of
msgid "Nested attribute matching:"
msgstr ""

#: disnake.utils.get:35 of
msgid "An iterable to search through."
msgstr ""

#: disnake.utils.get:36 of
msgid "Keyword arguments that denote attributes to search with."
msgstr ""

#: disnake.utils.snowflake_time:1 of
msgid "The snowflake ID."
msgstr ""

#: disnake.utils.snowflake_time:4 of
msgid "An aware datetime in UTC representing the creation time of the snowflake."
msgstr ""

#: ../../docstring disnake.AuditLogEntry.created_at:3
#: disnake.CategoryChannel.created_at:3 disnake.ClientUser.created_at:5
#: disnake.DMChannel.created_at:3 disnake.Emoji.created_at:3
#: disnake.GroupChannel.created_at:3 disnake.Guild.created_at:3
#: disnake.Message.created_at:3 disnake.Object.created_at:3
#: disnake.PartialInviteChannel.created_at:3
#: disnake.PartialInviteGuild.created_at:3 disnake.PartialMessage.created_at:3
#: disnake.Role.created_at:3 disnake.Spotify.end:3 disnake.Spotify.start:3
#: disnake.StageChannel.created_at:3 disnake.Sticker.created_at:3
#: disnake.StoreChannel.created_at:3 disnake.SyncWebhook.created_at:3
#: disnake.TextChannel.created_at:3 disnake.Thread.created_at:3
#: disnake.User.created_at:5 disnake.VoiceChannel.created_at:3
#: disnake.Webhook.created_at:3 disnake.Widget.created_at:3
#: disnake.WidgetChannel.created_at:3 disnake.WidgetMember.created_at:5
#: disnake.abc.GuildChannel.created_at:3 disnake.embeds.Embed:61
#: disnake.integrations.StreamIntegration:75 disnake.invite.Invite:77
#: disnake.template.Template:39 disnake.template.Template:46
#: disnake.threads.Thread:124 disnake.threads.ThreadMember:39
#: disnake.utils.snowflake_time:5 disnake.utils.utcnow:9 of
msgid ":class:`datetime.datetime`"
msgstr ""

#: disnake.utils.oauth_url:1 of
msgid ""
"A helper function that returns the OAuth2 URL for inviting the bot into "
"guilds."
msgstr ""

#: disnake.utils.oauth_url:4 of
msgid "The client ID for your bot."
msgstr ""

#: disnake.utils.oauth_url:6 of
msgid ""
"The permissions you're requesting. If not given then you won't be "
"requesting any permissions."
msgstr ""

#: disnake.utils.oauth_url:9 of
msgid "The guild to pre-select in the authorization screen, if available."
msgstr ""

#: disnake.utils.oauth_url:11 of
msgid "An optional valid redirect URI."
msgstr ""

#: disnake.utils.oauth_url:13 of
msgid ""
"An optional valid list of scopes. Defaults to ``('bot',)``.  .. "
"versionadded:: 1.7"
msgstr ""

#: disnake.utils.oauth_url:13 of
msgid "An optional valid list of scopes. Defaults to ``('bot',)``."
msgstr ""

#: disnake.utils.oauth_url:17 of
msgid ""
"Whether to disallow the user from changing the guild dropdown.  .. "
"versionadded:: 2.0"
msgstr ""

#: disnake.utils.oauth_url:17 of
msgid "Whether to disallow the user from changing the guild dropdown."
msgstr ""

#: disnake.utils.oauth_url:22 of
msgid "The OAuth2 URL for inviting the bot into guilds."
msgstr ""

#: disnake.utils.remove_markdown:1 of
msgid "A helper function that removes markdown characters."
msgstr ""

#: disnake.utils.remove_markdown:6 of
msgid ""
"This function is not markdown aware and may remove meaning from the "
"original text. For example, if the input contains ``10 * 5`` then it will"
" be converted into ``10  5``."
msgstr ""

#: disnake.utils.remove_markdown:9 of
msgid "The text to remove markdown from."
msgstr ""

#: disnake.utils.remove_markdown:11 of
msgid ""
"Whether to leave links alone when removing markdown. For example, if a "
"URL in the text contains characters such as ``_`` then it will be left "
"alone. Defaults to ``True``."
msgstr ""

#: disnake.utils.remove_markdown:16 of
msgid "The text with the markdown special characters removed."
msgstr ""

#: disnake.utils.escape_markdown:1 of
msgid "A helper function that escapes Discord's markdown."
msgstr ""

#: disnake.utils.escape_markdown:3 of
msgid "The text to escape markdown from."
msgstr ""

#: disnake.utils.escape_markdown:5 of
msgid ""
"Whether to escape the markdown characters as needed. This means that it "
"does not escape extraneous characters if it's not necessary, e.g. "
"``**hello**`` is escaped into ``\\*\\*hello**`` instead of "
"``\\*\\*hello\\*\\*``. Note however that this can open you up to some "
"clever syntax abuse. Defaults to ``False``."
msgstr ""

#: disnake.utils.escape_markdown:11 of
msgid ""
"Whether to leave links alone when escaping markdown. For example, if a "
"URL in the text contains characters such as ``_`` then it will be left "
"alone. This option is not supported with ``as_needed``. Defaults to "
"``True``."
msgstr ""

#: disnake.utils.escape_markdown:17 of
msgid "The text with the markdown special characters escaped with a slash."
msgstr ""

#: disnake.utils.escape_mentions:1 of
msgid "A helper function that escapes everyone, here, role, and user mentions."
msgstr ""

#: disnake.utils.escape_mentions:5 of
msgid "This does not include channel mentions."
msgstr ""

#: disnake.utils.escape_mentions:9 of
msgid ""
"For more granular control over what mentions should be escaped within "
"messages, refer to the :class:`~disnake.AllowedMentions` class."
msgstr ""

#: disnake.utils.escape_mentions:13 of
msgid "The text to escape mentions from."
msgstr ""

#: disnake.utils.escape_mentions:16 of
msgid "The text with the mentions removed."
msgstr ""

#: disnake.utils.resolve_invite:1 of
msgid "Resolves an invite from a :class:`~disnake.Invite`, URL or code."
msgstr ""

#: disnake.utils.resolve_invite:3 of
msgid "The invite."
msgstr ""

#: disnake.utils.resolve_invite:6 of
msgid "The invite code."
msgstr ""

#: disnake.utils.resolve_template:1 of
msgid "Resolves a template code from a :class:`~disnake.Template`, URL or code."
msgstr ""

#: disnake.utils.resolve_template:5 of
msgid "The code."
msgstr ""

#: disnake.template.Template:7 disnake.utils.resolve_template:8 of
msgid "The template code."
msgstr ""

#: disnake.utils.sleep_until:3 of
msgid "Sleep until a specified time."
msgstr ""

#: disnake.utils.sleep_until:5 of
msgid "If the time supplied is in the past this function will yield instantly."
msgstr ""

#: disnake.utils.sleep_until:9 of
msgid ""
"The timestamp in which to sleep until. If the datetime is naive then it "
"is assumed to be local time."
msgstr ""

#: disnake.utils.sleep_until:12 of
msgid "If provided is returned to the caller when the coroutine completes."
msgstr ""

#: disnake.utils.utcnow:1 of
msgid ""
"A helper function to return an aware UTC datetime representing the "
"current time."
msgstr ""

#: disnake.utils.utcnow:3 of
msgid ""
"This should be preferred to :meth:`datetime.datetime.utcnow` since it is "
"an aware datetime, compared to the naive datetime in the standard "
"library."
msgstr ""

#: disnake.utils.utcnow:8 of
msgid "The current aware datetime in UTC."
msgstr ""

#: disnake.utils.format_dt:1 of
msgid ""
"A helper function to format a :class:`datetime.datetime`, :class:`int` or"
" :class:`float` for presentation within Discord."
msgstr ""

#: disnake.utils.format_dt:3 of
msgid ""
"This allows for a locale-independent way of presenting data using Discord"
" specific Markdown."
msgstr ""

#: disnake.utils.format_dt:6 of
msgid "Style"
msgstr ""

#: disnake.utils.format_dt:6 of
msgid "Example Output"
msgstr ""

#: ../../api.rst:2876 ../../api.rst:2896 disnake.utils.format_dt:6 of
msgid "Description"
msgstr ""

#: disnake.utils.format_dt:8 of
msgid "t"
msgstr ""

#: disnake.utils.format_dt:8 of
msgid "22:57"
msgstr ""

#: disnake.utils.format_dt:8 of
msgid "Short Time"
msgstr ""

#: disnake.utils.format_dt:10 of
msgid "T"
msgstr ""

#: disnake.utils.format_dt:10 of
msgid "22:57:58"
msgstr ""

#: disnake.utils.format_dt:10 of
msgid "Long Time"
msgstr ""

#: disnake.utils.format_dt:12 of
msgid "d"
msgstr ""

#: disnake.utils.format_dt:12 of
msgid "17/05/2016"
msgstr ""

#: disnake.utils.format_dt:12 of
msgid "Short Date"
msgstr ""

#: disnake.utils.format_dt:14 of
msgid "D"
msgstr ""

#: disnake.utils.format_dt:14 of
msgid "17 May 2016"
msgstr ""

#: disnake.utils.format_dt:14 of
msgid "Long Date"
msgstr ""

#: disnake.utils.format_dt:16 of
msgid "f (default)"
msgstr ""

#: disnake.utils.format_dt:16 of
msgid "17 May 2016 22:57"
msgstr ""

#: disnake.utils.format_dt:16 of
msgid "Short Date Time"
msgstr ""

#: disnake.utils.format_dt:18 of
msgid "F"
msgstr ""

#: disnake.utils.format_dt:18 of
msgid "Tuesday, 17 May 2016 22:57"
msgstr ""

#: disnake.utils.format_dt:18 of
msgid "Long Date Time"
msgstr ""

#: disnake.utils.format_dt:20 of
msgid "R"
msgstr ""

#: disnake.utils.format_dt:20 of
msgid "5 years ago"
msgstr ""

#: disnake.utils.format_dt:20 of
msgid "Relative Time"
msgstr ""

#: disnake.utils.format_dt:23 of
msgid ""
"Note that the exact output depends on the user's locale setting in the "
"client. The example output presented is using the ``en-GB`` locale."
msgstr ""

#: disnake.utils.format_dt:28 of
msgid "The datetime to format."
msgstr ""

#: disnake.utils.format_dt:30 of
msgid "The style to format the datetime with. Defaults to ``f``"
msgstr ""

#: disnake.utils.format_dt:33 of
msgid "The formatted string."
msgstr ""

#: disnake.utils.as_chunks:1 of
msgid "A helper function that collects an iterator into chunks of a given size."
msgstr ""

#: disnake.utils.as_chunks:5 of
msgid "The iterator to chunk, can be sync or async."
msgstr ""

#: disnake.utils.as_chunks:7 of
msgid "The maximum chunk size."
msgstr ""

#: ../../api.rst:2801 disnake.utils.as_chunks:12 of
msgid "The last chunk collected may not be as large as ``max_size``."
msgstr ""

#: disnake.utils.as_chunks:14 of
msgid "A new iterator which yields chunks of a given size."
msgstr ""

#: disnake.utils.as_chunks:15 of
msgid "Union[:class:`Iterator`, :class:`AsyncIterator`]"
msgstr ""

#: ../../api.rst:1186
msgid "Enumerations"
msgstr ""

#: ../../api.rst:1188
msgid ""
"The API provides some enumerations for certain types of strings to avoid "
"the API from being stringly typed in case the strings change in the "
"future."
msgstr ""

#: ../../api.rst:1191
msgid ""
"All enumerations are subclasses of an internal class which mimics the "
"behaviour of :class:`enum.Enum`."
msgstr ""

#: ../../api.rst:1196
msgid "Specifies the type of channel."
msgstr ""

#: ../../api.rst:1200
msgid "A text channel."
msgstr ""

#: ../../api.rst:1203
msgid "A voice channel."
msgstr ""

#: ../../api.rst:1206
msgid "A private text channel. Also called a direct message."
msgstr ""

#: ../../api.rst:1209
msgid "A private group text channel."
msgstr ""

#: ../../api.rst:1212
msgid "A category channel."
msgstr ""

#: ../../api.rst:1215
msgid "A guild news channel."
msgstr ""

#: ../../api.rst:1219
msgid "A guild store channel."
msgstr ""

#: ../../api.rst:1223
msgid "A guild stage voice channel."
msgstr ""

#: ../../api.rst:1229
msgid "A news thread."
msgstr ""

#: ../../api.rst:1235
msgid "A public thread."
msgstr ""

#: ../../api.rst:1241
msgid "A private thread."
msgstr ""

#: ../../api.rst:1247
msgid "A student hub channel."
msgstr ""

#: ../../api.rst:1253
msgid ""
"Specifies the type of :class:`Message`. This is used to denote if a "
"message is to be interpreted as a system message or a regular message."
msgstr ""

#: ../../api.rst:1260 disnake.message.Message:7 of
msgid "Checks if two messages are equal."
msgstr ""

#: ../../api.rst:1263 disnake.message.Message:11 of
msgid "Checks if two messages are not equal."
msgstr ""

#: ../../api.rst:1267
msgid "The default message type. This is the same as regular messages."
msgstr ""

#: ../../api.rst:1270
msgid ""
"The system message when a user is added to a group private message or a "
"thread."
msgstr ""

#: ../../api.rst:1274
msgid ""
"The system message when a user is removed from a group private message or"
" a thread."
msgstr ""

#: ../../api.rst:1278
msgid ""
"The system message denoting call state, e.g. missed call, started call, "
"etc."
msgstr ""

#: ../../api.rst:1282
msgid "The system message denoting that a channel's name has been changed."
msgstr ""

#: ../../api.rst:1285
msgid "The system message denoting that a channel's icon has been changed."
msgstr ""

#: ../../api.rst:1288
msgid ""
"The system message denoting that a pinned message has been added to a "
"channel."
msgstr ""

#: ../../api.rst:1291
msgid "The system message denoting that a new member has joined a Guild."
msgstr ""

#: ../../api.rst:1295
msgid "The system message denoting that a member has \"nitro boosted\" a guild."
msgstr ""

#: ../../api.rst:1298
msgid ""
"The system message denoting that a member has \"nitro boosted\" a guild "
"and it achieved level 1."
msgstr ""

#: ../../api.rst:1302
msgid ""
"The system message denoting that a member has \"nitro boosted\" a guild "
"and it achieved level 2."
msgstr ""

#: ../../api.rst:1306
msgid ""
"The system message denoting that a member has \"nitro boosted\" a guild "
"and it achieved level 3."
msgstr ""

#: ../../api.rst:1310
msgid ""
"The system message denoting that an announcement channel has been "
"followed."
msgstr ""

#: ../../api.rst:1315
msgid "The system message denoting that a member is streaming in the guild."
msgstr ""

#: ../../api.rst:1320
msgid ""
"The system message denoting that the guild is no longer eligible for "
"Server Discovery."
msgstr ""

#: ../../api.rst:1326
msgid ""
"The system message denoting that the guild has become eligible again for "
"Server Discovery."
msgstr ""

#: ../../api.rst:1332
msgid ""
"The system message denoting that the guild has failed to meet the Server "
"Discovery requirements for one week."
msgstr ""

#: ../../api.rst:1338
msgid ""
"The system message denoting that the guild has failed to meet the Server "
"Discovery requirements for 3 weeks in a row."
msgstr ""

#: ../../api.rst:1344
msgid ""
"The system message denoting that a thread has been created. This is only "
"sent if the thread has been created from an older message. The period of "
"time required for a message to be considered old cannot be relied upon "
"and is up to Discord."
msgstr ""

#: ../../api.rst:1352
msgid "The system message denoting that the author is replying to a message."
msgstr ""

#: ../../api.rst:1357
msgid ""
"The system message denoting that an application (or \"slash\") command "
"was executed."
msgstr ""

#: ../../api.rst:1362
msgid "The system message sent as a reminder to invite people to the guild."
msgstr ""

#: ../../api.rst:1367
msgid ""
"The system message denoting the message in the thread that is the one "
"that started the thread's conversation topic."
msgstr ""

#: ../../api.rst:1374
msgid "Represents Discord User flags."
msgstr ""

#: ../../api.rst:1378
msgid "The user is a Discord Employee."
msgstr ""

#: ../../api.rst:1381
msgid "The user is a Discord Partner."
msgstr ""

#: ../../api.rst:1384
msgid "The user is a HypeSquad Events member."
msgstr ""

#: ../../api.rst:1387
msgid "The user is a Bug Hunter."
msgstr ""

#: ../../api.rst:1390
msgid "The user has SMS recovery for Multi Factor Authentication enabled."
msgstr ""

#: ../../api.rst:1393
msgid "The user has dismissed the Discord Nitro promotion."
msgstr ""

#: ../../api.rst:1396
msgid "The user is a HypeSquad Bravery member."
msgstr ""

#: ../../api.rst:1399
msgid "The user is a HypeSquad Brilliance member."
msgstr ""

#: ../../api.rst:1402
msgid "The user is a HypeSquad Balance member."
msgstr ""

#: ../../api.rst:1405
msgid "The user is an Early Supporter."
msgstr ""

#: ../../api.rst:1408
msgid "The user is a Team User."
msgstr ""

#: ../../api.rst:1411
msgid "The user is a system user (i.e. represents Discord officially)."
msgstr ""

#: ../../api.rst:1414
msgid "The user has an unread system message."
msgstr ""

#: ../../api.rst:1417
msgid "The user is a Bug Hunter Level 2."
msgstr ""

#: ../../api.rst:1420
msgid "The user is a Verified Bot."
msgstr ""

#: ../../api.rst:1423
msgid "The user is an Early Verified Bot Developer."
msgstr ""

#: ../../api.rst:1426
msgid "The user is a Discord Certified Moderator."
msgstr ""

#: ../../api.rst:1430
msgid ""
"Specifies the type of :class:`Activity`. This is used to check how to "
"interpret the activity itself."
msgstr ""

#: ../../api.rst:1435
msgid "An unknown activity type. This should generally not happen."
msgstr ""

#: ../../api.rst:1438
msgid "A \"Playing\" activity type."
msgstr ""

#: ../../api.rst:1441
msgid "A \"Streaming\" activity type."
msgstr ""

#: ../../api.rst:1444
msgid "A \"Listening\" activity type."
msgstr ""

#: ../../api.rst:1447
msgid "A \"Watching\" activity type."
msgstr ""

#: ../../api.rst:1450
msgid "A custom activity type."
msgstr ""

#: ../../api.rst:1453
msgid "A competing activity type."
msgstr ""

#: ../../api.rst:1459
msgid "Represents the type of an application command."
msgstr ""

#: ../../api.rst:1465
msgid "Represents a slash command."
msgstr ""

#: ../../api.rst:1468
msgid "Represents a user command from the context menu."
msgstr ""

#: ../../api.rst:1471
msgid "Represents a message command from the context menu."
msgstr ""

#: ../../api.rst:1475
msgid "Specifies the type of :class:`Interaction`."
msgstr ""

#: ../../api.rst:1481
msgid ""
"Represents Discord pinging to see if the interaction response server is "
"alive."
msgstr ""

#: ../../api.rst:1484
msgid "Represents a slash command interaction."
msgstr ""

#: ../../api.rst:1487
msgid ""
"Represents a component based interaction, i.e. using the Discord Bot UI "
"Kit."
msgstr ""

#: ../../api.rst:1491
msgid "Specifies the response type for the interaction."
msgstr ""

#: ../../api.rst:1497
msgid "Pongs the interaction when given a ping."
msgstr ""

#: ../../api.rst:1499
msgid "See also :meth:`InteractionResponse.pong`"
msgstr ""

#: ../../api.rst:1502
msgid "Respond to the interaction with a message."
msgstr ""

#: ../../api.rst:1504
msgid "See also :meth:`InteractionResponse.send_message`"
msgstr ""

#: ../../api.rst:1507
msgid "Responds to the interaction with a message at a later time."
msgstr ""

#: ../../api.rst:1509 ../../api.rst:1515
msgid "See also :meth:`InteractionResponse.defer`"
msgstr ""

#: ../../api.rst:1512
msgid ""
"Acknowledges the component interaction with a promise that the message "
"will update later (though there is no need to actually update the "
"message)."
msgstr ""

#: ../../api.rst:1518
msgid "Responds to the interaction by editing the message."
msgstr ""

#: ../../api.rst:1520
msgid "See also :meth:`InteractionResponse.edit_message`"
msgstr ""

#: ../../api.rst:1524
msgid "Represents the component type of a component."
msgstr ""

#: ../../api.rst:1530
msgid "Represents the group component which holds different components in a row."
msgstr ""

#: ../../api.rst:1533
msgid "Represents a button component."
msgstr ""

#: ../../api.rst:1536
msgid "Represents a select component."
msgstr ""

#: ../../api.rst:1540
msgid "Represents the type of an option."
msgstr ""

#: ../../api.rst:1546
msgid "Represents a sub command of the main command or group."
msgstr ""

#: ../../api.rst:1549
msgid "Represents a sub command group of the main command."
msgstr ""

#: ../../api.rst:1552
msgid "Represents a string option."
msgstr ""

#: ../../api.rst:1555
msgid "Represents an integer option."
msgstr ""

#: ../../api.rst:1558
msgid "Represents a boolean option."
msgstr ""

#: ../../api.rst:1561
msgid "Represents a user option."
msgstr ""

#: ../../api.rst:1564
msgid "Represents a channel option."
msgstr ""

#: ../../api.rst:1567
msgid "Represents a role option."
msgstr ""

#: ../../api.rst:1570
msgid "Represents a role + user option."
msgstr ""

#: ../../api.rst:1573
msgid "Represents a float option."
msgstr ""

#: ../../api.rst:1578
msgid "Represents the style of the button component."
msgstr ""

#: ../../api.rst:1584
msgid "Represents a blurple button for the primary action."
msgstr ""

#: ../../api.rst:1587
msgid "Represents a grey button for the secondary action."
msgstr ""

#: ../../api.rst:1590
msgid "Represents a green button for a successful action."
msgstr ""

#: ../../api.rst:1593
msgid "Represents a red button for a dangerous action."
msgstr ""

#: ../../api.rst:1596
msgid "Represents a link button."
msgstr ""

#: ../../api.rst:1600
msgid "An alias for :attr:`primary`."
msgstr ""

#: ../../api.rst:1603 ../../api.rst:1606
msgid "An alias for :attr:`secondary`."
msgstr ""

#: ../../api.rst:1609
msgid "An alias for :attr:`success`."
msgstr ""

#: ../../api.rst:1612
msgid "An alias for :attr:`danger`."
msgstr ""

#: ../../api.rst:1615
msgid "An alias for :attr:`link`."
msgstr ""

#: ../../api.rst:1619
msgid "Specifies the region a voice server belongs to."
msgstr ""

#: ../../api.rst:1623
msgid "The Amsterdam region."
msgstr ""

#: ../../api.rst:1626
msgid "The Brazil region."
msgstr ""

#: ../../api.rst:1629
msgid "The Dubai region."
msgstr ""

#: ../../api.rst:1635
msgid "The EU Central region."
msgstr ""

#: ../../api.rst:1638
msgid "The EU West region."
msgstr ""

#: ../../api.rst:1641
msgid "The Europe region."
msgstr ""

#: ../../api.rst:1647
msgid "The Frankfurt region."
msgstr ""

#: ../../api.rst:1650
msgid "The Hong Kong region."
msgstr ""

#: ../../api.rst:1653
msgid "The India region."
msgstr ""

#: ../../api.rst:1659
msgid "The Japan region."
msgstr ""

#: ../../api.rst:1662
msgid "The London region."
msgstr ""

#: ../../api.rst:1665
msgid "The Russia region."
msgstr ""

#: ../../api.rst:1668
msgid "The Singapore region."
msgstr ""

#: ../../api.rst:1671
msgid "The South Africa region."
msgstr ""

#: ../../api.rst:1674
msgid "The South Korea region."
msgstr ""

#: ../../api.rst:1677
msgid "The Sydney region."
msgstr ""

#: ../../api.rst:1680
msgid "The US Central region."
msgstr ""

#: ../../api.rst:1683
msgid "The US East region."
msgstr ""

#: ../../api.rst:1686
msgid "The US South region."
msgstr ""

#: ../../api.rst:1689
msgid "The US West region."
msgstr ""

#: ../../api.rst:1692
msgid "The Amsterdam region for VIP guilds."
msgstr ""

#: ../../api.rst:1695
msgid "The US East region for VIP guilds."
msgstr ""

#: ../../api.rst:1698
msgid "The US West region for VIP guilds."
msgstr ""

#: ../../api.rst:1702
msgid ""
"Specifies a :class:`Guild`\\'s verification level, which is the criteria "
"in which a member must meet before being able to send messages to the "
"guild."
msgstr ""

#: ../../api.rst:1711
msgid "Checks if two verification levels are equal."
msgstr ""

#: ../../api.rst:1714
msgid "Checks if two verification levels are not equal."
msgstr ""

#: ../../api.rst:1717
msgid "Checks if a verification level is higher than another."
msgstr ""

#: ../../api.rst:1720
msgid "Checks if a verification level is lower than another."
msgstr ""

#: ../../api.rst:1723
msgid "Checks if a verification level is higher or equal to another."
msgstr ""

#: ../../api.rst:1726
msgid "Checks if a verification level is lower or equal to another."
msgstr ""

#: ../../api.rst:1730
msgid "No criteria set."
msgstr ""

#: ../../api.rst:1733
msgid "Member must have a verified email on their Discord account."
msgstr ""

#: ../../api.rst:1736
msgid ""
"Member must have a verified email and be registered on Discord for more "
"than five minutes."
msgstr ""

#: ../../api.rst:1740
msgid ""
"Member must have a verified email, be registered on Discord for more than"
" five minutes, and be a member of the guild itself for more than ten "
"minutes."
msgstr ""

#: ../../api.rst:1745
msgid "Member must have a verified phone on their Discord account."
msgstr ""

#: ../../api.rst:1749
msgid ""
"Specifies whether a :class:`Guild` has notifications on for all messages "
"or mentions only by default."
msgstr ""

#: ../../api.rst:1757
msgid "Checks if two notification levels are equal."
msgstr ""

#: ../../api.rst:1760
msgid "Checks if two notification levels are not equal."
msgstr ""

#: ../../api.rst:1763
msgid "Checks if a notification level is higher than another."
msgstr ""

#: ../../api.rst:1766
msgid "Checks if a notification level is lower than another."
msgstr ""

#: ../../api.rst:1769
msgid "Checks if a notification level is higher or equal to another."
msgstr ""

#: ../../api.rst:1772
msgid "Checks if a notification level is lower or equal to another."
msgstr ""

#: ../../api.rst:1776
msgid ""
"Members receive notifications for every message regardless of them being "
"mentioned."
msgstr ""

#: ../../api.rst:1779
msgid "Members receive notifications for messages they are mentioned in."
msgstr ""

#: ../../api.rst:1783
msgid ""
"Specifies a :class:`Guild`\\'s explicit content filter, which is the "
"machine learning algorithms that Discord uses to detect if an image "
"contains pornography or otherwise explicit content."
msgstr ""

#: ../../api.rst:1793
msgid "Checks if two content filter levels are equal."
msgstr ""

#: ../../api.rst:1796
msgid "Checks if two content filter levels are not equal."
msgstr ""

#: ../../api.rst:1799
msgid "Checks if a content filter level is higher than another."
msgstr ""

#: ../../api.rst:1802
msgid "Checks if a content filter level is lower than another."
msgstr ""

#: ../../api.rst:1805
msgid "Checks if a content filter level is higher or equal to another."
msgstr ""

#: ../../api.rst:1808
msgid "Checks if a content filter level is lower or equal to another."
msgstr ""

#: ../../api.rst:1812
msgid "The guild does not have the content filter enabled."
msgstr ""

#: ../../api.rst:1815
msgid "The guild has the content filter enabled for members without a role."
msgstr ""

#: ../../api.rst:1818
msgid "The guild has the content filter enabled for every member."
msgstr ""

#: ../../api.rst:1822
msgid "Specifies a :class:`Member` 's status."
msgstr ""

#: ../../api.rst:1826
msgid "The member is online."
msgstr ""

#: ../../api.rst:1829
msgid "The member is offline."
msgstr ""

#: ../../api.rst:1832
msgid "The member is idle."
msgstr ""

#: ../../api.rst:1835
msgid "The member is \"Do Not Disturb\"."
msgstr ""

#: ../../api.rst:1838
msgid "An alias for :attr:`dnd`."
msgstr ""

#: ../../api.rst:1841
msgid ""
"The member is \"invisible\". In reality, this is only used in sending a "
"presence a la :meth:`Client.change_presence`. When you receive a user's "
"presence this will be :attr:`offline` instead."
msgstr ""

#: ../../api.rst:1848
msgid ""
"Represents the type of action being done for a :class:`AuditLogEntry`\\, "
"which is retrievable via :meth:`Guild.audit_logs`."
msgstr ""

#: ../../api.rst:1853
msgid "The guild has updated. Things that trigger this include:"
msgstr ""

#: ../../api.rst:1855
msgid "Changing the guild vanity URL"
msgstr ""

#: ../../api.rst:1856
msgid "Changing the guild invite splash"
msgstr ""

#: ../../api.rst:1857
msgid "Changing the guild AFK channel or timeout"
msgstr ""

#: ../../api.rst:1858
msgid "Changing the guild voice server region"
msgstr ""

#: ../../api.rst:1859
msgid "Changing the guild icon, banner, or discovery splash"
msgstr ""

#: ../../api.rst:1860
msgid "Changing the guild moderation settings"
msgstr ""

#: ../../api.rst:1861
msgid "Changing things related to the guild widget"
msgstr ""

#: ../../api.rst:1863
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Guild`."
msgstr ""

#: ../../api.rst:1866 ../../api.rst:1892 ../../api.rst:1911 ../../api.rst:1933
#: ../../api.rst:1952 ../../api.rst:1968 ../../api.rst:1983 ../../api.rst:2042
#: ../../api.rst:2056 ../../api.rst:2101 ../../api.rst:2121 ../../api.rst:2136
#: ../../api.rst:2151 ../../api.rst:2175 ../../api.rst:2192 ../../api.rst:2208
#: ../../api.rst:2221 ../../api.rst:2234 ../../api.rst:2245 ../../api.rst:2256
#: ../../api.rst:2353 ../../api.rst:2368 ../../api.rst:2389 ../../api.rst:2408
#: ../../api.rst:2427 ../../api.rst:2446 ../../api.rst:2463 ../../api.rst:2480
msgid "Possible attributes for :class:`AuditLogDiff`:"
msgstr ""

#: ../../api.rst:1868
msgid ":attr:`~AuditLogDiff.afk_channel`"
msgstr ""

#: ../../api.rst:1869
msgid ":attr:`~AuditLogDiff.system_channel`"
msgstr ""

#: ../../api.rst:1870
msgid ":attr:`~AuditLogDiff.afk_timeout`"
msgstr ""

#: ../../api.rst:1871
msgid ":attr:`~AuditLogDiff.default_message_notifications`"
msgstr ""

#: ../../api.rst:1872
msgid ":attr:`~AuditLogDiff.explicit_content_filter`"
msgstr ""

#: ../../api.rst:1873
msgid ":attr:`~AuditLogDiff.mfa_level`"
msgstr ""

#: ../../api.rst:1874 ../../api.rst:1894 ../../api.rst:1913 ../../api.rst:1935
#: ../../api.rst:2106 ../../api.rst:2126 ../../api.rst:2141 ../../api.rst:2195
#: ../../api.rst:2211 ../../api.rst:2224 ../../api.rst:2236 ../../api.rst:2247
#: ../../api.rst:2258 ../../api.rst:2391 ../../api.rst:2410 ../../api.rst:2429
#: ../../api.rst:2448 ../../api.rst:2465 ../../api.rst:2482
msgid ":attr:`~AuditLogDiff.name`"
msgstr ""

#: ../../api.rst:1875
msgid ":attr:`~AuditLogDiff.owner`"
msgstr ""

#: ../../api.rst:1876
msgid ":attr:`~AuditLogDiff.splash`"
msgstr ""

#: ../../api.rst:1877
msgid ":attr:`~AuditLogDiff.discovery_splash`"
msgstr ""

#: ../../api.rst:1878
msgid ":attr:`~AuditLogDiff.icon`"
msgstr ""

#: ../../api.rst:1879
msgid ":attr:`~AuditLogDiff.banner`"
msgstr ""

#: ../../api.rst:1880
msgid ":attr:`~AuditLogDiff.vanity_url_code`"
msgstr ""

#: ../../api.rst:1884
msgid "A new channel was created."
msgstr ""

#: ../../api.rst:1886
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is "
"either a :class:`abc.GuildChannel` or :class:`Object` with an ID."
msgstr ""

#: ../../api.rst:1889
msgid ""
"A more filled out object in the :class:`Object` case can be found by "
"using :attr:`~AuditLogEntry.after`."
msgstr ""

#: ../../api.rst:1895 ../../api.rst:1914 ../../api.rst:1936 ../../api.rst:1957
#: ../../api.rst:1973 ../../api.rst:1988 ../../api.rst:2393 ../../api.rst:2412
#: ../../api.rst:2431
msgid ":attr:`~AuditLogDiff.type`"
msgstr ""

#: ../../api.rst:1896 ../../api.rst:1916 ../../api.rst:1937
msgid ":attr:`~AuditLogDiff.overwrites`"
msgstr ""

#: ../../api.rst:1900
msgid "A channel was updated. Things that trigger this include:"
msgstr ""

#: ../../api.rst:1902
msgid "The channel name or topic was changed"
msgstr ""

#: ../../api.rst:1903
msgid "The channel bitrate was changed"
msgstr ""

#: ../../api.rst:1905 ../../api.rst:1943
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`abc.GuildChannel` or :class:`Object` with an ID."
msgstr ""

#: ../../api.rst:1908
msgid ""
"A more filled out object in the :class:`Object` case can be found by "
"using :attr:`~AuditLogEntry.after` or :attr:`~AuditLogEntry.before`."
msgstr ""

#: ../../api.rst:1915
msgid ":attr:`~AuditLogDiff.position`"
msgstr ""

#: ../../api.rst:1917 ../../api.rst:2355 ../../api.rst:2370
msgid ":attr:`~AuditLogDiff.topic`"
msgstr ""

#: ../../api.rst:1918
msgid ":attr:`~AuditLogDiff.bitrate`"
msgstr ""

#: ../../api.rst:1919
msgid ":attr:`~AuditLogDiff.rtc_region`"
msgstr ""

#: ../../api.rst:1920
msgid ":attr:`~AuditLogDiff.video_quality_mode`"
msgstr ""

#: ../../api.rst:1921
msgid ":attr:`~AuditLogDiff.default_auto_archive_duration`"
msgstr ""

#: ../../api.rst:1925
msgid "A channel was deleted."
msgstr ""

#: ../../api.rst:1927
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is an "
":class:`Object` with an ID."
msgstr ""

#: ../../api.rst:1930
msgid ""
"A more filled out object can be found by using the "
":attr:`~AuditLogEntry.before` object."
msgstr ""

#: ../../api.rst:1941
msgid "A channel permission overwrite was created."
msgstr ""

#: ../../api.rst:1946
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.extra` is "
"either a :class:`Role` or :class:`Member`. If the object is not found "
"then it is a :class:`Object` with an ID being filled, a name, and a "
"``type`` attribute set to either ``'role'`` or ``'member'`` to help "
"dictate what type of ID it is."
msgstr ""

#: ../../api.rst:1954 ../../api.rst:1970 ../../api.rst:1985
msgid ":attr:`~AuditLogDiff.deny`"
msgstr ""

#: ../../api.rst:1955 ../../api.rst:1971 ../../api.rst:1986
msgid ":attr:`~AuditLogDiff.allow`"
msgstr ""

#: ../../api.rst:1956 ../../api.rst:1972 ../../api.rst:1987
msgid ":attr:`~AuditLogDiff.id`"
msgstr ""

#: ../../api.rst:1961
msgid ""
"A channel permission overwrite was changed, this is typically when the "
"permission values change."
msgstr ""

#: ../../api.rst:1964 ../../api.rst:1979
msgid ""
"See :attr:`overwrite_create` for more information on how the "
":attr:`~AuditLogEntry.target` and :attr:`~AuditLogEntry.extra` fields are"
" set."
msgstr ""

#: ../../api.rst:1977
msgid "A channel permission overwrite was deleted."
msgstr ""

#: ../../api.rst:1992
msgid "A member was kicked."
msgstr ""

#: ../../api.rst:1994
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`User` who got kicked."
msgstr ""

#: ../../api.rst:1997 ../../api.rst:2012 ../../api.rst:2021 ../../api.rst:2030
msgid "When this is the action, :attr:`~AuditLogEntry.changes` is empty."
msgstr ""

#: ../../api.rst:2001
msgid "A member prune was triggered."
msgstr ""

#: ../../api.rst:2003
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is set"
" to ``None``."
msgstr ""

#: ../../api.rst:2006 ../../api.rst:2065 ../../api.rst:2268 ../../api.rst:2295
#: ../../api.rst:2310
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.extra` is set "
"to an unspecified proxy object with two attributes:"
msgstr ""

#: ../../api.rst:2009
msgid "``delete_members_days``: An integer specifying how far the prune was."
msgstr ""

#: ../../api.rst:2010
msgid "``members_removed``: An integer specifying how many members were removed."
msgstr ""

#: ../../api.rst:2016
msgid "A member was banned."
msgstr ""

#: ../../api.rst:2018
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`User` who got banned."
msgstr ""

#: ../../api.rst:2025
msgid "A member was unbanned."
msgstr ""

#: ../../api.rst:2027
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`User` who got unbanned."
msgstr ""

#: ../../api.rst:2034
msgid "A member has updated. This triggers in the following situations:"
msgstr ""

#: ../../api.rst:2036
msgid "A nickname was changed"
msgstr ""

#: ../../api.rst:2037
msgid "They were server muted or deafened (or it was undo'd)"
msgstr ""

#: ../../api.rst:2039
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Member` or :class:`User` who got updated."
msgstr ""

#: ../../api.rst:2044
msgid ":attr:`~AuditLogDiff.nick`"
msgstr ""

#: ../../api.rst:2045
msgid ":attr:`~AuditLogDiff.mute`"
msgstr ""

#: ../../api.rst:2046
msgid ":attr:`~AuditLogDiff.deaf`"
msgstr ""

#: ../../api.rst:2050
msgid ""
"A member's role has been updated. This triggers when a member either "
"gains a role or loses a role."
msgstr ""

#: ../../api.rst:2053
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Member` or :class:`User` who got the role."
msgstr ""

#: ../../api.rst:2058
msgid ":attr:`~AuditLogDiff.roles`"
msgstr ""

#: ../../api.rst:2062
msgid ""
"A member's voice channel has been updated. This triggers when a member is"
" moved to a different voice channel."
msgstr ""

#: ../../api.rst:2068
msgid ""
"``channel``: A :class:`TextChannel` or :class:`Object` with the channel "
"ID where the members were moved."
msgstr ""

#: ../../api.rst:2069
msgid "``count``: An integer specifying how many members were moved."
msgstr ""

#: ../../api.rst:2075
msgid ""
"A member's voice state has changed. This triggers when a member is force "
"disconnected from voice."
msgstr ""

#: ../../api.rst:2078 ../../api.rst:2281
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.extra` is set "
"to an unspecified proxy object with one attribute:"
msgstr ""

#: ../../api.rst:2081
msgid "``count``: An integer specifying how many members were disconnected."
msgstr ""

#: ../../api.rst:2087
msgid "A bot was added to the guild."
msgstr ""

#: ../../api.rst:2089
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Member` or :class:`User` which was added to the guild."
msgstr ""

#: ../../api.rst:2096
msgid "A new role was created."
msgstr ""

#: ../../api.rst:2098 ../../api.rst:2118 ../../api.rst:2133
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Role` or a :class:`Object` with the ID."
msgstr ""

#: ../../api.rst:2103 ../../api.rst:2123 ../../api.rst:2138
msgid ":attr:`~AuditLogDiff.colour`"
msgstr ""

#: ../../api.rst:2104 ../../api.rst:2124 ../../api.rst:2139
msgid ":attr:`~AuditLogDiff.mentionable`"
msgstr ""

#: ../../api.rst:2105 ../../api.rst:2125 ../../api.rst:2140
msgid ":attr:`~AuditLogDiff.hoist`"
msgstr ""

#: ../../api.rst:2107 ../../api.rst:2127 ../../api.rst:2142
msgid ":attr:`~AuditLogDiff.permissions`"
msgstr ""

#: ../../api.rst:2111
msgid "A role was updated. This triggers in the following situations:"
msgstr ""

#: ../../api.rst:2113
msgid "The name has changed"
msgstr ""

#: ../../api.rst:2114
msgid "The permissions have changed"
msgstr ""

#: ../../api.rst:2115
msgid "The colour has changed"
msgstr ""

#: ../../api.rst:2116
msgid "Its hoist/mentionable state has changed"
msgstr ""

#: ../../api.rst:2131
msgid "A role was deleted."
msgstr ""

#: ../../api.rst:2146
msgid "An invite was created."
msgstr ""

#: ../../api.rst:2148
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Invite` that was created."
msgstr ""

#: ../../api.rst:2153 ../../api.rst:2177
msgid ":attr:`~AuditLogDiff.max_age`"
msgstr ""

#: ../../api.rst:2154 ../../api.rst:2178
msgid ":attr:`~AuditLogDiff.code`"
msgstr ""

#: ../../api.rst:2155 ../../api.rst:2179
msgid ":attr:`~AuditLogDiff.temporary`"
msgstr ""

#: ../../api.rst:2156 ../../api.rst:2180
msgid ":attr:`~AuditLogDiff.inviter`"
msgstr ""

#: ../../api.rst:2157 ../../api.rst:2181 ../../api.rst:2194 ../../api.rst:2210
#: ../../api.rst:2223
msgid ":attr:`~AuditLogDiff.channel`"
msgstr ""

#: ../../api.rst:2158 ../../api.rst:2182
msgid ":attr:`~AuditLogDiff.uses`"
msgstr ""

#: ../../api.rst:2159 ../../api.rst:2183
msgid ":attr:`~AuditLogDiff.max_uses`"
msgstr ""

#: ../../api.rst:2163
msgid "An invite was updated."
msgstr ""

#: ../../api.rst:2165
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Invite` that was updated."
msgstr ""

#: ../../api.rst:2170
msgid "An invite was deleted."
msgstr ""

#: ../../api.rst:2172
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Invite` that was deleted."
msgstr ""

#: ../../api.rst:2187
msgid "A webhook was created."
msgstr ""

#: ../../api.rst:2189 ../../api.rst:2205 ../../api.rst:2218
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Object` with the webhook ID."
msgstr ""

#: ../../api.rst:2196 ../../api.rst:2225
msgid ":attr:`~AuditLogDiff.type` (always set to ``1`` if so)"
msgstr ""

#: ../../api.rst:2200
msgid "A webhook was updated. This trigger in the following situations:"
msgstr ""

#: ../../api.rst:2202
msgid "The webhook name changed"
msgstr ""

#: ../../api.rst:2203
msgid "The webhook channel changed"
msgstr ""

#: ../../api.rst:2212
msgid ":attr:`~AuditLogDiff.avatar`"
msgstr ""

#: ../../api.rst:2216
msgid "A webhook was deleted."
msgstr ""

#: ../../api.rst:2229
msgid "An emoji was created."
msgstr ""

#: ../../api.rst:2231 ../../api.rst:2242
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Emoji` or :class:`Object` with the emoji ID."
msgstr ""

#: ../../api.rst:2240
msgid "An emoji was updated. This triggers when the name has changed."
msgstr ""

#: ../../api.rst:2251
msgid "An emoji was deleted."
msgstr ""

#: ../../api.rst:2253
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Object` with the emoji ID."
msgstr ""

#: ../../api.rst:2262
msgid ""
"A message was deleted by a moderator. Note that this only triggers if the"
" message was deleted by someone other than the author."
msgstr ""

#: ../../api.rst:2265
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Member` or :class:`User` who had their message deleted."
msgstr ""

#: ../../api.rst:2271 ../../api.rst:2284
msgid "``count``: An integer specifying how many messages were deleted."
msgstr ""

#: ../../api.rst:2272
msgid ""
"``channel``: A :class:`TextChannel` or :class:`Object` with the channel "
"ID where the message got deleted."
msgstr ""

#: ../../api.rst:2276
msgid "Messages were bulk deleted by a moderator."
msgstr ""

#: ../../api.rst:2278
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`TextChannel` or :class:`Object` with the ID of the channel that "
"was purged."
msgstr ""

#: ../../api.rst:2290
msgid "A message was pinned in a channel."
msgstr ""

#: ../../api.rst:2292
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Member` or :class:`User` who had their message pinned."
msgstr ""

#: ../../api.rst:2298
msgid ""
"``channel``: A :class:`TextChannel` or :class:`Object` with the channel "
"ID where the message was pinned."
msgstr ""

#: ../../api.rst:2299
msgid "``message_id``: the ID of the message which was pinned."
msgstr ""

#: ../../api.rst:2305
msgid "A message was unpinned in a channel."
msgstr ""

#: ../../api.rst:2307
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Member` or :class:`User` who had their message unpinned."
msgstr ""

#: ../../api.rst:2313
msgid ""
"``channel``: A :class:`TextChannel` or :class:`Object` with the channel "
"ID where the message was unpinned."
msgstr ""

#: ../../api.rst:2314
msgid "``message_id``: the ID of the message which was unpinned."
msgstr ""

#: ../../api.rst:2320
msgid "A guild integration was created."
msgstr ""

#: ../../api.rst:2322
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Object` with the integration ID of the integration which was "
"created."
msgstr ""

#: ../../api.rst:2329
msgid "A guild integration was updated."
msgstr ""

#: ../../api.rst:2331
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Object` with the integration ID of the integration which was "
"updated."
msgstr ""

#: ../../api.rst:2338
msgid "A guild integration was deleted."
msgstr ""

#: ../../api.rst:2340
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Object` with the integration ID of the integration which was "
"deleted."
msgstr ""

#: ../../api.rst:2347
msgid "A stage instance was started."
msgstr ""

#: ../../api.rst:2349
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`StageInstance` or :class:`Object` with the ID of the stage "
"instance which was created."
msgstr ""

#: ../../api.rst:2356 ../../api.rst:2371
msgid ":attr:`~AuditLogDiff.privacy_level`"
msgstr ""

#: ../../api.rst:2362
msgid "A stage instance was updated."
msgstr ""

#: ../../api.rst:2364
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`StageInstance` or :class:`Object` with the ID of the stage "
"instance which was updated."
msgstr ""

#: ../../api.rst:2377
msgid "A stage instance was ended."
msgstr ""

#: ../../api.rst:2383
msgid "A sticker was created."
msgstr ""

#: ../../api.rst:2385 ../../api.rst:2404 ../../api.rst:2423
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`GuildSticker` or :class:`Object` with the ID of the sticker "
"which was updated."
msgstr ""

#: ../../api.rst:2392 ../../api.rst:2411 ../../api.rst:2430
msgid ":attr:`~AuditLogDiff.emoji`"
msgstr ""

#: ../../api.rst:2394 ../../api.rst:2413 ../../api.rst:2432
msgid ":attr:`~AuditLogDiff.format_type`"
msgstr ""

#: ../../api.rst:2395 ../../api.rst:2414 ../../api.rst:2433
msgid ":attr:`~AuditLogDiff.description`"
msgstr ""

#: ../../api.rst:2396 ../../api.rst:2415 ../../api.rst:2434
msgid ":attr:`~AuditLogDiff.available`"
msgstr ""

#: ../../api.rst:2402
msgid "A sticker was updated."
msgstr ""

#: ../../api.rst:2421
msgid "A sticker was deleted."
msgstr ""

#: ../../api.rst:2440
msgid "A thread was created."
msgstr ""

#: ../../api.rst:2442
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Thread` or :class:`Object` with the ID of the thread which was "
"created."
msgstr ""

#: ../../api.rst:2449 ../../api.rst:2466 ../../api.rst:2483
msgid ":attr:`~AuditLogDiff.archived`"
msgstr ""

#: ../../api.rst:2450 ../../api.rst:2467 ../../api.rst:2484
msgid ":attr:`~AuditLogDiff.locked`"
msgstr ""

#: ../../api.rst:2451 ../../api.rst:2468 ../../api.rst:2485
msgid ":attr:`~AuditLogDiff.auto_archive_duration`"
msgstr ""

#: ../../api.rst:2457
msgid "A thread was updated."
msgstr ""

#: ../../api.rst:2459
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Thread` or :class:`Object` with the ID of the thread which was "
"updated."
msgstr ""

#: ../../api.rst:2474
msgid "A thread was deleted."
msgstr ""

#: ../../api.rst:2476
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Thread` or :class:`Object` with the ID of the thread which was "
"deleted."
msgstr ""

#: ../../api.rst:2491
msgid "Represents the category that the :class:`AuditLogAction` belongs to."
msgstr ""

#: ../../api.rst:2493
msgid "This can be retrieved via :attr:`AuditLogEntry.category`."
msgstr ""

#: ../../api.rst:2497
msgid "The action is the creation of something."
msgstr ""

#: ../../api.rst:2501
msgid "The action is the deletion of something."
msgstr ""

#: ../../api.rst:2505
msgid "The action is the update of something."
msgstr ""

#: ../../api.rst:2509
msgid ""
"Represents the membership state of a team member retrieved through "
":func:`Client.application_info`."
msgstr ""

#: ../../api.rst:2515
msgid "Represents an invited member."
msgstr ""

#: ../../api.rst:2519
msgid "Represents a member currently in the team."
msgstr ""

#: ../../api.rst:2523
msgid "Represents the type of webhook that can be received."
msgstr ""

#: ../../api.rst:2529
msgid "Represents a webhook that can post messages to channels with a token."
msgstr ""

#: ../../api.rst:2533
msgid ""
"Represents a webhook that is internally managed by Discord, used for "
"following channels."
msgstr ""

#: ../../api.rst:2537
msgid "Represents a webhook that is used for interactions or applications."
msgstr ""

#: ../../api.rst:2543
msgid ""
"Represents the behaviour the :class:`Integration` should perform when a "
"user's subscription has finished."
msgstr ""

#: ../../api.rst:2546
msgid "There is an alias for this called ``ExpireBehavior``."
msgstr ""

#: ../../api.rst:2552
msgid ""
"This will remove the :attr:`StreamIntegration.role` from the user when "
"their subscription is finished."
msgstr ""

#: ../../api.rst:2557
msgid "This will kick the user when their subscription is finished."
msgstr ""

#: ../../api.rst:2561
msgid "Represents the default avatar of a Discord :class:`User`"
msgstr ""

#: ../../api.rst:2565
msgid ""
"Represents the default avatar with the color blurple. See also "
":attr:`Colour.blurple`"
msgstr ""

#: ../../api.rst:2569
msgid ""
"Represents the default avatar with the color grey. See also "
":attr:`Colour.greyple`"
msgstr ""

#: ../../api.rst:2573
msgid "An alias for :attr:`grey`."
msgstr ""

#: ../../api.rst:2576
msgid ""
"Represents the default avatar with the color green. See also "
":attr:`Colour.green`"
msgstr ""

#: ../../api.rst:2580
msgid ""
"Represents the default avatar with the color orange. See also "
":attr:`Colour.orange`"
msgstr ""

#: ../../api.rst:2584
msgid ""
"Represents the default avatar with the color red. See also "
":attr:`Colour.red`"
msgstr ""

#: ../../api.rst:2589
msgid "Represents the type of sticker."
msgstr ""

#: ../../api.rst:2595
msgid "Represents a standard sticker that all Nitro users can use."
msgstr ""

#: ../../api.rst:2599
msgid "Represents a custom sticker created in a guild."
msgstr ""

#: ../../api.rst:2603
msgid "Represents the type of sticker images."
msgstr ""

#: ../../api.rst:2609
msgid "Represents a sticker with a png image."
msgstr ""

#: ../../api.rst:2613
msgid "Represents a sticker with an apng image."
msgstr ""

#: ../../api.rst:2617
msgid "Represents a sticker with a lottie image."
msgstr ""

#: ../../api.rst:2621
msgid "Represents the invite type for voice channel invites."
msgstr ""

#: ../../api.rst:2627
msgid "The invite doesn't target anyone or anything."
msgstr ""

#: ../../api.rst:2631
msgid "A stream invite that targets a user."
msgstr ""

#: ../../api.rst:2635
msgid "A stream invite that targets an embedded application."
msgstr ""

#: ../../api.rst:2639
msgid "Represents the camera video quality mode for voice channel participants."
msgstr ""

#: ../../api.rst:2645
msgid "Represents auto camera video quality."
msgstr ""

#: ../../api.rst:2649
msgid "Represents full camera video quality."
msgstr ""

#: ../../api.rst:2653
msgid "Represents a stage instance's privacy level."
msgstr ""

#: ../../api.rst:2659
msgid "The stage instance can be joined by external users."
msgstr ""

#: ../../api.rst:2663
msgid "The stage instance can only be joined by members of the guild."
msgstr ""

#: ../../api.rst:2667
msgid "Alias for :attr:`.closed`"
msgstr ""

#: ../../api.rst:2671
msgid "Represents the NSFW level of a guild."
msgstr ""

#: ../../api.rst:2679
msgid "Checks if two NSFW levels are equal."
msgstr ""

#: ../../api.rst:2682
msgid "Checks if two NSFW levels are not equal."
msgstr ""

#: ../../api.rst:2685
msgid "Checks if a NSFW level is higher than another."
msgstr ""

#: ../../api.rst:2688
msgid "Checks if a NSFW level is lower than another."
msgstr ""

#: ../../api.rst:2691
msgid "Checks if a NSFW level is higher or equal to another."
msgstr ""

#: ../../api.rst:2694
msgid "Checks if a NSFW level is lower or equal to another."
msgstr ""

#: ../../api.rst:2698
msgid "The guild has not been categorised yet."
msgstr ""

#: ../../api.rst:2702
msgid "The guild contains NSFW content."
msgstr ""

#: ../../api.rst:2706
msgid "The guild does not contain any NSFW content."
msgstr ""

#: ../../api.rst:2710
msgid "The guild may contain NSFW content."
msgstr ""

#: ../../api.rst:2713
msgid "Async Iterator"
msgstr ""

#: ../../api.rst:2715
msgid ""
"Some API functions return an \"async iterator\". An async iterator is "
"something that is capable of being used in an :ref:`async for statement "
"<py:async for>`."
msgstr ""

#: ../../api.rst:2718
msgid "These async iterators can be used as follows: ::"
msgstr ""

#: ../../api.rst:2723
msgid ""
"Certain utilities make working with async iterators easier, detailed "
"below."
msgstr ""

#: ../../api.rst:2727
msgid ""
"Represents the \"AsyncIterator\" concept. Note that no such class exists,"
" it is purely abstract."
msgstr ""

#: ../../api.rst:2734
msgid "Iterates over the contents of the async iterator."
msgstr ""

#: ../../api.rst:2742
msgid ""
"Advances the iterator by one, if possible. If no more items are found "
"then this raises :exc:`NoMoreItems`."
msgstr ""

#: ../../api.rst:2750
msgid "Similar to :func:`utils.get` except run over the async iterator."
msgstr ""

#: ../../api.rst:2752
msgid "Getting the last message by a user named 'Dave' or ``None``: ::"
msgstr ""

#: ../../api.rst:2761
msgid "Similar to :func:`utils.find` except run over the async iterator."
msgstr ""

#: ../../api.rst:2763
msgid ""
"Unlike :func:`utils.find`\\, the predicate provided can be a "
"|coroutine_link|_."
msgstr ""

#: ../../api.rst:2766
msgid "Getting the last audit log with a reason or ``None``: ::"
msgstr ""

#: ../../api.rst:2773
msgid "The predicate to use. Could be a |coroutine_link|_."
msgstr ""

#: ../../api.rst:2774
msgid "The first element that returns ``True`` for the predicate or ``None``."
msgstr ""

#: ../../api.rst:2781
msgid "Flattens the async iterator into a :class:`list` with all the elements."
msgstr ""

#: ../../api.rst:2783
msgid "A list of every element in the async iterator."
msgstr ""

#: ../../api.rst:2788
msgid ""
"Collects items into chunks of up to a given maximum size. Another "
":class:`AsyncIterator` is returned which collects items into "
":class:`list`\\s of a given size. The maximum chunk size must be a "
"positive integer."
msgstr ""

#: ../../api.rst:2794
msgid "Collecting groups of users: ::"
msgstr ""

#: ../../api.rst:2803
msgid "The size of individual chunks."
msgstr ""

#: ../../api.rst:2804 ../../api.rst:2822 ../../api.rst:2839
msgid ":class:`AsyncIterator`"
msgstr ""

#: ../../api.rst:2808
msgid ""
"This is similar to the built-in :func:`map <py:map>` function. Another "
":class:`AsyncIterator` is returned that executes the function on every "
"element it is iterating over. This function can either be a regular "
"function or a |coroutine_link|_."
msgstr ""

#: ../../api.rst:2813
msgid "Creating a content iterator: ::"
msgstr ""

#: ../../api.rst:2821
msgid "The function to call on every element. Could be a |coroutine_link|_."
msgstr ""

#: ../../api.rst:2826
msgid ""
"This is similar to the built-in :func:`filter <py:filter>` function. "
"Another :class:`AsyncIterator` is returned that filters over the original"
" async iterator. This predicate can be a regular function or a "
"|coroutine_link|_."
msgstr ""

#: ../../api.rst:2830
msgid "Getting messages by non-bot accounts: ::"
msgstr ""

#: ../../api.rst:2838
msgid "The predicate to call on every element. Could be a |coroutine_link|_."
msgstr ""

#: ../../api.rst:2844
msgid "Audit Log Data"
msgstr ""

#: ../../api.rst:2846
msgid ""
"Working with :meth:`Guild.audit_logs` is a complicated process with a lot"
" of machinery involved. The library attempts to make it easy to use and "
"friendly. In order to accomplish this goal, it must make use of a couple "
"of data classes that aid in this goal."
msgstr ""

#: ../../api.rst:2851
msgid "AuditLogEntry"
msgstr ""

#: disnake.audit_logs.AuditLogEntry:1 of
msgid "Represents an Audit Log entry."
msgstr ""

#: disnake.audit_logs.AuditLogEntry:3 of
msgid "You retrieve these via :meth:`Guild.audit_logs`."
msgstr ""

#: disnake.audit_logs.AuditLogEntry:9 of
msgid "Checks if two entries are equal."
msgstr ""

#: disnake.audit_logs.AuditLogEntry:13 of
msgid "Checks if two entries are not equal."
msgstr ""

#: disnake.audit_logs.AuditLogEntry:17 of
msgid "Returns the entry's hash."
msgstr ""

#: disnake.audit_logs.AuditLogEntry:19 of
msgid "Audit log entries are now comparable and hashable."
msgstr ""

#: disnake.audit_logs.AuditLogEntry:24 of
msgid "The action that was done."
msgstr ""

#: disnake.audit_logs.AuditLogEntry:26 of
msgid ":class:`AuditLogAction`"
msgstr ""

#: disnake.audit_logs.AuditLogEntry:30 of
msgid ""
"The user who initiated this action. Usually a :class:`Member`\\, unless "
"gone then it's a :class:`User`."
msgstr ""

#: disnake.audit_logs.AuditLogEntry:33 of
msgid ":class:`abc.User`"
msgstr ""

#: disnake.audit_logs.AuditLogEntry:37 of
msgid "The entry ID."
msgstr ""

#: disnake.audit_logs.AuditLogEntry:43 of
msgid ""
"The target that got changed. The exact type of this depends on the action"
" being done."
msgstr ""

#: disnake.audit_logs.AuditLogEntry:46 disnake.audit_logs.AuditLogEntry:61 of
msgid "Any"
msgstr ""

#: disnake.audit_logs.AuditLogEntry:50 of
msgid "The reason this action was done."
msgstr ""

#: disnake.audit_logs.AuditLogEntry:56 of
msgid ""
"Extra information that this entry has that might be useful. For most "
"actions, this is ``None``. However in some cases it contains extra "
"information. See :class:`AuditLogAction` for which actions have this "
"field filled out."
msgstr ""

#: ../../docstring disnake.AuditLogEntry.created_at:1 of
msgid "Returns the entry's creation time in UTC."
msgstr ""

#: ../../docstring disnake.AuditLogEntry.category:1 of
msgid "The category of the action, if applicable."
msgstr ""

#: ../../docstring disnake.AuditLogEntry.category:3 of
msgid "Optional[:class:`AuditLogActionCategory`]"
msgstr ""

#: ../../docstring disnake.AuditLogEntry.changes:1 of
msgid "The list of changes this entry has."
msgstr ""

#: ../../docstring disnake.AuditLogEntry.changes:3 of
msgid ":class:`AuditLogChanges`"
msgstr ""

#: ../../docstring disnake.AuditLogEntry.before:1 of
msgid "The target's prior state."
msgstr ""

#: ../../docstring disnake.AuditLogEntry.after:3 disnake.AuditLogEntry.before:3
#: of
msgid ":class:`AuditLogDiff`"
msgstr ""

#: ../../docstring disnake.AuditLogEntry.after:1 of
msgid "The target's subsequent state."
msgstr ""

#: ../../api.rst:2859
msgid "AuditLogChanges"
msgstr ""

#: ../../api.rst:2865
msgid "An audit log change set."
msgstr ""

#: ../../api.rst:2869
msgid "The old value. The attribute has the type of :class:`AuditLogDiff`."
msgstr ""

#: ../../api.rst:2871 ../../api.rst:2891
msgid ""
"Depending on the :class:`AuditLogActionCategory` retrieved by "
":attr:`~AuditLogEntry.category`\\, the data retrieved by this attribute "
"differs:"
msgstr ""

#: ../../api.rst:2876 ../../api.rst:2896
msgid "Category"
msgstr ""

#: ../../api.rst:2878 ../../api.rst:2898
msgid ":attr:`~AuditLogActionCategory.create`"
msgstr ""

#: ../../api.rst:2878
msgid "All attributes are set to ``None``."
msgstr ""

#: ../../api.rst:2880 ../../api.rst:2900
msgid ":attr:`~AuditLogActionCategory.delete`"
msgstr ""

#: ../../api.rst:2880
msgid "All attributes are set the value before deletion."
msgstr ""

#: ../../api.rst:2882 ../../api.rst:2902
msgid ":attr:`~AuditLogActionCategory.update`"
msgstr ""

#: ../../api.rst:2882
msgid "All attributes are set the value before updating."
msgstr ""

#: ../../api.rst:2884 ../../api.rst:2904
msgid "``None``"
msgstr ""

#: ../../api.rst:2884 ../../api.rst:2904
msgid "No attributes are set."
msgstr ""

#: ../../api.rst:2889
msgid "The new value. The attribute has the type of :class:`AuditLogDiff`."
msgstr ""

#: ../../api.rst:2898
msgid "All attributes are set to the created value"
msgstr ""

#: ../../api.rst:2900
msgid "All attributes are set to ``None``"
msgstr ""

#: ../../api.rst:2902
msgid "All attributes are set the value after updating."
msgstr ""

#: ../../api.rst:2908
msgid "AuditLogDiff"
msgstr ""

#: ../../api.rst:2914
msgid ""
"Represents an audit log \"change\" object. A change object has dynamic "
"attributes that depend on the type of action being done. Certain actions "
"map to certain attributes being set."
msgstr ""

#: ../../api.rst:2918
msgid ""
"Note that accessing an attribute that does not match the specified action"
" will lead to an attribute error."
msgstr ""

#: ../../api.rst:2921
msgid ""
"To get a list of attributes that have been set, you can iterate over "
"them. To see a list of all possible attributes that could be set based on"
" the action being done, check the documentation for "
":class:`AuditLogAction`, otherwise check the documentation below for all "
"attributes that are possible."
msgstr ""

#: ../../api.rst:2930
msgid "Returns an iterator over (attribute, value) tuple of this diff."
msgstr ""

#: ../../api.rst:2934
msgid "A name of something."
msgstr ""

#: ../../api.rst:2940
msgid "A guild's icon. See also :attr:`Guild.icon`."
msgstr ""

#: ../../api.rst:2942 ../../api.rst:2948 ../../api.rst:2954 ../../api.rst:2960
#: ../../api.rst:3274 disnake.ClientUser.default_avatar:3
#: disnake.ClientUser.display_avatar:7 disnake.Member.display_avatar:9
#: disnake.StickerPack.banner:3 disnake.SyncWebhook.avatar:6
#: disnake.User.default_avatar:3 disnake.User.display_avatar:7
#: disnake.Webhook.avatar:6 disnake.WidgetMember.default_avatar:3
#: disnake.WidgetMember.display_avatar:7 disnake.asset.Asset.replace:15
#: disnake.asset.Asset.with_format:9 disnake.asset.Asset.with_size:9
#: disnake.asset.Asset.with_static_format:12 of
msgid ":class:`Asset`"
msgstr ""

#: ../../api.rst:2946
msgid "The guild's invite splash. See also :attr:`Guild.splash`."
msgstr ""

#: ../../api.rst:2952
msgid "The guild's discovery splash. See also :attr:`Guild.discovery_splash`."
msgstr ""

#: ../../api.rst:2958
msgid "The guild's banner. See also :attr:`Guild.banner`."
msgstr ""

#: ../../api.rst:2964
msgid "The guild's owner. See also :attr:`Guild.owner`"
msgstr ""

#: ../../api.rst:2966
msgid "Union[:class:`Member`, :class:`User`]"
msgstr ""

#: ../../api.rst:2970
msgid "The guild's voice region. See also :attr:`Guild.region`."
msgstr ""

#: ../../api.rst:2972 ../../api.rst:3292 disnake.guild.Guild:48 of
msgid ":class:`VoiceRegion`"
msgstr ""

#: ../../api.rst:2976
msgid "The guild's AFK channel."
msgstr ""

#: ../../api.rst:2978 ../../api.rst:2989
msgid ""
"If this could not be found, then it falls back to a :class:`Object` with "
"the ID being set."
msgstr ""

#: ../../api.rst:2981
msgid "See :attr:`Guild.afk_channel`."
msgstr ""

#: ../../api.rst:2983
msgid "Union[:class:`VoiceChannel`, :class:`Object`]"
msgstr ""

#: ../../api.rst:2987
msgid "The guild's system channel."
msgstr ""

#: ../../api.rst:2992
msgid "See :attr:`Guild.system_channel`."
msgstr ""

#: ../../api.rst:2994 ../../api.rst:3006 ../../api.rst:3018 ../../api.rst:3045
msgid "Union[:class:`TextChannel`, :class:`Object`]"
msgstr ""

#: ../../api.rst:2999
msgid "The guild's rules channel."
msgstr ""

#: ../../api.rst:3001 ../../api.rst:3013 ../../api.rst:3042
msgid ""
"If this could not be found then it falls back to a :class:`Object` with "
"the ID being set."
msgstr ""

#: ../../api.rst:3004
msgid "See :attr:`Guild.rules_channel`."
msgstr ""

#: ../../api.rst:3011
msgid "The guild's public updates channel."
msgstr ""

#: ../../api.rst:3016
msgid "See :attr:`Guild.public_updates_channel`."
msgstr ""

#: ../../api.rst:3022
msgid "The guild's AFK timeout. See :attr:`Guild.afk_timeout`."
msgstr ""

#: ../../api.rst:3028
msgid "The guild's MFA level. See :attr:`Guild.mfa_level`."
msgstr ""

#: ../../api.rst:3034
msgid "The guild's widget has been enabled or disabled."
msgstr ""

#: ../../api.rst:3040
msgid "The widget's channel."
msgstr ""

#: ../../api.rst:3049 disnake.guild.Guild:124 of
msgid "The guild's verification level."
msgstr ""

#: ../../api.rst:3051
msgid "See also :attr:`Guild.verification_level`."
msgstr ""

#: ../../api.rst:3053 disnake.guild.Guild:126
#: disnake.invite.PartialInviteGuild:40 of
msgid ":class:`VerificationLevel`"
msgstr ""

#: ../../api.rst:3057
msgid "The guild's default notification level."
msgstr ""

#: ../../api.rst:3059
msgid "See also :attr:`Guild.default_notifications`."
msgstr ""

#: ../../api.rst:3061 disnake.guild.Guild:138 of
msgid ":class:`NotificationLevel`"
msgstr ""

#: ../../api.rst:3065
msgid "The guild's content filter."
msgstr ""

#: ../../api.rst:3067
msgid "See also :attr:`Guild.explicit_content_filter`."
msgstr ""

#: ../../api.rst:3069 disnake.guild.Guild:132 of
msgid ":class:`ContentFilter`"
msgstr ""

#: ../../api.rst:3073
msgid "The guild's default message notification setting."
msgstr ""

#: ../../api.rst:3079
msgid "The guild's vanity URL."
msgstr ""

#: ../../api.rst:3081
msgid "See also :meth:`Guild.vanity_invite` and :meth:`Guild.edit`."
msgstr ""

#: ../../api.rst:3087
msgid "The position of a :class:`Role` or :class:`abc.GuildChannel`."
msgstr ""

#: ../../api.rst:3093
msgid "The type of channel or sticker."
msgstr ""

#: ../../api.rst:3095
msgid "Union[:class:`ChannelType`, :class:`StickerType`]"
msgstr ""

#: ../../api.rst:3099
msgid "The topic of a :class:`TextChannel` or :class:`StageChannel`."
msgstr ""

#: ../../api.rst:3101
msgid "See also :attr:`TextChannel.topic` or :attr:`StageChannel.topic`."
msgstr ""

#: ../../api.rst:3107
msgid "The bitrate of a :class:`VoiceChannel`."
msgstr ""

#: ../../api.rst:3109
msgid "See also :attr:`VoiceChannel.bitrate`."
msgstr ""

#: ../../api.rst:3115
msgid ""
"A list of permission overwrite tuples that represents a target and a "
":class:`PermissionOverwrite` for said target."
msgstr ""

#: ../../api.rst:3118
msgid ""
"The first element is the object being targeted, which can either be a "
":class:`Member` or :class:`User` or :class:`Role`. If this object is not "
"found then it is a :class:`Object` with an ID being filled and a ``type``"
" attribute set to either ``'role'`` or ``'member'`` to help decide what "
"type of ID it is."
msgstr ""

#: ../../api.rst:3124
msgid "List[Tuple[target, :class:`PermissionOverwrite`]]"
msgstr ""

#: ../../api.rst:3128 disnake.stage_instance.StageInstance:45 of
msgid "The privacy level of the stage instance."
msgstr ""

#: ../../api.rst:3130 disnake.stage_instance.StageInstance:47 of
msgid ":class:`StagePrivacyLevel`"
msgstr ""

#: ../../api.rst:3134
msgid "A list of roles being added or removed from a member."
msgstr ""

#: ../../api.rst:3136
msgid ""
"If a role is not found then it is a :class:`Object` with the ID and name "
"being filled in."
msgstr ""

#: ../../api.rst:3139
msgid "List[Union[:class:`Role`, :class:`Object`]]"
msgstr ""

#: ../../api.rst:3143
msgid "The nickname of a member."
msgstr ""

#: ../../api.rst:3145
msgid "See also :attr:`Member.nick`"
msgstr ""

#: ../../api.rst:3151
msgid "Whether the member is being server deafened."
msgstr ""

#: ../../api.rst:3153
msgid "See also :attr:`VoiceState.deaf`."
msgstr ""

#: ../../api.rst:3159
msgid "Whether the member is being server muted."
msgstr ""

#: ../../api.rst:3161
msgid "See also :attr:`VoiceState.mute`."
msgstr ""

#: ../../api.rst:3167
msgid "The permissions of a role."
msgstr ""

#: ../../api.rst:3169
msgid "See also :attr:`Role.permissions`."
msgstr ""

#: ../../api.rst:3171 ../../api.rst:3260 disnake.Interaction.permissions:5
#: disnake.Member.guild_permissions:11 disnake.Role.permissions:3
#: disnake.channel.DMChannel.permissions_for:17
#: disnake.channel.GroupChannel.permissions_for:18
#: disnake.interactions.application_command.ApplicationCommandInteraction:65
#: disnake.interactions.message.MessageInteraction:65 of
msgid ":class:`Permissions`"
msgstr ""

#: ../../api.rst:3176
msgid "The colour of a role."
msgstr ""

#: ../../api.rst:3178
msgid "See also :attr:`Role.colour`"
msgstr ""

#: ../../api.rst:3180 disnake.ClientUser.color:6 disnake.ClientUser.colour:6
#: disnake.Member.color:7 disnake.Member.colour:7 disnake.Role.color:3
#: disnake.Role.colour:3 disnake.Spotify.color:5 disnake.Spotify.colour:5
#: disnake.User.color:6 disnake.User.colour:6 disnake.WidgetMember.color:6
#: disnake.WidgetMember.colour:6 of
msgid ":class:`Colour`"
msgstr ""

#: ../../api.rst:3184
msgid "Whether the role is being hoisted or not."
msgstr ""

#: ../../api.rst:3186
msgid "See also :attr:`Role.hoist`"
msgstr ""

#: ../../api.rst:3192
msgid "Whether the role is mentionable or not."
msgstr ""

#: ../../api.rst:3194
msgid "See also :attr:`Role.mentionable`"
msgstr ""

#: ../../api.rst:3200
msgid "The invite's code."
msgstr ""

#: ../../api.rst:3202
msgid "See also :attr:`Invite.code`"
msgstr ""

#: ../../api.rst:3208
msgid "A guild channel."
msgstr ""

#: ../../api.rst:3210
msgid ""
"If the channel is not found then it is a :class:`Object` with the ID "
"being set. In some cases the channel name is also set."
msgstr ""

#: ../../api.rst:3213
msgid "Union[:class:`abc.GuildChannel`, :class:`Object`]"
msgstr ""

#: ../../api.rst:3217 disnake.invite.Invite:101 of
msgid "The user who created the invite."
msgstr ""

#: ../../api.rst:3219
msgid "See also :attr:`Invite.inviter`."
msgstr ""

#: ../../api.rst:3221 disnake.channel.DMChannel:27
#: disnake.channel.GroupChannel:43 disnake.emoji.Emoji:76
#: disnake.integrations.IntegrationApplication:39 disnake.invite.Invite:103
#: disnake.invite.Invite:147 disnake.sticker.GuildSticker:60 of
msgid "Optional[:class:`User`]"
msgstr ""

#: ../../api.rst:3225
msgid "The invite's max uses."
msgstr ""

#: ../../api.rst:3227
msgid "See also :attr:`Invite.max_uses`."
msgstr ""

#: ../../api.rst:3233
msgid "The invite's current uses."
msgstr ""

#: ../../api.rst:3235
msgid "See also :attr:`Invite.uses`."
msgstr ""

#: ../../api.rst:3241
msgid "The invite's max age in seconds."
msgstr ""

#: ../../api.rst:3243
msgid "See also :attr:`Invite.max_age`."
msgstr ""

#: ../../api.rst:3249
msgid "If the invite is a temporary invite."
msgstr ""

#: ../../api.rst:3251
msgid "See also :attr:`Invite.temporary`."
msgstr ""

#: ../../api.rst:3258
msgid "The permissions being allowed or denied."
msgstr ""

#: ../../api.rst:3264
msgid "The ID of the object being changed."
msgstr ""

#: ../../api.rst:3270
msgid "The avatar of a member."
msgstr ""

#: ../../api.rst:3272
msgid "See also :attr:`User.avatar`."
msgstr ""

#: ../../api.rst:3278
msgid ""
"The number of seconds members have to wait before sending another message"
" in the channel."
msgstr ""

#: ../../api.rst:3281
msgid "See also :attr:`TextChannel.slowmode_delay`."
msgstr ""

#: ../../api.rst:3287
msgid ""
"The region for the voice channel’s voice communication. A value of "
"``None`` indicates automatic voice region detection."
msgstr ""

#: ../../api.rst:3290
msgid "See also :attr:`VoiceChannel.rtc_region`."
msgstr ""

#: ../../api.rst:3296 disnake.channel.VoiceChannel:75
#: disnake.channel.VoiceChannel.edit:38
#: disnake.guild.Guild.create_voice_channel:27 of
msgid "The camera video quality for the voice channel's participants."
msgstr ""

#: ../../api.rst:3298
msgid "See also :attr:`VoiceChannel.video_quality_mode`."
msgstr ""

#: ../../api.rst:3300 disnake.channel.StageChannel:85
#: disnake.channel.VoiceChannel:77 of
msgid ":class:`VideoQualityMode`"
msgstr ""

#: ../../api.rst:3304
msgid "The format type of a sticker being changed."
msgstr ""

#: ../../api.rst:3306
msgid "See also :attr:`GuildSticker.format`"
msgstr ""

#: ../../api.rst:3308 disnake.sticker.GuildSticker:41
#: disnake.sticker.StandardSticker:47 disnake.sticker.Sticker:47
#: disnake.sticker.StickerItem:35 of
msgid ":class:`StickerFormatType`"
msgstr ""

#: ../../api.rst:3312
msgid "The name of the emoji that represents a sticker being changed."
msgstr ""

#: ../../api.rst:3314
msgid "See also :attr:`GuildSticker.emoji`"
msgstr ""

#: ../../api.rst:3320
msgid "The description of a sticker being changed."
msgstr ""

#: ../../api.rst:3322
msgid "See also :attr:`GuildSticker.description`"
msgstr ""

#: ../../api.rst:3328
msgid "The availability of a sticker being changed."
msgstr ""

#: ../../api.rst:3330
msgid "See also :attr:`GuildSticker.available`"
msgstr ""

#: ../../api.rst:3336
msgid "The thread is now archived."
msgstr ""

#: ../../api.rst:3342
msgid "The thread is being locked or unlocked."
msgstr ""

#: ../../api.rst:3348
msgid "The thread's auto archive duration being changed."
msgstr ""

#: ../../api.rst:3350
msgid "See also :attr:`Thread.auto_archive_duration`"
msgstr ""

#: ../../api.rst:3356
msgid "The default auto archive duration for newly created threads being changed."
msgstr ""

#: ../../api.rst:3364
msgid "Webhook Support"
msgstr ""

#: ../../api.rst:3366
msgid ""
"disnake offers support for creating, editing, and executing webhooks "
"through the :class:`Webhook` class."
msgstr ""

#: ../../api.rst:3369
msgid "Webhook"
msgstr ""

#: disnake.webhook.async_.Webhook:1 of
msgid "Represents an asynchronous Discord webhook."
msgstr ""

#: disnake.webhook.async_.Webhook:3 of
msgid ""
"Webhooks are a form to send messages to channels in Discord without a bot"
" user or authentication."
msgstr ""

#: disnake.webhook.async_.Webhook:6 of
msgid ""
"There are two main ways to use Webhooks. The first is through the ones "
"received by the library such as :meth:`.Guild.webhooks` and "
":meth:`.TextChannel.webhooks`. The ones received by the library will "
"automatically be bound using the library's internal HTTP session."
msgstr ""

#: disnake.webhook.async_.Webhook:11 of
msgid ""
"The second form involves creating a webhook object manually using the "
":meth:`~.Webhook.from_url` or :meth:`~.Webhook.partial` classmethods."
msgstr ""

#: disnake.webhook.async_.Webhook:14 of
msgid ""
"For example, creating a webhook from a URL and using :doc:`aiohttp "
"<aio:index>`:"
msgstr ""

#: disnake.webhook.async_.Webhook:26 of
msgid "For a synchronous counterpart, see :class:`SyncWebhook`."
msgstr ""

#: disnake.webhook.async_.Webhook:32 disnake.webhook.sync.SyncWebhook:9 of
msgid "Checks if two webhooks are equal."
msgstr ""

#: disnake.webhook.async_.Webhook:36 disnake.webhook.sync.SyncWebhook:13 of
msgid "Checks if two webhooks are not equal."
msgstr ""

#: disnake.webhook.async_.Webhook:40 disnake.webhook.sync.SyncWebhook:17 of
msgid "Returns the webhooks's hash."
msgstr ""

#: disnake.webhook.async_.Webhook:42 disnake.webhook.sync.SyncWebhook:19 of
msgid "Webhooks are now comparable and hashable."
msgstr ""

#: disnake.webhook.async_.Webhook:47 disnake.webhook.sync.SyncWebhook:24 of
msgid "The webhook's ID"
msgstr ""

#: disnake.webhook.async_.Webhook:53 disnake.webhook.sync.SyncWebhook:30 of
msgid "The type of the webhook."
msgstr ""

#: disnake.webhook.async_.Webhook:57 disnake.webhook.sync.SyncWebhook:34 of
msgid ":class:`WebhookType`"
msgstr ""

#: disnake.webhook.async_.Webhook:61 disnake.webhook.sync.SyncWebhook:38 of
msgid ""
"The authentication token of the webhook. If this is ``None`` then the "
"webhook cannot be used to make requests."
msgstr ""

#: disnake.webhook.async_.Webhook:68 disnake.webhook.sync.SyncWebhook:45 of
msgid "The guild ID this webhook is for."
msgstr ""

#: disnake.webhook.async_.Webhook:74 disnake.webhook.sync.SyncWebhook:51 of
msgid "The channel ID this webhook is for."
msgstr ""

#: disnake.webhook.async_.Webhook:80 disnake.webhook.sync.SyncWebhook:57 of
msgid ""
"The user this webhook was created by. If the webhook was received without"
" authentication then this will be ``None``."
msgstr ""

#: disnake.webhook.async_.Webhook:83 disnake.webhook.sync.SyncWebhook:60 of
msgid "Optional[:class:`abc.User`]"
msgstr ""

#: disnake.webhook.async_.Webhook:87 disnake.webhook.sync.SyncWebhook:64 of
msgid "The default name of the webhook."
msgstr ""

#: disnake.webhook.async_.Webhook:93 disnake.webhook.sync.SyncWebhook:70 of
msgid ""
"The guild of the channel that this webhook is following. Only given if "
":attr:`type` is :attr:`WebhookType.channel_follower`."
msgstr ""

#: disnake.webhook.async_.Webhook:98 disnake.webhook.sync.SyncWebhook:75 of
msgid "Optional[:class:`PartialWebhookGuild`]"
msgstr ""

#: disnake.webhook.async_.Webhook:102 disnake.webhook.sync.SyncWebhook:79 of
msgid ""
"The channel that this webhook is following. Only given if :attr:`type` is"
" :attr:`WebhookType.channel_follower`."
msgstr ""

#: disnake.webhook.async_.Webhook:107 disnake.webhook.sync.SyncWebhook:84 of
msgid "Optional[:class:`PartialWebhookChannel`]"
msgstr ""

#: disnake.SyncWebhook.url:1 disnake.Webhook.url:1 of
msgid "Returns the webhook's url."
msgstr ""

#: disnake.webhook.async_.Webhook.partial:1
#: disnake.webhook.sync.SyncWebhook.partial:1 of
msgid "Creates a partial :class:`Webhook`."
msgstr ""

#: disnake.webhook.async_.Webhook.partial:3
#: disnake.webhook.sync.SyncWebhook.partial:3 of
msgid "The ID of the webhook."
msgstr ""

#: disnake.webhook.async_.Webhook.partial:5
#: disnake.webhook.sync.SyncWebhook.partial:5 of
msgid "The authentication token of the webhook."
msgstr ""

#: disnake.webhook.async_.Webhook.from_url:5
#: disnake.webhook.async_.Webhook.partial:7 of
msgid ""
"The session to use to send requests with. Note that the library does not "
"manage the session and will not close it.  .. versionadded:: 2.0"
msgstr ""

#: disnake.webhook.async_.Webhook.from_url:5
#: disnake.webhook.async_.Webhook.partial:7 of
msgid ""
"The session to use to send requests with. Note that the library does not "
"manage the session and will not close it."
msgstr ""

#: disnake.webhook.async_.Webhook.from_url:11
#: disnake.webhook.async_.Webhook.partial:13 of
msgid ""
"The bot authentication token for authenticated requests involving the "
"webhook.  .. versionadded:: 2.0"
msgstr ""

#: disnake.webhook.async_.Webhook.from_url:11
#: disnake.webhook.async_.Webhook.partial:13
#: disnake.webhook.sync.SyncWebhook.from_url:10
#: disnake.webhook.sync.SyncWebhook.partial:12 of
msgid ""
"The bot authentication token for authenticated requests involving the "
"webhook."
msgstr ""

#: disnake.webhook.async_.Webhook.from_url:19
#: disnake.webhook.async_.Webhook.partial:19
#: disnake.webhook.sync.SyncWebhook.from_url:16
#: disnake.webhook.sync.SyncWebhook.partial:16 of
msgid ""
"A partial :class:`Webhook`. A partial webhook is just a webhook object "
"with an ID and a token."
msgstr ""

#: ../../docstring disnake.Interaction.followup:3
#: disnake.channel.TextChannel.create_webhook:22
#: disnake.channel.TextChannel.follow:23
#: disnake.interactions.application_command.ApplicationCommandInteraction:77
#: disnake.interactions.message.MessageInteraction:77
#: disnake.webhook.async_.Webhook.fetch:24
#: disnake.webhook.async_.Webhook.from_url:21
#: disnake.webhook.async_.Webhook.partial:21
#: disnake.webhook.sync.SyncWebhook.from_url:18
#: disnake.webhook.sync.SyncWebhook.partial:18 of
msgid ":class:`Webhook`"
msgstr ""

#: disnake.webhook.async_.Webhook.from_url:1
#: disnake.webhook.sync.SyncWebhook.from_url:1 of
msgid "Creates a partial :class:`Webhook` from a webhook URL."
msgstr ""

#: disnake.webhook.async_.Webhook.from_url:3
#: disnake.webhook.sync.SyncWebhook.from_url:3 of
msgid "The URL of the webhook."
msgstr ""

#: disnake.webhook.async_.Webhook.from_url:17
#: disnake.webhook.sync.SyncWebhook.from_url:14 of
msgid "The URL is invalid."
msgstr ""

#: disnake.webhook.async_.Webhook.fetch:3
#: disnake.webhook.sync.SyncWebhook.fetch:1 of
msgid "Fetches the current webhook."
msgstr ""

#: disnake.webhook.async_.Webhook.fetch:5
#: disnake.webhook.sync.SyncWebhook.fetch:3 of
msgid "This could be used to get a full webhook from a partial webhook."
msgstr ""

#: disnake.webhook.async_.Webhook.fetch:11
#: disnake.webhook.sync.SyncWebhook.fetch:7 of
msgid ""
"When fetching with an unauthenticated webhook, i.e. "
":meth:`is_authenticated` returns ``False``, then the returned webhook "
"does not contain any user information."
msgstr ""

#: disnake.webhook.async_.Webhook.delete:9
#: disnake.webhook.async_.Webhook.edit:17
#: disnake.webhook.async_.Webhook.fetch:15
#: disnake.webhook.sync.SyncWebhook.delete:7
#: disnake.webhook.sync.SyncWebhook.edit:13
#: disnake.webhook.sync.SyncWebhook.fetch:11 of
msgid ""
"Whether to use the bot token over the webhook token if available. "
"Defaults to ``True``."
msgstr ""

#: disnake.webhook.async_.Webhook.fetch:19
#: disnake.webhook.sync.SyncWebhook.fetch:15 of
msgid "Could not fetch the webhook"
msgstr ""

#: disnake.webhook.async_.Webhook.fetch:20
#: disnake.webhook.sync.SyncWebhook.fetch:16 of
msgid "Could not find the webhook by this ID"
msgstr ""

#: disnake.webhook.async_.Webhook.delete:18
#: disnake.webhook.async_.Webhook.fetch:21
#: disnake.webhook.sync.SyncWebhook.delete:14
#: disnake.webhook.sync.SyncWebhook.fetch:17 of
msgid "This webhook does not have a token associated with it."
msgstr ""

#: disnake.webhook.async_.Webhook.fetch:23
#: disnake.webhook.sync.SyncWebhook.fetch:19 of
msgid "The fetched webhook."
msgstr ""

#: disnake.webhook.async_.Webhook.delete:3
#: disnake.webhook.sync.SyncWebhook.delete:1 of
msgid "Deletes this Webhook."
msgstr ""

#: disnake.webhook.async_.Webhook.delete:5
#: disnake.webhook.sync.SyncWebhook.delete:3 of
msgid ""
"The reason for deleting this webhook. Shows up on the audit log.  .. "
"versionadded:: 1.4"
msgstr ""

#: disnake.webhook.async_.Webhook.delete:5
#: disnake.webhook.sync.SyncWebhook.delete:3 of
msgid "The reason for deleting this webhook. Shows up on the audit log."
msgstr ""

#: disnake.webhook.async_.Webhook.delete:9
#: disnake.webhook.async_.Webhook.edit:17 of
msgid ""
"Whether to use the bot token over the webhook token if available. "
"Defaults to ``True``.  .. versionadded:: 2.0"
msgstr ""

#: disnake.webhook.async_.Webhook.delete:15
#: disnake.webhook.sync.SyncWebhook.delete:11 of
msgid "Deleting the webhook failed."
msgstr ""

#: disnake.webhook.async_.Webhook.delete:16
#: disnake.webhook.async_.Webhook.edit:24
#: disnake.webhook.sync.SyncWebhook.delete:12
#: disnake.webhook.sync.SyncWebhook.edit:18 of
msgid "This webhook does not exist."
msgstr ""

#: disnake.webhook.async_.Webhook.delete:17
#: disnake.webhook.sync.SyncWebhook.delete:13 of
msgid "You do not have permissions to delete this webhook."
msgstr ""

#: disnake.webhook.async_.Webhook.edit:3
#: disnake.webhook.sync.SyncWebhook.edit:1 of
msgid "Edits this Webhook."
msgstr ""

#: disnake.webhook.async_.Webhook.edit:5
#: disnake.webhook.sync.SyncWebhook.edit:3 of
msgid "The webhook's new default name."
msgstr ""

#: disnake.webhook.async_.Webhook.edit:7
#: disnake.webhook.sync.SyncWebhook.edit:5 of
msgid ""
"A :term:`py:bytes-like object` representing the webhook's new default "
"avatar."
msgstr ""

#: disnake.webhook.async_.Webhook.edit:9 of
msgid ""
"The webhook's new channel. This requires an authenticated webhook.  .. "
"versionadded:: 2.0"
msgstr ""

#: disnake.webhook.async_.Webhook.edit:9
#: disnake.webhook.sync.SyncWebhook.edit:7 of
msgid "The webhook's new channel. This requires an authenticated webhook."
msgstr ""

#: disnake.webhook.async_.Webhook.edit:13
#: disnake.webhook.sync.SyncWebhook.edit:9 of
msgid ""
"The reason for editing this webhook. Shows up on the audit log.  .. "
"versionadded:: 1.4"
msgstr ""

#: disnake.webhook.async_.Webhook.edit:13
#: disnake.webhook.sync.SyncWebhook.edit:9 of
msgid "The reason for editing this webhook. Shows up on the audit log."
msgstr ""

#: disnake.webhook.async_.Webhook.edit:23
#: disnake.webhook.sync.SyncWebhook.edit:17 of
msgid "Editing the webhook failed."
msgstr ""

#: disnake.webhook.async_.Webhook.edit:25
#: disnake.webhook.sync.SyncWebhook.edit:19 of
msgid ""
"This webhook does not have a token associated with it     or it tried "
"editing a channel without authentication."
msgstr ""

#: disnake.SyncWebhook.avatar:1 disnake.Webhook.avatar:1 of
msgid "Returns an :class:`Asset` for the avatar the webhook has."
msgstr ""

#: disnake.SyncWebhook.avatar:3 disnake.Webhook.avatar:3 of
msgid ""
"If the webhook does not have a traditional avatar, an asset for the "
"default avatar is returned instead."
msgstr ""

#: disnake.SyncWebhook.channel:1 disnake.Webhook.channel:1 of
msgid "The text channel this webhook belongs to."
msgstr ""

#: disnake.SyncWebhook.channel:3 disnake.SyncWebhook.guild:3
#: disnake.Webhook.channel:3 disnake.Webhook.guild:3 of
msgid "If this is a partial webhook, then this will always return ``None``."
msgstr ""

#: disnake.Guild.public_updates_channel:9 disnake.Guild.rules_channel:8
#: disnake.Guild.system_channel:5 disnake.SyncWebhook.channel:5
#: disnake.Thread.parent:3 disnake.Webhook.channel:5 of
msgid "Optional[:class:`TextChannel`]"
msgstr ""

#: disnake.SyncWebhook.created_at:1 disnake.Webhook.created_at:1 of
msgid "Returns the webhook's creation time in UTC."
msgstr ""

#: disnake.SyncWebhook.guild:1 disnake.Webhook.guild:1 of
msgid "The guild this webhook belongs to."
msgstr ""

#: disnake.webhook.async_.BaseWebhook.is_authenticated:1 of
msgid ":class:`bool`: Whether the webhook is authenticated with a bot token."
msgstr ""

#: disnake.webhook.async_.BaseWebhook.is_partial:1 of
msgid ":class:`bool`: Whether the webhook is a \"partial\" webhook."
msgstr ""

#: disnake.webhook.async_.Webhook.send:3
#: disnake.webhook.sync.SyncWebhook.send:1 of
msgid "Sends a message using the webhook."
msgstr ""

#: disnake.webhook.async_.Webhook.send:5
#: disnake.webhook.sync.SyncWebhook.send:3 of
msgid ""
"The content must be a type that can convert to a string through "
"``str(content)``."
msgstr ""

#: disnake.webhook.async_.Webhook.send:7
#: disnake.webhook.sync.SyncWebhook.send:5 of
msgid ""
"To upload a single file, the ``file`` parameter should be used with a "
"single :class:`File` object."
msgstr ""

#: disnake.webhook.async_.Webhook.send:10
#: disnake.webhook.sync.SyncWebhook.send:8 of
msgid ""
"If the ``embed`` parameter is provided, it must be of type :class:`Embed`"
" and it must be a rich embed type. You cannot mix the ``embed`` parameter"
" with the ``embeds`` parameter, which must be a :class:`list` of "
":class:`Embed` objects to send."
msgstr ""

#: disnake.abc.Messageable.send:19 disnake.interactions.base.Interaction.send:8
#: disnake.interactions.base.InteractionResponse.send_message:5
#: disnake.webhook.async_.Webhook.send:14
#: disnake.webhook.sync.SyncWebhook.send:12 of
msgid "The content of the message to send."
msgstr ""

#: disnake.webhook.async_.Webhook.send:16
#: disnake.webhook.sync.SyncWebhook.send:14 of
msgid ""
"The username to send with this message. If no username is provided then "
"the default username for the webhook is used."
msgstr ""

#: disnake.webhook.async_.Webhook.send:19
#: disnake.webhook.sync.SyncWebhook.send:17 of
msgid ""
"The avatar URL to send with this message. If no avatar URL is provided "
"then the default avatar for the webhook is used. If this is not a string "
"then it is explicitly cast using ``str``."
msgstr ""

#: disnake.abc.Messageable.send:21
#: disnake.interactions.base.Interaction.send:28
#: disnake.interactions.base.InteractionResponse.send_message:22
#: disnake.webhook.async_.Webhook.send:23
#: disnake.webhook.sync.SyncWebhook.send:21 of
msgid "Indicates if the message should be sent using text-to-speech."
msgstr ""

#: disnake.webhook.async_.Webhook.send:25 of
msgid ""
"Indicates if the message should only be visible to the user. This is only"
" available to :attr:`WebhookType.application` webhooks. If a view is sent"
" with an ephemeral message and it has no timeout set then the timeout is "
"set to 15 minutes.  .. versionadded:: 2.0"
msgstr ""

#: disnake.webhook.async_.Webhook.send:25 of
msgid ""
"Indicates if the message should only be visible to the user. This is only"
" available to :attr:`WebhookType.application` webhooks. If a view is sent"
" with an ephemeral message and it has no timeout set then the timeout is "
"set to 15 minutes."
msgstr ""

#: disnake.abc.Messageable.send:31
#: disnake.interactions.base.Interaction.send:16
#: disnake.interactions.base.InteractionResponse.send_message:13
#: disnake.webhook.async_.Webhook.send:32
#: disnake.webhook.sync.SyncWebhook.send:23 of
msgid "The file to upload. This cannot be mixed with ``files`` parameter."
msgstr ""

#: disnake.abc.Messageable.send:33
#: disnake.interactions.base.Interaction.send:18
#: disnake.interactions.base.InteractionResponse.send_message:15
#: disnake.webhook.async_.Webhook.send:34
#: disnake.webhook.sync.SyncWebhook.send:25 of
msgid ""
"A list of files to upload. Must be a maximum of 10. This cannot be mixed "
"with the ``file`` parameter."
msgstr ""

#: disnake.abc.Messageable.send:23
#: disnake.interactions.base.Interaction.send:10
#: disnake.interactions.base.InteractionResponse.send_message:7
#: disnake.webhook.async_.Webhook.send:37
#: disnake.webhook.sync.SyncWebhook.send:28 of
msgid ""
"The rich embed for the content to send. This cannot be mixed with "
"``embeds`` parameter."
msgstr ""

#: disnake.abc.Messageable.send:26
#: disnake.interactions.base.Interaction.send:13
#: disnake.interactions.base.InteractionResponse.send_message:10
#: disnake.webhook.async_.Webhook.send:40
#: disnake.webhook.sync.SyncWebhook.send:31 of
msgid ""
"A list of embeds to send with the content. Must be a maximum of 10. This "
"cannot be mixed with the ``embed`` parameter."
msgstr ""

#: disnake.webhook.async_.Webhook.send:43 of
msgid ""
"Controls the mentions being processed in this message. If this is passed,"
" then the object is merged with :attr:`Client.allowed_mentions "
"<disnake.Client.allowed_mentions>`, if applicable. The merging behaviour "
"only overrides attributes that have been explicitly passed to the object,"
" otherwise it uses the attributes set in :attr:`Client.allowed_mentions "
"<disnake.Client.allowed_mentions>`. If no object is passed at all then "
"the defaults given by :attr:`Client.allowed_mentions "
"<disnake.Client.allowed_mentions>` are used instead.  .. versionadded:: "
"1.4"
msgstr ""

#: disnake.webhook.async_.Webhook.send:43 of
msgid ""
"Controls the mentions being processed in this message. If this is passed,"
" then the object is merged with :attr:`Client.allowed_mentions "
"<disnake.Client.allowed_mentions>`, if applicable. The merging behaviour "
"only overrides attributes that have been explicitly passed to the object,"
" otherwise it uses the attributes set in :attr:`Client.allowed_mentions "
"<disnake.Client.allowed_mentions>`. If no object is passed at all then "
"the defaults given by :attr:`Client.allowed_mentions "
"<disnake.Client.allowed_mentions>` are used instead."
msgstr ""

#: disnake.webhook.async_.Webhook.send:53 of
msgid ""
"The view to send with the message. You can only send a view if this "
"webhook is not partial and has state attached. A webhook has state "
"attached if the webhook is managed by the library.  .. versionadded:: 2.0"
msgstr ""

#: disnake.webhook.async_.Webhook.send:53 of
msgid ""
"The view to send with the message. You can only send a view if this "
"webhook is not partial and has state attached. A webhook has state "
"attached if the webhook is managed by the library."
msgstr ""

#: disnake.webhook.async_.Webhook.send:60 of
msgid "The thread to send this webhook to.  .. versionadded:: 2.0"
msgstr ""

#: disnake.webhook.async_.Webhook.send:60 of
msgid "The thread to send this webhook to."
msgstr ""

#: disnake.webhook.async_.Webhook.send:64 of
msgid ""
"Whether the server should wait before sending a response. This "
"essentially means that the return type of this function changes from "
"``None`` to a :class:`WebhookMessage` if set to ``True``. If the type of "
"webhook is :attr:`WebhookType.application` then this is always set to "
"``True``."
msgstr ""

#: disnake.webhook.async_.Webhook.send:69 of
msgid ""
"If provided, the number of seconds to wait in the background before "
"deleting the message we just sent. If the deletion fails, then it is "
"silently ignored.  .. versionadded:: 2.1"
msgstr ""

#: disnake.abc.Messageable.send:43
#: disnake.interactions.base.Interaction.send:36
#: disnake.interactions.base.InteractionResponse.send_message:28
#: disnake.webhook.async_.Webhook.send:69 of
msgid ""
"If provided, the number of seconds to wait in the background before "
"deleting the message we just sent. If the deletion fails, then it is "
"silently ignored."
msgstr ""

#: disnake.abc.Messageable.send:70
#: disnake.interactions.base.Interaction.send:41
#: disnake.interactions.base.InteractionResponse.send_message:33
#: disnake.message.Message.reply:8 disnake.webhook.async_.Webhook.send:76
#: disnake.webhook.sync.SyncWebhook.send:47 of
msgid "Sending the message failed."
msgstr ""

#: disnake.webhook.async_.Webhook.send:77
#: disnake.webhook.sync.SyncWebhook.send:48 of
msgid "This webhook was not found."
msgstr ""

#: disnake.webhook.async_.Webhook.send:78
#: disnake.webhook.sync.SyncWebhook.send:49 of
msgid "The authorization token for the webhook is incorrect."
msgstr ""

#: disnake.message.Message.edit:62 disnake.message.PartialMessage.edit:67
#: disnake.webhook.async_.Webhook.send:79 of
msgid "You specified both ``embed`` and ``embeds`` or ``file`` and ``files``."
msgstr ""

#: disnake.interactions.base.Interaction.edit_original_message:42
#: disnake.interactions.base.Interaction.send:43
#: disnake.interactions.base.InteractionMessage.edit:36
#: disnake.interactions.base.InteractionResponse.send_message:35
#: disnake.webhook.async_.Webhook.send:80 of
msgid "The length of ``embeds`` was invalid."
msgstr ""

#: disnake.webhook.async_.Webhook.send:81 of
msgid ""
"There was no token associated with this webhook or ``ephemeral``     was "
"passed with the improper webhook type or there was no state     attached "
"with this webhook when giving it a view."
msgstr ""

#: disnake.webhook.async_.Webhook.send:83
#: disnake.webhook.sync.SyncWebhook.send:54 of
msgid ""
"If ``wait`` is ``True`` then the message that was sent, otherwise "
"``None``."
msgstr ""

#: disnake.webhook.async_.Webhook.send:84 of
msgid "Optional[:class:`WebhookMessage`]"
msgstr ""

#: disnake.webhook.async_.Webhook.fetch_message:3 of
msgid "Retrieves a single :class:`~disnake.WebhookMessage` owned by this webhook."
msgstr ""

#: disnake.abc.Messageable.fetch_message:5
#: disnake.webhook.async_.Webhook.fetch_message:7
#: disnake.webhook.sync.SyncWebhook.fetch_message:5 of
msgid "The message ID to look for."
msgstr ""

#: disnake.abc.Messageable.fetch_message:8
#: disnake.webhook.async_.Webhook.fetch_message:10
#: disnake.webhook.sync.SyncWebhook.fetch_message:8 of
msgid "The specified message was not found."
msgstr ""

#: disnake.abc.Messageable.fetch_message:9
#: disnake.message.PartialMessage.fetch:6
#: disnake.webhook.async_.Webhook.fetch_message:11
#: disnake.webhook.sync.SyncWebhook.fetch_message:9 of
msgid "You do not have the permissions required to get a message."
msgstr ""

#: disnake.abc.Messageable.fetch_message:10
#: disnake.message.PartialMessage.fetch:7
#: disnake.webhook.async_.Webhook.fetch_message:12
#: disnake.webhook.sync.SyncWebhook.fetch_message:10 of
msgid "Retrieving the message failed."
msgstr ""

#: disnake.webhook.async_.Webhook.fetch_message:13
#: disnake.webhook.async_.WebhookMessage.edit:48
#: disnake.webhook.sync.SyncWebhook.edit_message:39
#: disnake.webhook.sync.SyncWebhook.fetch_message:11
#: disnake.webhook.sync.SyncWebhook.send:52
#: disnake.webhook.sync.SyncWebhookMessage.edit:32 of
msgid "There was no token associated with this webhook."
msgstr ""

#: disnake.abc.Messageable.fetch_message:12
#: disnake.webhook.async_.Webhook.fetch_message:15
#: disnake.webhook.sync.SyncWebhook.fetch_message:13 of
msgid "The message asked for."
msgstr ""

#: disnake.webhook.async_.Webhook.fetch_message:16 of
msgid ":class:`~disnake.WebhookMessage`"
msgstr ""

#: disnake.webhook.async_.Webhook.edit_message:3
#: disnake.webhook.sync.SyncWebhook.edit_message:1 of
msgid "Edits a message owned by this webhook."
msgstr ""

#: disnake.webhook.async_.Webhook.edit_message:5
#: disnake.webhook.sync.SyncWebhook.edit_message:3 of
msgid ""
"This is a lower level interface to :meth:`WebhookMessage.edit` in case "
"you only have an ID."
msgstr ""

#: disnake.webhook.async_.Webhook.edit_message:10
#: disnake.webhook.async_.WebhookMessage.edit:7 of
msgid ""
"The edit is no longer in-place, instead the newly edited message is "
"returned."
msgstr ""

#: disnake.webhook.async_.Webhook.edit_message:13
#: disnake.webhook.sync.SyncWebhook.edit_message:8 of
msgid "The message ID to edit."
msgstr ""

#: disnake.interactions.base.Interaction.edit_original_message:11
#: disnake.interactions.base.InteractionMessage.edit:5
#: disnake.webhook.async_.Webhook.edit_message:15
#: disnake.webhook.async_.WebhookMessage.edit:10
#: disnake.webhook.sync.SyncWebhook.edit_message:10
#: disnake.webhook.sync.SyncWebhookMessage.edit:3 of
msgid "The content to edit the message with or ``None`` to clear it."
msgstr ""

#: disnake.interactions.base.Interaction.edit_original_message:13
#: disnake.interactions.base.InteractionMessage.edit:7
#: disnake.interactions.base.InteractionResponse.edit_message:15
#: disnake.message.Message.edit:13 disnake.message.PartialMessage.edit:13
#: disnake.webhook.async_.Webhook.edit_message:17
#: disnake.webhook.async_.WebhookMessage.edit:12
#: disnake.webhook.sync.SyncWebhook.edit_message:12
#: disnake.webhook.sync.SyncWebhookMessage.edit:5 of
msgid ""
"The new embed to replace the original with. This cannot be mixed with the"
" ``embeds`` parameter. Could be ``None`` to remove the embed."
msgstr ""

#: disnake.interactions.base.Interaction.edit_original_message:17
#: disnake.interactions.base.InteractionMessage.edit:11
#: disnake.interactions.base.InteractionResponse.edit_message:19
#: disnake.message.Message.edit:17 disnake.message.PartialMessage.edit:17
#: disnake.webhook.async_.Webhook.edit_message:21
#: disnake.webhook.async_.WebhookMessage.edit:16
#: disnake.webhook.sync.SyncWebhook.edit_message:16
#: disnake.webhook.sync.SyncWebhookMessage.edit:9 of
msgid ""
"The new embeds to replace the original with. Must be a maximum of 10. "
"This cannot be mixed with the ``embed`` parameter. To remove all embeds "
"``[]`` should be passed."
msgstr ""

#: disnake.webhook.async_.Webhook.edit_message:25
#: disnake.webhook.async_.WebhookMessage.edit:20 of
msgid ""
"The file to upload. This cannot be mixed with ``files`` parameter. Files "
"will be appended to the message.  .. versionadded:: 2.0"
msgstr ""

#: disnake.interactions.base.Interaction.edit_original_message:21
#: disnake.interactions.base.InteractionMessage.edit:15
#: disnake.interactions.base.InteractionResponse.edit_message:23
#: disnake.webhook.async_.Webhook.edit_message:25
#: disnake.webhook.async_.WebhookMessage.edit:20
#: disnake.webhook.sync.SyncWebhook.edit_message:20
#: disnake.webhook.sync.SyncWebhookMessage.edit:13 of
msgid ""
"The file to upload. This cannot be mixed with ``files`` parameter. Files "
"will be appended to the message."
msgstr ""

#: disnake.webhook.async_.Webhook.edit_message:30 of
msgid ""
"A list of files to send with the content. This cannot be mixed with the "
"``file`` parameter. Files will be appended to the message.  .. "
"versionadded:: 2.0"
msgstr ""

#: disnake.webhook.async_.Webhook.edit_message:30 of
msgid ""
"A list of files to send with the content. This cannot be mixed with the "
"``file`` parameter. Files will be appended to the message."
msgstr ""

#: disnake.interactions.base.Interaction.edit_original_message:27
#: disnake.interactions.base.InteractionMessage.edit:21
#: disnake.message.PartialMessage.edit:35
#: disnake.webhook.async_.Webhook.edit_message:36
#: disnake.webhook.async_.WebhookMessage.edit:30
#: disnake.webhook.sync.SyncWebhook.edit_message:26
#: disnake.webhook.sync.SyncWebhookMessage.edit:19 of
msgid ""
"A list of attachments to keep in the message. If ``[]`` is passed then "
"all existing attachments are removed.  .. versionadded:: 2.1"
msgstr ""

#: disnake.interactions.base.Interaction.edit_original_message:27
#: disnake.interactions.base.InteractionMessage.edit:21
#: disnake.message.Message.edit:35 disnake.message.PartialMessage.edit:35
#: disnake.webhook.async_.Webhook.edit_message:36
#: disnake.webhook.async_.WebhookMessage.edit:30
#: disnake.webhook.sync.SyncWebhook.edit_message:26
#: disnake.webhook.sync.SyncWebhookMessage.edit:19 of
msgid ""
"A list of attachments to keep in the message. If ``[]`` is passed then "
"all existing attachments are removed."
msgstr ""

#: disnake.webhook.async_.Webhook.edit_message:41 of
msgid ""
"The updated view to update this message with. If ``None`` is passed then "
"the view is removed. The webhook must have state attached, similar to "
":meth:`send`.  .. versionadded:: 2.0"
msgstr ""

#: disnake.webhook.async_.Webhook.edit_message:41 of
msgid ""
"The updated view to update this message with. If ``None`` is passed then "
"the view is removed. The webhook must have state attached, similar to "
":meth:`send`."
msgstr ""

#: disnake.interactions.base.Interaction.edit_original_message:35
#: disnake.interactions.base.InteractionMessage.edit:29
#: disnake.webhook.async_.Webhook.edit_message:47
#: disnake.webhook.async_.WebhookMessage.edit:40
#: disnake.webhook.sync.SyncWebhook.edit_message:31
#: disnake.webhook.sync.SyncWebhookMessage.edit:24 of
msgid ""
"Controls the mentions being processed in this message. See "
":meth:`.abc.Messageable.send` for more information."
msgstr ""

#: disnake.interactions.base.Interaction.edit_original_message:39
#: disnake.interactions.base.InteractionMessage.edit:33
#: disnake.interactions.base.InteractionResponse.edit_message:39
#: disnake.message.Message.edit:60 disnake.message.PartialMessage.edit:65
#: disnake.webhook.async_.Webhook.edit_message:51
#: disnake.webhook.async_.WebhookMessage.edit:44
#: disnake.webhook.sync.SyncWebhook.edit_message:35
#: disnake.webhook.sync.SyncWebhookMessage.edit:28 of
msgid "Editing the message failed."
msgstr ""

#: disnake.interactions.base.Interaction.edit_original_message:40
#: disnake.interactions.base.InteractionMessage.edit:34
#: disnake.webhook.async_.Webhook.edit_message:52
#: disnake.webhook.async_.WebhookMessage.edit:45
#: disnake.webhook.sync.SyncWebhook.edit_message:36
#: disnake.webhook.sync.SyncWebhookMessage.edit:29 of
msgid "Edited a message that is not yours."
msgstr ""

#: disnake.interactions.base.Interaction.edit_original_message:41
#: disnake.interactions.base.InteractionMessage.edit:35
#: disnake.webhook.async_.Webhook.edit_message:53
#: disnake.webhook.async_.WebhookMessage.edit:46
#: disnake.webhook.sync.SyncWebhook.edit_message:37
#: disnake.webhook.sync.SyncWebhook.send:50
#: disnake.webhook.sync.SyncWebhookMessage.edit:30 of
msgid "You specified both ``embed`` and ``embeds`` or ``file`` and ``files``"
msgstr ""

#: disnake.webhook.async_.Webhook.edit_message:54
#: disnake.webhook.async_.WebhookMessage.edit:47
#: disnake.webhook.sync.SyncWebhook.edit_message:38
#: disnake.webhook.sync.SyncWebhook.send:51
#: disnake.webhook.sync.SyncWebhookMessage.edit:31 of
msgid "The length of ``embeds`` was invalid"
msgstr ""

#: disnake.webhook.async_.Webhook.edit_message:55 of
msgid ""
"There was no token associated with this webhook or the webhook had     no"
" state."
msgstr ""

#: disnake.webhook.async_.Webhook.edit_message:57 of
msgid "The newly edited webhook message."
msgstr ""

#: disnake.webhook.async_.Webhook.edit_message:58
#: disnake.webhook.async_.WebhookMessage.edit:51 of
msgid ":class:`WebhookMessage`"
msgstr ""

#: disnake.webhook.async_.Webhook.delete_message:3
#: disnake.webhook.sync.SyncWebhook.delete_message:1 of
msgid "Deletes a message owned by this webhook."
msgstr ""

#: disnake.webhook.async_.Webhook.delete_message:5
#: disnake.webhook.sync.SyncWebhook.delete_message:3 of
msgid ""
"This is a lower level interface to :meth:`WebhookMessage.delete` in case "
"you only have an ID."
msgstr ""

#: disnake.webhook.async_.Webhook.delete_message:10
#: disnake.webhook.sync.SyncWebhook.delete_message:8 of
msgid "The message ID to delete."
msgstr ""

#: disnake.interactions.base.Interaction.delete_original_message:13
#: disnake.interactions.base.InteractionMessage.delete:11
#: disnake.message.Message.delete:18
#: disnake.webhook.async_.Webhook.delete_message:13
#: disnake.webhook.async_.WebhookMessage.delete:11
#: disnake.webhook.sync.SyncWebhook.delete_message:11
#: disnake.webhook.sync.SyncWebhookMessage.delete:9 of
msgid "Deleting the message failed."
msgstr ""

#: disnake.interactions.base.Interaction.delete_original_message:14
#: disnake.webhook.async_.Webhook.delete_message:14
#: disnake.webhook.sync.SyncWebhook.delete_message:12 of
msgid "Deleted a message that is not yours."
msgstr ""

#: ../../api.rst:3378
msgid "WebhookMessage"
msgstr ""

#: disnake.webhook.async_.WebhookMessage:1
#: disnake.webhook.sync.SyncWebhookMessage:1 of
msgid "Represents a message sent from your webhook."
msgstr ""

#: disnake.webhook.async_.WebhookMessage:3
#: disnake.webhook.sync.SyncWebhookMessage:3 of
msgid "This allows you to edit or delete a message sent by your webhook."
msgstr ""

#: disnake.interactions.base.InteractionMessage:6
#: disnake.webhook.async_.WebhookMessage:6
#: disnake.webhook.sync.SyncWebhookMessage:6 of
msgid ""
"This inherits from :class:`disnake.Message` with changes to :meth:`edit` "
"and :meth:`delete` to work."
msgstr ""

#: disnake.interactions.base.InteractionMessage.edit:3
#: disnake.message.Message.edit:3 disnake.message.PartialMessage.edit:3
#: disnake.webhook.async_.WebhookMessage.edit:3
#: disnake.webhook.sync.SyncWebhookMessage.edit:1 of
msgid "Edits the message."
msgstr ""

#: disnake.webhook.async_.WebhookMessage.edit:25 of
msgid ""
"A list of files to upload. This cannot be mixed with the ``file`` "
"parameter. Files will be appended to the message.  .. versionadded:: 2.0"
msgstr ""

#: disnake.interactions.base.Interaction.edit_original_message:24
#: disnake.interactions.base.InteractionMessage.edit:18
#: disnake.interactions.base.InteractionResponse.edit_message:28
#: disnake.webhook.async_.WebhookMessage.edit:25
#: disnake.webhook.sync.SyncWebhook.edit_message:23
#: disnake.webhook.sync.SyncWebhookMessage.edit:16 of
msgid ""
"A list of files to upload. This cannot be mixed with the ``file`` "
"parameter. Files will be appended to the message."
msgstr ""

#: disnake.message.PartialMessage.edit:58
#: disnake.webhook.async_.WebhookMessage.edit:35 of
msgid ""
"The updated view to update this message with. If ``None`` is passed then "
"the view is removed.  .. versionadded:: 2.0"
msgstr ""

#: disnake.interactions.base.Interaction.edit_original_message:32
#: disnake.interactions.base.InteractionMessage.edit:26
#: disnake.interactions.base.InteractionResponse.edit_message:35
#: disnake.message.Message.edit:56 disnake.message.PartialMessage.edit:58
#: disnake.webhook.async_.WebhookMessage.edit:35 of
msgid ""
"The updated view to update this message with. If ``None`` is passed then "
"the view is removed."
msgstr ""

#: disnake.interactions.base.Interaction.edit_original_message:44
#: disnake.interactions.base.InteractionMessage.edit:38
#: disnake.webhook.async_.WebhookMessage.edit:50
#: disnake.webhook.sync.SyncWebhookMessage.edit:34 of
msgid "The newly edited message."
msgstr ""

#: disnake.interactions.base.InteractionMessage.delete:3
#: disnake.message.Message.delete:3
#: disnake.webhook.async_.WebhookMessage.delete:3
#: disnake.webhook.sync.SyncWebhookMessage.delete:1 of
msgid "Deletes the message."
msgstr ""

#: disnake.interactions.base.InteractionMessage.delete:5
#: disnake.webhook.async_.WebhookMessage.delete:5 of
msgid ""
"If provided, the number of seconds to wait before deleting the message. "
"The waiting is done in the background and deletion failures are ignored."
msgstr ""

#: disnake.interactions.base.InteractionMessage.delete:9
#: disnake.message.Message.delete:16
#: disnake.webhook.async_.WebhookMessage.delete:9
#: disnake.webhook.sync.SyncWebhookMessage.delete:7 of
msgid "You do not have proper permissions to delete the message."
msgstr ""

#: disnake.interactions.base.InteractionMessage.delete:10
#: disnake.webhook.async_.WebhookMessage.delete:10
#: disnake.webhook.sync.SyncWebhookMessage.delete:8 of
msgid "The message was deleted already."
msgstr ""

#: ../../api.rst:3386
msgid "SyncWebhook"
msgstr ""

#: disnake.webhook.sync.SyncWebhook:1 of
msgid "Represents a synchronous Discord webhook."
msgstr ""

#: disnake.webhook.sync.SyncWebhook:3 of
msgid "For an asynchronous counterpart, see :class:`Webhook`."
msgstr ""

#: disnake.webhook.sync.SyncWebhook.from_url:5
#: disnake.webhook.sync.SyncWebhook.partial:7 of
msgid ""
"The session to use to send requests with. Note that the library does not "
"manage the session and will not close it. If not given, the ``requests`` "
"auto session creation functions are used instead."
msgstr ""

#: disnake.webhook.sync.SyncWebhook.edit:22
#: disnake.webhook.sync.SyncWebhook.fetch:20 of
msgid ":class:`SyncWebhook`"
msgstr ""

#: disnake.webhook.sync.SyncWebhook.edit:21 of
msgid "The newly edited webhook."
msgstr ""

#: disnake.webhook.sync.SyncWebhook.send:34 of
msgid ""
"Controls the mentions being processed in this message.  .. versionadded::"
" 1.4"
msgstr ""

#: disnake.interactions.base.InteractionResponse.edit_message:33
#: disnake.interactions.base.InteractionResponse.send_message:18
#: disnake.webhook.sync.SyncWebhook.send:34 of
msgid "Controls the mentions being processed in this message."
msgstr ""

#: disnake.webhook.sync.SyncWebhook.send:38 of
msgid "The thread to send this message to.  .. versionadded:: 2.0"
msgstr ""

#: disnake.webhook.sync.SyncWebhook.send:38 of
msgid "The thread to send this message to."
msgstr ""

#: disnake.webhook.sync.SyncWebhook.send:42 of
msgid ""
"Whether the server should wait before sending a response. This "
"essentially means that the return type of this function changes from "
"``None`` to a :class:`WebhookMessage` if set to ``True``."
msgstr ""

#: disnake.webhook.sync.SyncWebhook.send:55 of
msgid "Optional[:class:`SyncWebhookMessage`]"
msgstr ""

#: disnake.webhook.sync.SyncWebhook.fetch_message:1 of
msgid ""
"Retrieves a single :class:`~disnake.SyncWebhookMessage` owned by this "
"webhook."
msgstr ""

#: disnake.webhook.sync.SyncWebhook.fetch_message:14 of
msgid ":class:`~disnake.SyncWebhookMessage`"
msgstr ""

#: ../../api.rst:3395
msgid "SyncWebhookMessage"
msgstr ""

#: disnake.webhook.sync.SyncWebhookMessage.edit:35 of
msgid ":class:`SyncWebhookMessage`"
msgstr ""

#: disnake.webhook.sync.SyncWebhookMessage.delete:3 of
msgid ""
"If provided, the number of seconds to wait before deleting the message. "
"This blocks the thread."
msgstr ""

#: ../../api.rst:3405
msgid "Abstract Base Classes"
msgstr ""

#: ../../api.rst:3407
msgid ""
"An :term:`abstract base class` (also known as an ``abc``) is a class that"
" models can inherit to get their behaviour. **Abstract base classes "
"should not be instantiated**. They are mainly there for usage with "
":func:`isinstance` and :func:`issubclass`\\."
msgstr ""

#: ../../api.rst:3411
msgid ""
"This library has a module related to abstract base classes, in which all "
"the ABCs are subclasses of :class:`typing.Protocol`."
msgstr ""

#: ../../api.rst:3415
msgid "Snowflake"
msgstr ""

#: disnake.abc.Snowflake:1 of
msgid "An ABC that details the common operations on a Discord model."
msgstr ""

#: disnake.abc.Snowflake:3 of
msgid ""
"Almost all :ref:`Discord models <discord_api_models>` meet this abstract "
"base class."
msgstr ""

#: disnake.abc.Snowflake:6 of
msgid ""
"If you want to create a snowflake on your own, consider using "
":class:`.Object`."
msgstr ""

#: disnake.abc.Snowflake:11 of
msgid "The model's unique ID."
msgstr ""

#: ../../api.rst:3423 ../../api.rst:3505
msgid "User"
msgstr ""

#: disnake.abc.User:1 of
msgid "An ABC that details the common operations on a Discord user."
msgstr ""

#: disnake.abc.Connectable:4 disnake.abc.GuildChannel:3
#: disnake.abc.Messageable:3 disnake.abc.PrivateChannel:3 disnake.abc.User:3 of
msgid "The following implement this ABC:"
msgstr ""

#: disnake.abc.PrivateChannel:14 disnake.abc.User:6 of
msgid ":class:`~disnake.ClientUser`"
msgstr ""

#: disnake.abc.Messageable:9 disnake.abc.User:7 of
msgid ":class:`~disnake.Member`"
msgstr ""

#: disnake.abc.GuildChannel:10 disnake.abc.PrivateChannel:8 disnake.abc.User:9
#: of
msgid "This ABC must also implement :class:`~disnake.abc.Snowflake`."
msgstr ""

#: disnake.abc.User:13 disnake.user.ClientUser:23 disnake.user.User:23 of
msgid "The user's username."
msgstr ""

#: disnake.abc.User:19 of
msgid "The user's discriminator."
msgstr ""

#: disnake.abc.User:25 of
msgid "The avatar asset the user has."
msgstr ""

#: disnake.abc.User:27 of
msgid ":class:`~disnake.Asset`"
msgstr ""

#: disnake.abc.User:31 of
msgid "If the user is a bot account."
msgstr ""

#: disnake.ClientUser.display_name:1 disnake.Member.display_name:1
#: disnake.User.display_name:1 disnake.abc.User.display_name:1 of
msgid "Returns the user's display name."
msgstr ""

#: disnake.ClientUser.mention:1 disnake.User.mention:1
#: disnake.WidgetMember.mention:1 disnake.abc.User.mention:1 of
msgid "Returns a string that allows you to mention the given user."
msgstr ""

#: ../../api.rst:3431
msgid "PrivateChannel"
msgstr ""

#: disnake.abc.PrivateChannel:1 of
msgid "An ABC that details the common operations on a private Discord channel."
msgstr ""

#: disnake.abc.Messageable:6 disnake.abc.PrivateChannel:5 of
msgid ":class:`~disnake.DMChannel`"
msgstr ""

#: disnake.abc.Messageable:7 disnake.abc.PrivateChannel:6 of
msgid ":class:`~disnake.GroupChannel`"
msgstr ""

#: disnake.abc.PrivateChannel:12 disnake.channel.DMChannel:31
#: disnake.channel.GroupChannel:29 of
msgid "The user presenting yourself."
msgstr ""

#: ../../api.rst:3439
msgid "GuildChannel"
msgstr ""

#: disnake.abc.GuildChannel:1 of
msgid "An ABC that details the common operations on a Discord guild channel."
msgstr ""

#: disnake.abc.GuildChannel:5 disnake.abc.Messageable:5 of
msgid ":class:`~disnake.TextChannel`"
msgstr ""

#: disnake.abc.Connectable:6 disnake.abc.GuildChannel:6 of
msgid ":class:`~disnake.VoiceChannel`"
msgstr ""

#: disnake.abc.GuildChannel:7 of
msgid ":class:`~disnake.CategoryChannel`"
msgstr ""

#: disnake.abc.Connectable:7 disnake.abc.GuildChannel:8 of
msgid ":class:`~disnake.StageChannel`"
msgstr ""

#: disnake.abc.GuildChannel:14 disnake.channel.StageChannel:25
#: disnake.channel.StoreChannel:23 disnake.channel.TextChannel:23
#: disnake.channel.VoiceChannel:23 of
msgid "The channel name."
msgstr ""

#: disnake.abc.GuildChannel:20 disnake.channel.StageChannel:31
#: disnake.channel.StoreChannel:29 disnake.channel.TextChannel:29
#: disnake.channel.VoiceChannel:29 of
msgid "The guild the channel belongs to."
msgstr ""

#: disnake.abc.GuildChannel:22 of
msgid ":class:`~disnake.Guild`"
msgstr ""

#: disnake.abc.GuildChannel:26 disnake.channel.StageChannel:55
#: disnake.channel.StoreChannel:47 disnake.channel.TextChannel:53
#: disnake.channel.VoiceChannel:47 disnake.guild.Guild.create_stage_channel:19
#: disnake.guild.Guild.create_text_channel:48
#: disnake.guild.Guild.create_voice_channel:15 of
msgid ""
"The position in the channel list. This is a number that starts at 0. e.g."
" the top channel is position 0."
msgstr ""

#: disnake.CategoryChannel.changed_roles:1 disnake.StageChannel.changed_roles:1
#: disnake.StoreChannel.changed_roles:1 disnake.TextChannel.changed_roles:1
#: disnake.VoiceChannel.changed_roles:1
#: disnake.abc.GuildChannel.changed_roles:1 of
msgid ""
"Returns a list of roles that have been overridden from their default "
"values in the :attr:`~disnake.Guild.roles` attribute."
msgstr ""

#: disnake.CategoryChannel.changed_roles:4 disnake.StageChannel.changed_roles:4
#: disnake.StoreChannel.changed_roles:4 disnake.TextChannel.changed_roles:4
#: disnake.VoiceChannel.changed_roles:4
#: disnake.abc.GuildChannel.changed_roles:4 of
msgid "List[:class:`~disnake.Role`]"
msgstr ""

#: disnake.CategoryChannel.mention:1 disnake.PartialInviteChannel.mention:1
#: disnake.StageChannel.mention:1 disnake.StoreChannel.mention:1
#: disnake.TextChannel.mention:1 disnake.VoiceChannel.mention:1
#: disnake.WidgetChannel.mention:1 disnake.abc.GuildChannel.mention:1 of
msgid "The string that allows you to mention the channel."
msgstr ""

#: disnake.CategoryChannel.created_at:1 disnake.GroupChannel.created_at:1
#: disnake.PartialInviteChannel.created_at:1 disnake.StageChannel.created_at:1
#: disnake.StoreChannel.created_at:1 disnake.TextChannel.created_at:1
#: disnake.VoiceChannel.created_at:1 disnake.WidgetChannel.created_at:1
#: disnake.abc.GuildChannel.created_at:1 of
msgid "Returns the channel's creation time in UTC."
msgstr ""

#: disnake.abc.GuildChannel.overwrites_for:1 of
msgid "Returns the channel-specific overwrites for a member or a role."
msgstr ""

#: disnake.abc.GuildChannel.overwrites_for:3 of
msgid "The role or user denoting whose overwrite to get."
msgstr ""

#: disnake.abc.GuildChannel.overwrites_for:7 of
msgid "The permission overwrites for this object."
msgstr ""

#: disnake.abc.GuildChannel.overwrites_for:8 of
msgid ":class:`~disnake.PermissionOverwrite`"
msgstr ""

#: disnake.CategoryChannel.overwrites:1 disnake.StageChannel.overwrites:1
#: disnake.StoreChannel.overwrites:1 disnake.TextChannel.overwrites:1
#: disnake.VoiceChannel.overwrites:1 disnake.abc.GuildChannel.overwrites:1 of
msgid "Returns all of the channel's overwrites."
msgstr ""

#: disnake.CategoryChannel.overwrites:3 disnake.StageChannel.overwrites:3
#: disnake.StoreChannel.overwrites:3 disnake.TextChannel.overwrites:3
#: disnake.VoiceChannel.overwrites:3 disnake.abc.GuildChannel.overwrites:3 of
msgid ""
"This is returned as a dictionary where the key contains the target which "
"can be either a :class:`~disnake.Role` or a :class:`~disnake.Member` and "
"the value is the overwrite as a :class:`~disnake.PermissionOverwrite`."
msgstr ""

#: disnake.CategoryChannel.overwrites:7 disnake.StageChannel.overwrites:7
#: disnake.StoreChannel.overwrites:7 disnake.TextChannel.overwrites:7
#: disnake.VoiceChannel.overwrites:7 disnake.abc.GuildChannel.overwrites:7 of
msgid "The channel's permission overwrites."
msgstr ""

#: disnake.CategoryChannel.overwrites:8 disnake.StageChannel.overwrites:8
#: disnake.StoreChannel.overwrites:8 disnake.TextChannel.overwrites:8
#: disnake.VoiceChannel.overwrites:8 disnake.abc.GuildChannel.overwrites:8 of
msgid ""
"Dict[Union[:class:`~disnake.Role`, :class:`~disnake.Member`], "
":class:`~disnake.PermissionOverwrite`]"
msgstr ""

#: disnake.CategoryChannel.category:1 disnake.StageChannel.category:1
#: disnake.StoreChannel.category:1 disnake.TextChannel.category:1
#: disnake.VoiceChannel.category:1 disnake.abc.GuildChannel.category:1 of
msgid "The category this channel belongs to."
msgstr ""

#: disnake.CategoryChannel.category:3 disnake.StageChannel.category:3
#: disnake.StoreChannel.category:3 disnake.TextChannel.category:3
#: disnake.VoiceChannel.category:3 disnake.abc.GuildChannel.category:3 of
msgid "If there is no category then this is ``None``."
msgstr ""

#: disnake.CategoryChannel.category:5 disnake.StageChannel.category:5
#: disnake.StoreChannel.category:5 disnake.TextChannel.category:5
#: disnake.VoiceChannel.category:5 disnake.abc.GuildChannel.category:5 of
msgid "Optional[:class:`~disnake.CategoryChannel`]"
msgstr ""

#: disnake.CategoryChannel.permissions_synced:1
#: disnake.StageChannel.permissions_synced:1
#: disnake.StoreChannel.permissions_synced:1
#: disnake.TextChannel.permissions_synced:1
#: disnake.VoiceChannel.permissions_synced:1
#: disnake.abc.GuildChannel.permissions_synced:1 of
msgid ""
"Whether or not the permissions for this channel are synced with the "
"category it belongs to."
msgstr ""

#: disnake.CategoryChannel.permissions_synced:4
#: disnake.StageChannel.permissions_synced:4
#: disnake.StoreChannel.permissions_synced:4
#: disnake.TextChannel.permissions_synced:4
#: disnake.VoiceChannel.permissions_synced:4
#: disnake.abc.GuildChannel.permissions_synced:4 of
msgid "If there is no category then this is ``False``."
msgstr ""

#: disnake.abc.GuildChannel.permissions_for:1
#: disnake.channel.StoreChannel.permissions_for:1
#: disnake.channel.TextChannel.permissions_for:1
#: disnake.channel.VocalGuildChannel.permissions_for:1
#: disnake.threads.Thread.permissions_for:1 of
msgid ""
"Handles permission resolution for the :class:`~disnake.Member` or "
":class:`~disnake.Role`."
msgstr ""

#: disnake.abc.GuildChannel.permissions_for:4
#: disnake.channel.StoreChannel.permissions_for:4
#: disnake.channel.TextChannel.permissions_for:4
#: disnake.channel.VocalGuildChannel.permissions_for:4 of
msgid "This function takes into consideration the following cases:"
msgstr ""

#: disnake.abc.GuildChannel.permissions_for:6
#: disnake.channel.StoreChannel.permissions_for:6
#: disnake.channel.TextChannel.permissions_for:6
#: disnake.channel.VocalGuildChannel.permissions_for:6 of
msgid "Guild owner"
msgstr ""

#: disnake.abc.GuildChannel.permissions_for:7
#: disnake.channel.StoreChannel.permissions_for:7
#: disnake.channel.TextChannel.permissions_for:7
#: disnake.channel.VocalGuildChannel.permissions_for:7 of
msgid "Guild roles"
msgstr ""

#: disnake.abc.GuildChannel.permissions_for:8
#: disnake.channel.StoreChannel.permissions_for:8
#: disnake.channel.TextChannel.permissions_for:8
#: disnake.channel.VocalGuildChannel.permissions_for:8 of
msgid "Channel overrides"
msgstr ""

#: disnake.abc.GuildChannel.permissions_for:9
#: disnake.channel.StoreChannel.permissions_for:9
#: disnake.channel.TextChannel.permissions_for:9
#: disnake.channel.VocalGuildChannel.permissions_for:9 of
msgid "Member overrides"
msgstr ""

#: disnake.abc.GuildChannel.permissions_for:11
#: disnake.channel.StoreChannel.permissions_for:11
#: disnake.channel.TextChannel.permissions_for:11
#: disnake.channel.VocalGuildChannel.permissions_for:11 of
msgid ""
"If a :class:`~disnake.Role` is passed, then it checks the permissions "
"someone with that role would have, which is essentially:"
msgstr ""

#: disnake.abc.GuildChannel.permissions_for:14
#: disnake.channel.StoreChannel.permissions_for:14
#: disnake.channel.TextChannel.permissions_for:14
#: disnake.channel.VocalGuildChannel.permissions_for:14 of
msgid "The default role permissions"
msgstr ""

#: disnake.abc.GuildChannel.permissions_for:15
#: disnake.channel.StoreChannel.permissions_for:15
#: disnake.channel.TextChannel.permissions_for:15
#: disnake.channel.VocalGuildChannel.permissions_for:15 of
msgid "The permissions of the role used as a parameter"
msgstr ""

#: disnake.abc.GuildChannel.permissions_for:16
#: disnake.channel.StoreChannel.permissions_for:16
#: disnake.channel.TextChannel.permissions_for:16
#: disnake.channel.VocalGuildChannel.permissions_for:16 of
msgid "The default role permission overwrites"
msgstr ""

#: disnake.abc.GuildChannel.permissions_for:17
#: disnake.channel.StoreChannel.permissions_for:17
#: disnake.channel.TextChannel.permissions_for:17
#: disnake.channel.VocalGuildChannel.permissions_for:17 of
msgid "The permission overwrites of the role used as a parameter"
msgstr ""

#: disnake.abc.GuildChannel.permissions_for:19
#: disnake.channel.StoreChannel.permissions_for:19
#: disnake.channel.TextChannel.permissions_for:19
#: disnake.channel.VocalGuildChannel.permissions_for:19 of
msgid "The object passed in can now be a role object."
msgstr ""

#: disnake.abc.GuildChannel.permissions_for:22
#: disnake.channel.StoreChannel.permissions_for:22
#: disnake.channel.TextChannel.permissions_for:22
#: disnake.channel.VocalGuildChannel.permissions_for:22
#: disnake.threads.Thread.permissions_for:9 of
msgid ""
"The object to resolve permissions for. This could be either a member or a"
" role. If it's a role then member overwrites are not computed."
msgstr ""

#: disnake.abc.GuildChannel.permissions_for:27
#: disnake.channel.StoreChannel.permissions_for:27
#: disnake.channel.TextChannel.permissions_for:27
#: disnake.channel.VocalGuildChannel.permissions_for:27
#: disnake.threads.Thread.permissions_for:16 of
msgid "The resolved permissions for the member or role."
msgstr ""

#: disnake.abc.GuildChannel.permissions_for:28
#: disnake.channel.StoreChannel.permissions_for:28
#: disnake.channel.TextChannel.permissions_for:28
#: disnake.channel.VocalGuildChannel.permissions_for:28
#: disnake.threads.Thread.permissions_for:17 of
msgid ":class:`~disnake.Permissions`"
msgstr ""

#: disnake.abc.GuildChannel.delete:3 of
msgid "Deletes the channel."
msgstr ""

#: disnake.abc.GuildChannel.delete:5 of
msgid ""
"You must have :attr:`~disnake.Permissions.manage_channels` permission to "
"use this."
msgstr ""

#: disnake.abc.GuildChannel.delete:7 of
msgid "The reason for deleting this channel. Shows up on the audit log."
msgstr ""

#: disnake.abc.GuildChannel.delete:11 of
msgid "You do not have proper permissions to delete the channel."
msgstr ""

#: disnake.abc.GuildChannel.delete:12 of
msgid "The channel was not found or was already deleted."
msgstr ""

#: disnake.abc.GuildChannel.delete:13 of
msgid "Deleting the channel failed."
msgstr ""

#: disnake.abc.GuildChannel.set_permissions:3 of
msgid ""
"Sets the channel specific permission overwrites for a target in the "
"channel."
msgstr ""

#: disnake.abc.GuildChannel.set_permissions:6 of
msgid ""
"The ``target`` parameter should either be a :class:`~disnake.Member` or a"
" :class:`~disnake.Role` that belongs to guild."
msgstr ""

#: disnake.abc.GuildChannel.set_permissions:9 of
msgid ""
"The ``overwrite`` parameter, if given, must either be ``None`` or "
":class:`~disnake.PermissionOverwrite`. For convenience, you can pass in "
"keyword arguments denoting :class:`~disnake.Permissions` attributes. If "
"this is done, then you cannot mix the keyword arguments with the "
"``overwrite`` parameter."
msgstr ""

#: disnake.abc.GuildChannel.set_permissions:15 of
msgid ""
"If the ``overwrite`` parameter is ``None``, then the permission "
"overwrites are deleted."
msgstr ""

#: disnake.abc.GuildChannel.set_permissions:18 of
msgid ""
"You must have the :attr:`~disnake.Permissions.manage_roles` permission to"
" use this."
msgstr ""

#: disnake.abc.GuildChannel.set_permissions:22 of
msgid "This method *replaces* the old overwrites with the ones given."
msgstr ""

#: disnake.abc.GuildChannel.set_permissions:26 of
msgid "Setting allow and deny: ::"
msgstr ""

#: disnake.abc.GuildChannel.set_permissions:31 of
msgid "Deleting overwrites ::"
msgstr ""

#: disnake.abc.GuildChannel.set_permissions:35 of
msgid "Using :class:`~disnake.PermissionOverwrite` ::"
msgstr ""

#: disnake.abc.GuildChannel.set_permissions:42 of
msgid "The member or role to overwrite permissions for."
msgstr ""

#: disnake.abc.GuildChannel.set_permissions:44 of
msgid ""
"The permissions to allow and deny to the target, or ``None`` to delete "
"the overwrite."
msgstr ""

#: disnake.abc.GuildChannel.set_permissions:47 of
msgid ""
"A keyword argument list of permissions to set for ease of use. Cannot be "
"mixed with ``overwrite``."
msgstr ""

#: disnake.abc.GuildChannel.set_permissions:49
#: disnake.guild.Guild.prune_members:21 disnake.guild.Guild.unban:12
#: disnake.member.Member.move_to:16 of
msgid "The reason for doing this action. Shows up on the audit log."
msgstr ""

#: disnake.abc.GuildChannel.set_permissions:52 of
msgid "You do not have permissions to edit channel specific permissions."
msgstr ""

#: disnake.abc.GuildChannel.set_permissions:53 of
msgid "Editing channel specific permissions failed."
msgstr ""

#: disnake.abc.GuildChannel.set_permissions:54 of
msgid "The role or member being edited is not part of the guild."
msgstr ""

#: disnake.abc.GuildChannel.set_permissions:55 of
msgid ""
"The overwrite parameter invalid or the target type was not     "
":class:`~disnake.Role` or :class:`~disnake.Member`."
msgstr ""

#: disnake.abc.GuildChannel.clone:3 disnake.channel.CategoryChannel.clone:3
#: disnake.channel.StageChannel.clone:3 disnake.channel.StoreChannel.clone:3
#: disnake.channel.TextChannel.clone:3 disnake.channel.VoiceChannel.clone:3 of
msgid ""
"Clones this channel. This creates a channel with the same properties as "
"this channel."
msgstr ""

#: disnake.abc.GuildChannel.clone:6 disnake.abc.GuildChannel.move:7
#: disnake.channel.CategoryChannel.clone:6
#: disnake.channel.CategoryChannel.move:7 disnake.channel.StageChannel.clone:6
#: disnake.channel.StoreChannel.clone:6 disnake.channel.TextChannel.clone:6
#: disnake.channel.VoiceChannel.clone:6 of
msgid ""
"You must have the :attr:`~disnake.Permissions.manage_channels` permission"
" to do this."
msgstr ""

#: disnake.abc.GuildChannel.clone:11 disnake.channel.CategoryChannel.clone:11
#: disnake.channel.StageChannel.clone:11 disnake.channel.StoreChannel.clone:11
#: disnake.channel.TextChannel.clone:11 disnake.channel.VoiceChannel.clone:11
#: of
msgid ""
"The name of the new channel. If not provided, defaults to this channel "
"name."
msgstr ""

#: disnake.abc.GuildChannel.clone:14 disnake.channel.CategoryChannel.clone:14
#: disnake.channel.StageChannel.clone:14 disnake.channel.StoreChannel.clone:14
#: disnake.channel.TextChannel.clone:14 disnake.channel.VoiceChannel.clone:14
#: of
msgid "The reason for cloning this channel. Shows up on the audit log."
msgstr ""

#: disnake.abc.GuildChannel.clone:17 disnake.channel.CategoryChannel.clone:17
#: disnake.channel.StageChannel.clone:17 disnake.channel.StoreChannel.clone:17
#: disnake.channel.TextChannel.clone:17 disnake.channel.VoiceChannel.clone:17
#: disnake.guild.Guild.create_category:10
#: disnake.guild.Guild.create_stage_channel:25
#: disnake.guild.Guild.create_text_channel:61
#: disnake.guild.Guild.create_voice_channel:34 of
msgid "You do not have the proper permissions to create this channel."
msgstr ""

#: disnake.abc.GuildChannel.clone:18 disnake.channel.CategoryChannel.clone:18
#: disnake.channel.StageChannel.clone:18 disnake.channel.StoreChannel.clone:18
#: disnake.channel.TextChannel.clone:18 disnake.channel.VoiceChannel.clone:18
#: disnake.guild.Guild.create_category:11
#: disnake.guild.Guild.create_stage_channel:26
#: disnake.guild.Guild.create_text_channel:62
#: disnake.guild.Guild.create_voice_channel:35 of
msgid "Creating the channel failed."
msgstr ""

#: disnake.abc.GuildChannel.clone:21 disnake.channel.CategoryChannel.clone:21
#: disnake.channel.StageChannel.clone:21 disnake.channel.StoreChannel.clone:21
#: disnake.channel.TextChannel.clone:21 disnake.channel.VoiceChannel.clone:21
#: of
msgid ":class:`.abc.GuildChannel`"
msgstr ""

#: disnake.abc.GuildChannel.move:3 disnake.channel.CategoryChannel.move:3 of
msgid "A rich interface to help move a channel relative to other channels."
msgstr ""

#: disnake.abc.GuildChannel.move:5 disnake.channel.CategoryChannel.move:5 of
msgid "If exact position movement is required, ``edit`` should be used instead."
msgstr ""

#: disnake.abc.GuildChannel.move:12 disnake.channel.CategoryChannel.move:12 of
msgid ""
"Voice channels will always be sorted below text channels. This is a "
"Discord limitation."
msgstr ""

#: disnake.abc.GuildChannel.move:17 disnake.channel.CategoryChannel.move:17 of
msgid ""
"Whether to move the channel to the beginning of the channel list (or "
"category if given). This is mutually exclusive with ``end``, ``before``, "
"and ``after``."
msgstr ""

#: disnake.abc.GuildChannel.move:21 disnake.channel.CategoryChannel.move:21 of
msgid ""
"Whether to move the channel to the end of the channel list (or category "
"if given). This is mutually exclusive with ``beginning``, ``before``, and"
" ``after``."
msgstr ""

#: disnake.abc.GuildChannel.move:25 disnake.channel.CategoryChannel.move:25 of
msgid ""
"The channel that should be before our current channel. This is mutually "
"exclusive with ``beginning``, ``end``, and ``after``."
msgstr ""

#: disnake.abc.GuildChannel.move:28 disnake.channel.CategoryChannel.move:28 of
msgid ""
"The channel that should be after our current channel. This is mutually "
"exclusive with ``beginning``, ``end``, and ``before``."
msgstr ""

#: disnake.abc.GuildChannel.move:31 disnake.channel.CategoryChannel.move:31 of
msgid ""
"The number of channels to offset the move by. For example, an offset of "
"``2`` with ``beginning=True`` would move it 2 after the beginning. A "
"positive number moves it below while a negative number moves it above. "
"Note that this number is relative and computed after the ``beginning``, "
"``end``, ``before``, and ``after`` parameters."
msgstr ""

#: disnake.abc.GuildChannel.move:38 disnake.channel.CategoryChannel.move:38 of
msgid ""
"The category to move this channel under. If ``None`` is given then it "
"moves it out of the category. This parameter is ignored if moving a "
"category channel."
msgstr ""

#: disnake.abc.GuildChannel.move:42 disnake.channel.CategoryChannel.move:42 of
msgid "Whether to sync the permissions with the category (if given)."
msgstr ""

#: disnake.abc.GuildChannel.move:44 disnake.channel.CategoryChannel.move:44 of
msgid "The reason for the move."
msgstr ""

#: disnake.abc.GuildChannel.move:47 disnake.channel.CategoryChannel.move:47 of
msgid "An invalid position was given or a bad mix of arguments were passed."
msgstr ""

#: disnake.abc.GuildChannel.move:48 disnake.channel.CategoryChannel.move:48 of
msgid "You do not have permissions to move the channel."
msgstr ""

#: disnake.abc.GuildChannel.move:49 disnake.channel.CategoryChannel.move:49 of
msgid "Moving the channel failed."
msgstr ""

#: disnake.abc.GuildChannel.create_invite:3 of
msgid "Creates an instant invite from a text or voice channel."
msgstr ""

#: disnake.abc.GuildChannel.create_invite:5 of
msgid ""
"You must have the :attr:`~disnake.Permissions.create_instant_invite` "
"permission to do this."
msgstr ""

#: disnake.abc.GuildChannel.create_invite:8 of
msgid ""
"How long the invite should last in seconds. If it's 0 then the invite "
"doesn't expire. Defaults to ``0``."
msgstr ""

#: disnake.abc.GuildChannel.create_invite:11 of
msgid ""
"How many uses the invite could be used for. If it's 0 then there are "
"unlimited uses. Defaults to ``0``."
msgstr ""

#: disnake.abc.GuildChannel.create_invite:14 of
msgid ""
"Denotes that the invite grants temporary membership (i.e. they get kicked"
" after they disconnect). Defaults to ``False``."
msgstr ""

#: disnake.abc.GuildChannel.create_invite:17 of
msgid ""
"Indicates if a unique invite URL should be created. Defaults to True. If "
"this is set to ``False`` then it will return a previously created invite."
msgstr ""

#: disnake.abc.GuildChannel.create_invite:21 of
msgid "The reason for creating this invite. Shows up on the audit log."
msgstr ""

#: disnake.abc.GuildChannel.create_invite:23 of
msgid ""
"The type of target for the voice channel invite, if any.  .. "
"versionadded:: 2.0"
msgstr ""

#: disnake.abc.GuildChannel.create_invite:23 of
msgid "The type of target for the voice channel invite, if any."
msgstr ""

#: disnake.abc.GuildChannel.create_invite:27 of
msgid ""
"The user whose stream to display for this invite, required if "
"`target_type` is `TargetType.stream`. The user must be streaming in the "
"channel.  .. versionadded:: 2.0"
msgstr ""

#: disnake.abc.GuildChannel.create_invite:27 of
msgid ""
"The user whose stream to display for this invite, required if "
"`target_type` is `TargetType.stream`. The user must be streaming in the "
"channel."
msgstr ""

#: disnake.abc.GuildChannel.create_invite:31 of
msgid ""
"The id of the embedded application for the invite, required if "
"`target_type` is `TargetType.embedded_application`.  .. versionadded:: "
"2.0"
msgstr ""

#: disnake.abc.GuildChannel.create_invite:31 of
msgid ""
"The id of the embedded application for the invite, required if "
"`target_type` is `TargetType.embedded_application`."
msgstr ""

#: disnake.abc.GuildChannel.create_invite:36 of
msgid "Invite creation failed."
msgstr ""

#: disnake.abc.GuildChannel.create_invite:37 of
msgid "The channel that was passed is a category or an invalid channel."
msgstr ""

#: disnake.abc.GuildChannel.create_invite:40 of
msgid ":class:`~disnake.Invite`"
msgstr ""

#: disnake.abc.GuildChannel.invites:3 of
msgid "Returns a list of all active instant invites from this channel."
msgstr ""

#: disnake.abc.GuildChannel.invites:5 of
msgid ""
"You must have :attr:`~disnake.Permissions.manage_channels` to get this "
"information."
msgstr ""

#: disnake.abc.GuildChannel.invites:7 disnake.guild.Guild.bans:8
#: disnake.guild.Guild.fetch_ban:11 disnake.guild.Guild.invites:8 of
msgid "You do not have proper permissions to get the information."
msgstr ""

#: disnake.abc.GuildChannel.invites:8 disnake.guild.Guild.bans:9
#: disnake.guild.Guild.fetch_ban:13 disnake.guild.Guild.invites:9 of
msgid "An error occurred while fetching the information."
msgstr ""

#: disnake.abc.GuildChannel.invites:10 disnake.guild.Guild.invites:11 of
msgid "The list of invites that are currently active."
msgstr ""

#: disnake.abc.GuildChannel.invites:11 of
msgid "List[:class:`~disnake.Invite`]"
msgstr ""

#: ../../api.rst:3447
msgid "Messageable"
msgstr ""

#: disnake.abc.Messageable:1 of
msgid ""
"An ABC that details the common operations on a model that can send "
"messages."
msgstr ""

#: disnake.abc.Messageable:10 of
msgid ":class:`~disnake.ext.commands.Context`"
msgstr ""

#: disnake.abc.Messageable:11 of
msgid ":class:`~disnake.Thread`"
msgstr ""

#: disnake.abc.Messageable.history:1 of
msgid ""
"Returns an :class:`~disnake.AsyncIterator` that enables receiving the "
"destination's message history."
msgstr ""

#: disnake.abc.Messageable.history:3 of
msgid ""
"You must have :attr:`~disnake.Permissions.read_message_history` "
"permissions to use this."
msgstr ""

#: disnake.abc.Messageable.history:14 disnake.reaction.Reaction.users:14 of
msgid "Flattening into a list: ::"
msgstr ""

#: disnake.abc.Messageable.history:21 of
msgid ""
"The number of messages to retrieve. If ``None``, retrieves every message "
"in the channel. Note, however, that this would make it a slow operation."
msgstr ""

#: disnake.abc.Messageable.history:25 of
msgid ""
"Retrieve messages before this date or message. If a datetime is provided,"
" it is recommended to use a UTC aware datetime. If the datetime is naive,"
" it is assumed to be local time."
msgstr ""

#: disnake.abc.Messageable.history:29 of
msgid ""
"Retrieve messages after this date or message. If a datetime is provided, "
"it is recommended to use a UTC aware datetime. If the datetime is naive, "
"it is assumed to be local time."
msgstr ""

#: disnake.abc.Messageable.history:33 of
msgid ""
"Retrieve messages around this date or message. If a datetime is provided,"
" it is recommended to use a UTC aware datetime. If the datetime is naive,"
" it is assumed to be local time. When using this argument, the maximum "
"limit is 101. Note that if the limit is an even number then this will "
"return at most limit + 1 messages."
msgstr ""

#: disnake.abc.Messageable.history:39 of
msgid ""
"If set to ``True``, return messages in oldest->newest order. Defaults to "
"``True`` if ``after`` is specified, otherwise ``False``."
msgstr ""

#: disnake.abc.Messageable.history:43 of
msgid "You do not have permissions to get channel message history."
msgstr ""

#: disnake.abc.Messageable.history:44 of
msgid "The request to get message history failed."
msgstr ""

#: disnake.abc.Messageable.history:46 of
msgid ":class:`~disnake.Message` -- The message with the message data parsed."
msgstr ""

#: disnake.abc.Messageable.typing:1 of
msgid ""
"Returns a context manager that allows you to type for an indefinite "
"period of time."
msgstr ""

#: disnake.abc.Messageable.typing:3 of
msgid "This is useful for denoting long computations in your bot."
msgstr ""

#: disnake.abc.Messageable.typing:7 of
msgid ""
"This is both a regular context manager and an async context manager. This"
" means that both ``with`` and ``async with`` work with this."
msgstr ""

#: disnake.abc.Messageable.typing:10 of
msgid "Example Usage: ::"
msgstr ""

#: disnake.abc.Messageable.send:3 of
msgid "Sends a message to the destination with the content given."
msgstr ""

#: disnake.abc.Messageable.send:5 of
msgid ""
"The content must be a type that can convert to a string through "
"``str(content)``. If the content is set to ``None`` (the default), then "
"the ``embed`` parameter must be provided."
msgstr ""

#: disnake.abc.Messageable.send:9 of
msgid ""
"To upload a single file, the ``file`` parameter should be used with a "
"single :class:`~disnake.File` object. To upload multiple files, the "
"``files`` parameter should be used with a :class:`list` of "
":class:`~disnake.File` objects. **Specifying both parameters will lead to"
" an exception**."
msgstr ""

#: disnake.abc.Messageable.send:14 of
msgid ""
"To upload a single embed, the ``embed`` parameter should be used with a "
"single :class:`~disnake.Embed` object. To upload multiple embeds, the "
"``embeds`` parameter should be used with a :class:`list` of "
":class:`~disnake.Embed` objects. **Specifying both parameters will lead "
"to an exception**."
msgstr ""

#: disnake.abc.Messageable.send:26 of
msgid ""
"A list of embeds to send with the content. Must be a maximum of 10. This "
"cannot be mixed with the ``embed`` parameter.  .. versionadded:: 2.0"
msgstr ""

#: disnake.abc.Messageable.send:36 of
msgid ""
"A list of stickers to upload. Must be a maximum of 3.  .. versionadded:: "
"2.0"
msgstr ""

#: disnake.abc.Messageable.send:36 of
msgid "A list of stickers to upload. Must be a maximum of 3."
msgstr ""

#: disnake.abc.Messageable.send:40 of
msgid ""
"The nonce to use for sending this message. If the message was "
"successfully sent, then the message will have a nonce with this value."
msgstr ""

#: disnake.abc.Messageable.send:47 of
msgid ""
"Controls the mentions being processed in this message. If this is passed,"
" then the object is merged with :attr:`Client.allowed_mentions "
"<disnake.Client.allowed_mentions>`. The merging behaviour only overrides "
"attributes that have been explicitly passed to the object, otherwise it "
"uses the attributes set in :attr:`Client.allowed_mentions "
"<disnake.Client.allowed_mentions>`. If no object is passed at all then "
"the defaults given by :attr:`Client.allowed_mentions "
"<disnake.Client.allowed_mentions>` are used instead.  .. versionadded:: "
"1.4"
msgstr ""

#: disnake.abc.Messageable.send:47
#: disnake.interactions.base.Interaction.send:21 of
msgid ""
"Controls the mentions being processed in this message. If this is passed,"
" then the object is merged with :attr:`Client.allowed_mentions "
"<disnake.Client.allowed_mentions>`. The merging behaviour only overrides "
"attributes that have been explicitly passed to the object, otherwise it "
"uses the attributes set in :attr:`Client.allowed_mentions "
"<disnake.Client.allowed_mentions>`. If no object is passed at all then "
"the defaults given by :attr:`Client.allowed_mentions "
"<disnake.Client.allowed_mentions>` are used instead."
msgstr ""

#: disnake.abc.Messageable.send:56 of
msgid ""
"A reference to the :class:`~disnake.Message` to which you are replying, "
"this can be created using :meth:`~disnake.Message.to_reference` or passed"
" directly as a :class:`~disnake.Message`. You can control whether this "
"mentions the author of the referenced message using the "
":attr:`~disnake.AllowedMentions.replied_user` attribute of "
"``allowed_mentions`` or by setting ``mention_author``.  .. versionadded::"
" 1.6"
msgstr ""

#: disnake.abc.Messageable.send:56 of
msgid ""
"A reference to the :class:`~disnake.Message` to which you are replying, "
"this can be created using :meth:`~disnake.Message.to_reference` or passed"
" directly as a :class:`~disnake.Message`. You can control whether this "
"mentions the author of the referenced message using the "
":attr:`~disnake.AllowedMentions.replied_user` attribute of "
"``allowed_mentions`` or by setting ``mention_author``."
msgstr ""

#: disnake.abc.Messageable.send:63 of
msgid ""
"If set, overrides the :attr:`~disnake.AllowedMentions.replied_user` "
"attribute of ``allowed_mentions``.  .. versionadded:: 1.6"
msgstr ""

#: disnake.abc.Messageable.send:63 of
msgid ""
"If set, overrides the :attr:`~disnake.AllowedMentions.replied_user` "
"attribute of ``allowed_mentions``."
msgstr ""

#: disnake.abc.Messageable.send:67 of
msgid "A Discord UI View to add to the message."
msgstr ""

#: disnake.abc.Messageable.send:71 disnake.message.Message.reply:9 of
msgid "You do not have the proper permissions to send the message."
msgstr ""

#: disnake.abc.Messageable.send:72 of
msgid ""
"The ``files`` list is not of the appropriate size,     you specified both"
" ``file`` and ``files``,     or you specified both ``embed`` and "
"``embeds``,     or the ``reference`` object is not a "
":class:`~disnake.Message`,     :class:`~disnake.MessageReference` or "
":class:`~disnake.PartialMessage`."
msgstr ""

#: disnake.abc.Messageable.send:74 disnake.message.Message.reply:12 of
msgid "The message that was sent."
msgstr ""

#: disnake.abc.Messageable.fetch_message:13 disnake.abc.Messageable.send:75 of
msgid ":class:`~disnake.Message`"
msgstr ""

#: disnake.abc.Messageable.trigger_typing:3 of
msgid "Triggers a *typing* indicator to the destination."
msgstr ""

#: disnake.abc.Messageable.trigger_typing:5 of
msgid ""
"*Typing* indicator will go away after 10 seconds, or after a message is "
"sent."
msgstr ""

#: disnake.abc.Messageable.fetch_message:3 of
msgid "Retrieves a single :class:`~disnake.Message` from the destination."
msgstr ""

#: disnake.abc.Messageable.pins:3 of
msgid "Retrieves all messages that are currently pinned in the channel."
msgstr ""

#: disnake.abc.Messageable.pins:7 of
msgid ""
"Due to a limitation with the Discord API, the :class:`.Message` objects "
"returned by this method do not contain complete "
":attr:`.Message.reactions` data."
msgstr ""

#: disnake.abc.Messageable.pins:11 of
msgid "Retrieving the pinned messages failed."
msgstr ""

#: disnake.abc.Messageable.pins:13 of
msgid "The messages that are currently pinned."
msgstr ""

#: disnake.abc.Messageable.pins:14 of
msgid "List[:class:`~disnake.Message`]"
msgstr ""

#: ../../api.rst:3462
msgid "Connectable"
msgstr ""

#: disnake.abc.Connectable:1 of
msgid ""
"An ABC that details the common operations on a channel that can connect "
"to a voice server."
msgstr ""

#: disnake.abc.Connectable:11 of
msgid ""
"This ABC is not decorated with :func:`typing.runtime_checkable`, so will "
"fail :func:`isinstance`/:func:`issubclass` checks."
msgstr ""

#: ../../api.rst:3471
msgid "Discord Models"
msgstr ""

#: ../../api.rst:3473
msgid ""
"Models are classes that are received from Discord and are not meant to be"
" created by the user of the library."
msgstr ""

#: ../../api.rst:3478
msgid ""
"The classes listed below are **not intended to be created by users** and "
"are also **read-only**."
msgstr ""

#: ../../api.rst:3481
msgid ""
"For example, this means that you should not make your own :class:`User` "
"instances nor should you modify the :class:`User` instance yourself."
msgstr ""

#: ../../api.rst:3484
msgid ""
"If you want to get one of these model classes instances they'd have to be"
" through the cache, and a common way of doing so is through the "
":func:`utils.find` function or attributes of model classes that you "
"receive from the events specified in the :ref:`discord-api-events`."
msgstr ""

#: ../../api.rst:3491 ../../api.rst:4173
msgid ""
"Nearly all classes here have :ref:`py:slots` defined which means that it "
"is impossible to have dynamic attributes to the data classes."
msgstr ""

#: ../../api.rst:3496
msgid "ClientUser"
msgstr ""

#: disnake.user.ClientUser:1 of
msgid "Represents your Discord user."
msgstr ""

#: disnake.user.ClientUser:7 disnake.user.User:7 of
msgid "Checks if two users are equal."
msgstr ""

#: disnake.user.ClientUser:11 disnake.user.User:11 of
msgid "Checks if two users are not equal."
msgstr ""

#: disnake.user.ClientUser:15 disnake.user.User:15 of
msgid "Return the user's hash."
msgstr ""

#: disnake.user.ClientUser:19 disnake.user.User:19 of
msgid "Returns the user's name with discriminator."
msgstr ""

#: disnake.user.ClientUser:29 disnake.user.User:29 of
msgid "The user's unique ID."
msgstr ""

#: disnake.user.ClientUser:35 disnake.user.User:35 of
msgid "The user's discriminator. This is given when the username has conflicts."
msgstr ""

#: disnake.user.ClientUser:47 disnake.user.User:47 of
msgid ""
"Specifies if the user is a system user (i.e. represents Discord "
"officially)."
msgstr ""

#: disnake.user.ClientUser:55 of
msgid "Specifies if the user's email is verified."
msgstr ""

#: disnake.user.ClientUser:61 of
msgid "The IETF language tag used to identify the language the user is using."
msgstr ""

#: disnake.user.ClientUser:67 of
msgid "Specifies if the user has MFA turned on and working."
msgstr ""

#: disnake.user.ClientUser.edit:3 of
msgid "Edits the current profile of the client."
msgstr ""

#: disnake.user.ClientUser.edit:7 of
msgid ""
"To upload an avatar, a :term:`py:bytes-like object` must be passed in "
"that represents the image being uploaded. If this is done through a file "
"then the file must be opened via ``open('some_filename', 'rb')`` and the "
":term:`py:bytes-like object` is given through the use of ``fp.read()``."
msgstr ""

#: disnake.user.ClientUser.edit:12 of
msgid "The only image formats supported for uploading is JPEG and PNG."
msgstr ""

#: disnake.user.ClientUser.edit:14 of
msgid ""
"The edit is no longer in-place, instead the newly edited client user is "
"returned."
msgstr ""

#: disnake.user.ClientUser.edit:17 of
msgid "The new username you wish to change to."
msgstr ""

#: disnake.user.ClientUser.edit:19 of
msgid ""
"A :term:`py:bytes-like object` representing the image to upload. Could be"
" ``None`` to denote no avatar."
msgstr ""

#: disnake.user.ClientUser.edit:23 of
msgid "Editing your profile failed."
msgstr ""

#: disnake.user.ClientUser.edit:24 of
msgid "Wrong image format passed for ``avatar``."
msgstr ""

#: disnake.user.ClientUser.edit:26 of
msgid "The newly edited client user."
msgstr ""

#: disnake.ClientUser.accent_color:1 disnake.User.accent_color:1
#: disnake.WidgetMember.accent_color:1 of
msgid "Returns the user's accent color, if applicable."
msgstr ""

#: disnake.ClientUser.accent_color:3 disnake.User.accent_color:3
#: disnake.WidgetMember.accent_color:3 of
msgid "There is an alias for this named :attr:`accent_colour`."
msgstr ""

#: disnake.ClientUser.accent_color:9 disnake.ClientUser.accent_colour:9
#: disnake.ClientUser.banner:7 disnake.User.accent_color:9
#: disnake.User.accent_colour:9 disnake.User.banner:7
#: disnake.WidgetMember.accent_color:9 disnake.WidgetMember.accent_colour:9
#: disnake.WidgetMember.banner:7 of
msgid "This information is only available via :meth:`Client.fetch_user`."
msgstr ""

#: disnake.ClientUser.accent_color:11 disnake.ClientUser.accent_colour:11
#: disnake.User.accent_color:11 disnake.User.accent_colour:11
#: disnake.WidgetMember.accent_color:11 disnake.WidgetMember.accent_colour:11
#: of
msgid "Optional[:class:`Colour`]"
msgstr ""

#: disnake.ClientUser.accent_colour:1 disnake.User.accent_colour:1
#: disnake.WidgetMember.accent_colour:1 of
msgid "Returns the user's accent colour, if applicable."
msgstr ""

#: disnake.ClientUser.accent_colour:3 disnake.User.accent_colour:3
#: disnake.WidgetMember.accent_colour:3 of
msgid "There is an alias for this named :attr:`accent_color`."
msgstr ""

#: disnake.ClientUser.avatar:1 disnake.User.avatar:1 of
msgid "Returns an :class:`Asset` for the avatar the user has."
msgstr ""

#: disnake.ClientUser.avatar:3 disnake.User.avatar:3 of
msgid ""
"If the user does not have a traditional avatar, ``None`` is returned. If "
"you want the avatar that a user has displayed, consider "
":attr:`display_avatar`."
msgstr ""

#: disnake.ClientUser.avatar:6 disnake.ClientUser.banner:9
#: disnake.GroupChannel.icon:3 disnake.Guild.banner:3
#: disnake.Guild.discovery_splash:3 disnake.Guild.icon:3 disnake.Guild.splash:3
#: disnake.Member.guild_avatar:6 disnake.PartialInviteGuild.banner:3
#: disnake.PartialInviteGuild.icon:3 disnake.PartialInviteGuild.splash:3
#: disnake.PartialWebhookGuild.icon:3 disnake.Role.icon:5 disnake.User.avatar:6
#: disnake.User.banner:9 disnake.WidgetMember.banner:9 of
msgid "Optional[:class:`Asset`]"
msgstr ""

#: disnake.ClientUser.banner:1 disnake.User.banner:1
#: disnake.WidgetMember.banner:1 of
msgid "Returns the user's banner asset, if available."
msgstr ""

#: disnake.ClientUser.color:1 disnake.User.color:1 disnake.WidgetMember.color:1
#: of
msgid ""
"A property that returns a color denoting the rendered color for the user."
" This always returns :meth:`Colour.default`."
msgstr ""

#: disnake.ClientUser.color:4 disnake.Member.color:5 disnake.User.color:4
#: disnake.WidgetMember.color:4 of
msgid "There is an alias for this named :attr:`colour`."
msgstr ""

#: disnake.ClientUser.colour:1 disnake.User.colour:1
#: disnake.WidgetMember.colour:1 of
msgid ""
"A property that returns a colour denoting the rendered colour for the "
"user. This always returns :meth:`Colour.default`."
msgstr ""

#: disnake.ClientUser.colour:4 disnake.Member.colour:5 disnake.User.colour:4
#: disnake.WidgetMember.colour:4 of
msgid "There is an alias for this named :attr:`color`."
msgstr ""

#: disnake.ClientUser.created_at:1 disnake.User.created_at:1
#: disnake.WidgetMember.created_at:1 of
msgid "Returns the user's creation time in UTC."
msgstr ""

#: disnake.ClientUser.created_at:3 disnake.User.created_at:3
#: disnake.WidgetMember.created_at:3 of
msgid "This is when the user's Discord account was created."
msgstr ""

#: disnake.ClientUser.default_avatar:1 disnake.User.default_avatar:1
#: disnake.WidgetMember.default_avatar:1 of
msgid ""
"Returns the default avatar for a given user. This is calculated by the "
"user's discriminator."
msgstr ""

#: disnake.ClientUser.display_avatar:1 disnake.User.display_avatar:1
#: disnake.WidgetMember.display_avatar:1 of
msgid "Returns the user's display avatar."
msgstr ""

#: disnake.ClientUser.display_avatar:3 disnake.User.display_avatar:3
#: disnake.WidgetMember.display_avatar:3 of
msgid "For regular users this is just their default avatar or uploaded avatar."
msgstr ""

#: disnake.ClientUser.display_name:3 disnake.Member.display_name:3
#: disnake.User.display_name:3 of
msgid ""
"For regular users this is just their username, but if they have a guild "
"specific nickname then that is returned instead."
msgstr ""

#: disnake.user.BaseUser.mentioned_in:1 of
msgid "Checks if the user is mentioned in the specified message."
msgstr ""

#: disnake.member.Member.mentioned_in:3 disnake.user.BaseUser.mentioned_in:3 of
msgid "The message to check if you're mentioned in."
msgstr ""

#: disnake.user.BaseUser.mentioned_in:6 of
msgid "Indicates if the user is mentioned in the message."
msgstr ""

#: disnake.ClientUser.public_flags:1 disnake.User.public_flags:1
#: disnake.WidgetMember.public_flags:1 of
msgid "The publicly available flags the user has."
msgstr ""

#: disnake.ClientUser.public_flags:3 disnake.User.public_flags:3
#: disnake.WidgetMember.public_flags:3 of
msgid ":class:`PublicUserFlags`"
msgstr ""

#: disnake.user.User:1 of
msgid "Represents a Discord user."
msgstr ""

#: disnake.User.dm_channel:1 of
msgid "Returns the channel associated with this user if it exists."
msgstr ""

#: disnake.User.dm_channel:3 of
msgid ""
"If this returns ``None``, you can create a DM channel by calling the "
":meth:`create_dm` coroutine function."
msgstr ""

#: disnake.User.dm_channel:6 of
msgid "Optional[:class:`DMChannel`]"
msgstr ""

#: disnake.User.mutual_guilds:1 of
msgid "The guilds that the user shares with the client."
msgstr ""

#: disnake.User.mutual_guilds:5 of
msgid "This will only return mutual guilds within the client's internal cache."
msgstr ""

#: disnake.User.mutual_guilds:9 of
msgid "List[:class:`Guild`]"
msgstr ""

#: disnake.member.flatten_user.<locals>.generate_function.<locals>.general:3
#: disnake.user.User.create_dm:3 of
msgid "Creates a :class:`DMChannel` with this user."
msgstr ""

#: ../../api.rst:3521
msgid "Attachment"
msgstr ""

#: disnake.message.Attachment:1 of
msgid "Represents an attachment from Discord."
msgstr ""

#: disnake.message.Attachment:7 of
msgid "Returns the URL of the attachment."
msgstr ""

#: disnake.message.Attachment:11 of
msgid "Checks if the attachment is equal to another attachment."
msgstr ""

#: disnake.message.Attachment:15 of
msgid "Checks if the attachment is not equal to another attachment."
msgstr ""

#: disnake.message.Attachment:19 of
msgid "Returns the hash of the attachment."
msgstr ""

#: disnake.message.Attachment:21 of
msgid "Attachment can now be casted to :class:`str` and is hashable."
msgstr ""

#: disnake.message.Attachment:26 of
msgid "The attachment ID."
msgstr ""

#: disnake.message.Attachment:32 of
msgid "The attachment size in bytes."
msgstr ""

#: disnake.message.Attachment:38 of
msgid "The attachment's height, in pixels. Only applicable to images and videos."
msgstr ""

#: disnake.message.Attachment:44 of
msgid "The attachment's width, in pixels. Only applicable to images and videos."
msgstr ""

#: disnake.message.Attachment:50 of
msgid "The attachment's filename."
msgstr ""

#: disnake.message.Attachment:56 of
msgid ""
"The attachment URL. If the message this attachment was attached to is "
"deleted, then this will 404."
msgstr ""

#: disnake.message.Attachment:63 of
msgid ""
"The proxy URL. This is a cached version of the :attr:`~Attachment.url` in"
" the case of images. When the message is deleted, this URL might be valid"
" for a few minutes or not valid at all."
msgstr ""

#: disnake.message.Attachment:71 of
msgid "The attachment's `media type <https://en.wikipedia.org/wiki/Media_type>`_"
msgstr ""

#: disnake.message.Attachment.is_spoiler:1 of
msgid ":class:`bool`: Whether this attachment contains a spoiler."
msgstr ""

#: disnake.message.Attachment.save:3 of
msgid "Saves this attachment into a file-like object."
msgstr ""

#: disnake.asset.AssetMixin.save:5 disnake.message.Attachment.save:5 of
msgid ""
"The file-like object to save this attachment to or the filename to use. "
"If a filename is passed then a file is created with that filename and "
"used instead."
msgstr ""

#: disnake.asset.AssetMixin.save:9 disnake.message.Attachment.save:9 of
msgid ""
"Whether to seek to the beginning of the file after saving is successfully"
" done."
msgstr ""

#: disnake.message.Attachment.read:7 disnake.message.Attachment.save:12
#: disnake.message.Attachment.to_file:8 of
msgid ""
"Whether to use :attr:`proxy_url` rather than :attr:`url` when downloading"
" the attachment. This will allow attachments to be saved after deletion "
"more often, compared to the regular URL which is generally deleted right "
"after the message is deleted. Note that this can still fail to download "
"deleted attachments if too much time has passed and it does not work on "
"some types of attachments."
msgstr ""

#: disnake.message.Attachment.save:20 of
msgid "Saving the attachment failed."
msgstr ""

#: disnake.message.Attachment.read:17 disnake.message.Attachment.save:21
#: disnake.message.Attachment.to_file:24 of
msgid "The attachment was deleted."
msgstr ""

#: disnake.asset.AssetMixin.save:17 disnake.message.Attachment.save:23 of
msgid "The number of bytes written."
msgstr ""

#: disnake.message.Attachment.read:3 of
msgid "Retrieves the content of this attachment as a :class:`bytes` object."
msgstr ""

#: disnake.message.Attachment.read:15 disnake.message.Attachment.to_file:22 of
msgid "Downloading the attachment failed."
msgstr ""

#: disnake.message.Attachment.read:16 disnake.message.Attachment.to_file:23 of
msgid "You do not have permissions to access this attachment"
msgstr ""

#: disnake.message.Attachment.read:19 of
msgid "The contents of the attachment."
msgstr ""

#: disnake.message.Attachment.to_file:3 of
msgid ""
"Converts the attachment into a :class:`File` suitable for sending via "
":meth:`abc.Messageable.send`."
msgstr ""

#: disnake.message.Attachment.to_file:8 of
msgid ""
"Whether to use :attr:`proxy_url` rather than :attr:`url` when downloading"
" the attachment. This will allow attachments to be saved after deletion "
"more often, compared to the regular URL which is generally deleted right "
"after the message is deleted. Note that this can still fail to download "
"deleted attachments if too much time has passed and it does not work on "
"some types of attachments.  .. versionadded:: 1.4"
msgstr ""

#: disnake.message.Attachment.to_file:17 of
msgid "Whether the file is a spoiler.  .. versionadded:: 1.4"
msgstr ""

#: disnake.message.Attachment.to_file:17 of
msgid "Whether the file is a spoiler."
msgstr ""

#: disnake.message.Attachment.to_file:26 of
msgid "The attachment as a file suitable for sending."
msgstr ""

#: disnake.message.Attachment.to_file:27 of
msgid ":class:`File`"
msgstr ""

#: ../../api.rst:3529
msgid "Asset"
msgstr ""

#: disnake.asset.Asset:1 of
msgid "Represents a CDN asset on Discord."
msgstr ""

#: disnake.asset.Asset:7 of
msgid "Returns the URL of the CDN asset."
msgstr ""

#: disnake.asset.Asset:11 of
msgid "Returns the length of the CDN asset's URL."
msgstr ""

#: disnake.asset.Asset:15 of
msgid "Checks if the asset is equal to another asset."
msgstr ""

#: disnake.asset.Asset:19 of
msgid "Checks if the asset is not equal to another asset."
msgstr ""

#: disnake.asset.Asset:23 of
msgid "Returns the hash of the asset."
msgstr ""

#: disnake.Asset.url:1 of
msgid "Returns the underlying URL of the asset."
msgstr ""

#: disnake.Asset.key:1 of
msgid "Returns the identifying key of the asset."
msgstr ""

#: disnake.asset.Asset.is_animated:1 of
msgid ":class:`bool`: Returns whether the asset is animated."
msgstr ""

#: disnake.asset.Asset.replace:1 of
msgid "Returns a new asset with the passed components replaced."
msgstr ""

#: disnake.asset.Asset.replace:3 disnake.asset.Asset.with_size:3 of
msgid "The new size of the asset."
msgstr ""

#: disnake.asset.Asset.replace:5 of
msgid ""
"The new format to change it to. Must be either 'webp', 'jpeg', 'jpg', "
"'png', or 'gif' if it's animated."
msgstr ""

#: disnake.asset.Asset.replace:8 of
msgid ""
"The new format to change it to if the asset isn't animated. Must be "
"either 'webp', 'jpeg', 'jpg', or 'png'."
msgstr ""

#: disnake.asset.Asset.replace:12 of
msgid "An invalid size or format was passed."
msgstr ""

#: disnake.asset.Asset.replace:14 of
msgid "The newly updated asset."
msgstr ""

#: disnake.asset.Asset.with_size:1 of
msgid "Returns a new asset with the specified size."
msgstr ""

#: disnake.asset.Asset.with_size:6 of
msgid "The asset had an invalid size."
msgstr ""

#: disnake.asset.Asset.with_format:8 disnake.asset.Asset.with_size:8
#: disnake.asset.Asset.with_static_format:11 of
msgid "The new updated asset."
msgstr ""

#: disnake.asset.Asset.with_format:1 of
msgid "Returns a new asset with the specified format."
msgstr ""

#: disnake.asset.Asset.with_format:3 of
msgid "The new format of the asset."
msgstr ""

#: disnake.asset.Asset.with_format:6 disnake.asset.Asset.with_static_format:9
#: of
msgid "The asset had an invalid format."
msgstr ""

#: disnake.asset.Asset.with_static_format:1 of
msgid "Returns a new asset with the specified static format."
msgstr ""

#: disnake.asset.Asset.with_static_format:3 of
msgid ""
"This only changes the format if the underlying asset is not animated. "
"Otherwise, the asset is not changed."
msgstr ""

#: disnake.asset.Asset.with_static_format:6 of
msgid "The new static format of the asset."
msgstr ""

#: disnake.asset.AssetMixin.read:3 disnake.partial_emoji.PartialEmoji.read:3 of
msgid "Retrieves the content of this asset as a :class:`bytes` object."
msgstr ""

#: disnake.asset.AssetMixin.read:5 disnake.asset.AssetMixin.save:13
#: disnake.partial_emoji.PartialEmoji.read:5 of
msgid "There was no internal connection state."
msgstr ""

#: disnake.asset.AssetMixin.read:6 disnake.asset.AssetMixin.save:14
#: disnake.partial_emoji.PartialEmoji.read:6 of
msgid "Downloading the asset failed."
msgstr ""

#: disnake.asset.AssetMixin.read:7 disnake.asset.AssetMixin.save:15
#: disnake.partial_emoji.PartialEmoji.read:7 of
msgid "The asset was deleted."
msgstr ""

#: disnake.asset.AssetMixin.read:9 disnake.partial_emoji.PartialEmoji.read:9 of
msgid "The content of the asset."
msgstr ""

#: disnake.asset.AssetMixin.save:3 of
msgid "Saves this asset into a file-like object."
msgstr ""

#: ../../api.rst:3538
msgid "Message"
msgstr ""

#: disnake.message.Message:1 of
msgid "Represents a message from Discord."
msgstr ""

#: disnake.message.Message:15 of
msgid "Returns the message's hash."
msgstr ""

#: disnake.message.Message:19 of
msgid ""
"Specifies if the message was done with text-to-speech. This can only be "
"accurately received in :func:`on_message` due to a disnake limitation."
msgstr ""

#: disnake.message.Message:27 of
msgid ""
"The type of message. In most cases this should not be checked, but it is "
"helpful in cases where it might be a system message for "
":attr:`system_content`."
msgstr ""

#: disnake.message.Message:30 of
msgid ":class:`MessageType`"
msgstr ""

#: disnake.message.Message:34 of
msgid ""
"A :class:`Member` that sent the message. If :attr:`channel` is a private "
"channel or the user has the left the guild, then it is a :class:`User` "
"instead."
msgstr ""

#: disnake.message.Message:37 of
msgid "Union[:class:`Member`, :class:`abc.User`]"
msgstr ""

#: disnake.message.Message:41 of
msgid "The actual contents of the message."
msgstr ""

#: disnake.message.Message:47 of
msgid ""
"The value used by the disnake guild and the client to verify that the "
"message is successfully sent. This is not stored long term within "
"Discord's servers and is only used ephemerally."
msgstr ""

#: disnake.message.Message:50 of
msgid "Optional[Union[:class:`str`, :class:`int`]]"
msgstr ""

#: disnake.message.Message:54 of
msgid "A list of embeds the message has."
msgstr ""

#: disnake.message.Message:56 of
msgid "List[:class:`Embed`]"
msgstr ""

#: disnake.message.Message:60 of
msgid ""
"The :class:`TextChannel` or :class:`Thread` that the message was sent "
"from. Could be a :class:`DMChannel` or :class:`GroupChannel` if it's a "
"private message."
msgstr ""

#: disnake.message.Message:63 of
msgid ""
"Union[:class:`TextChannel`, :class:`Thread`, :class:`DMChannel`, "
":class:`GroupChannel`, :class:`PartialMessageable`]"
msgstr ""

#: disnake.message.Message:67 of
msgid ""
"The message that this message references. This is only applicable to "
"messages of type :attr:`MessageType.pins_add`, crossposted messages "
"created by a followed channel integration, or message replies."
msgstr ""

#: disnake.message.Message:73 of
msgid "Optional[:class:`~disnake.MessageReference`]"
msgstr ""

#: disnake.message.Message:77 of
msgid ""
"The interaction that this message references. This exists only when the "
"message is a response to an interaction without an existing message."
msgstr ""

#: disnake.message.Message:82 of
msgid "Optional[:class:`~disnake.InteractionReference`]"
msgstr ""

#: disnake.message.Message:86 of
msgid "Specifies if the message mentions everyone."
msgstr ""

#: disnake.message.Message:90 of
msgid ""
"This does not check if the ``@everyone`` or the ``@here`` text is in the "
"message itself. Rather this boolean indicates if either the ``@everyone``"
" or the ``@here`` text is in the message **and** it did end up "
"mentioning."
msgstr ""

#: disnake.message.Message:98 of
msgid ""
"A list of :class:`Member` that were mentioned. If the message is in a "
"private message then the list will be of :class:`User` instead. For "
"messages that are not of type :attr:`MessageType.default`\\, this array "
"can be used to aid in system messages. For more information, see "
":attr:`system_content`."
msgstr ""

#: disnake.message.Message:105 of
msgid ""
"The order of the mentions list is not in any particular order so you "
"should not rely on it. This is a Discord limitation, not one with the "
"library."
msgstr ""

#: disnake.message.Message:108 of
msgid "List[:class:`abc.User`]"
msgstr ""

#: disnake.message.Message:112 of
msgid ""
"A list of :class:`abc.GuildChannel` that were mentioned. If the message "
"is in a private message then the list is always empty."
msgstr ""

#: disnake.CategoryChannel.channels:5 disnake.Guild.channels:3
#: disnake.message.Message:115 of
msgid "List[:class:`abc.GuildChannel`]"
msgstr ""

#: disnake.message.Message:119 of
msgid ""
"A list of :class:`Role` that were mentioned. If the message is in a "
"private message then the list is always empty."
msgstr ""

#: disnake.Emoji.roles:5 disnake.Guild.roles:6 disnake.Member.roles:7
#: disnake.guild.Guild.edit_role_positions:32
#: disnake.guild.Guild.fetch_roles:14 disnake.message.Message:122 of
msgid "List[:class:`Role`]"
msgstr ""

#: disnake.message.Message:126 disnake.message.PartialMessage:37 of
msgid "The message ID."
msgstr ""

#: disnake.message.Message:132 of
msgid ""
"If this message was sent by a webhook, then this is the webhook ID's that"
" sent this message."
msgstr ""

#: disnake.message.Message:139 of
msgid "A list of attachments given to a message."
msgstr ""

#: disnake.message.Message:141 of
msgid "List[:class:`Attachment`]"
msgstr ""

#: disnake.message.Message:145 of
msgid "Specifies if the message is currently pinned."
msgstr ""

#: disnake.message.Message:151 of
msgid "Extra features of the message."
msgstr ""

#: disnake.message.Message:155 of
msgid ":class:`MessageFlags`"
msgstr ""

#: disnake.message.Message:159 of
msgid ""
"Reactions to a message. Reactions can be either custom emoji or standard "
"unicode emoji."
msgstr ""

#: disnake.message.Message:161 of
msgid "List[:class:`Reaction`]"
msgstr ""

#: disnake.message.Message:165 of
msgid ""
"The activity associated with this message. Sent with Rich-Presence "
"related messages that for example, request joining, spectating, or "
"listening to or with another member."
msgstr ""

#: disnake.message.Message:168 of
msgid "It is a dictionary with the following optional keys:"
msgstr ""

#: disnake.message.Message:170 of
msgid ""
"``type``: An integer denoting the type of message activity being "
"requested."
msgstr ""

#: disnake.message.Message:171 of
msgid "``party_id``: The party ID associated with the party."
msgstr ""

#: disnake.message.Message:173 disnake.message.Message:187 of
msgid "Optional[:class:`dict`]"
msgstr ""

#: disnake.message.Message:177 of
msgid "The rich presence enabled application associated with this message."
msgstr ""

#: disnake.message.Message:179 of
msgid "It is a dictionary with the following keys:"
msgstr ""

#: disnake.message.Message:181 of
msgid "``id``: A string representing the application's ID."
msgstr ""

#: disnake.message.Message:182 of
msgid "``name``: A string representing the application's name."
msgstr ""

#: disnake.message.Message:183 of
msgid "``description``: A string representing the application's description."
msgstr ""

#: disnake.message.Message:184 of
msgid "``icon``: A string representing the icon ID of the application."
msgstr ""

#: disnake.message.Message:185 of
msgid "``cover_image``: A string representing the embed's image asset ID."
msgstr ""

#: disnake.message.Message:191 of
msgid "A list of sticker items given to the message."
msgstr ""

#: disnake.message.Message:195 of
msgid "List[:class:`StickerItem`]"
msgstr ""

#: disnake.message.Message:199 of
msgid "A list of components in the message."
msgstr ""

#: disnake.components.ActionRow:19 disnake.message.Message:203 of
msgid "List[:class:`Component`]"
msgstr ""

#: disnake.message.Message:207 of
msgid "The guild that the message belongs to, if applicable."
msgstr ""

#: ../../docstring disnake.Message.raw_mentions:1 of
msgid ""
"A property that returns an array of user IDs matched with the syntax of "
"``<@user_id>`` in the message content."
msgstr ""

#: ../../docstring disnake.Message.raw_mentions:4 of
msgid ""
"This allows you to receive the user IDs of mentioned users even in a "
"private message context."
msgstr ""

#: ../../docstring disnake.Message.raw_channel_mentions:4
#: disnake.Message.raw_mentions:7 disnake.Message.raw_role_mentions:4 of
msgid "List[:class:`int`]"
msgstr ""

#: ../../docstring disnake.Message.raw_channel_mentions:1 of
msgid ""
"A property that returns an array of channel IDs matched with the syntax "
"of ``<#channel_id>`` in the message content."
msgstr ""

#: ../../docstring disnake.Message.raw_role_mentions:1 of
msgid ""
"A property that returns an array of role IDs matched with the syntax of "
"``<@&role_id>`` in the message content."
msgstr ""

#: ../../docstring disnake.Message.clean_content:1 of
msgid ""
"A property that returns the content in a \"cleaned up\" manner. This "
"basically means that mentions are transformed into the way the client "
"shows it. e.g. ``<#id>`` will transform into ``#name``."
msgstr ""

#: ../../docstring disnake.Message.clean_content:6 of
msgid "This will also transform @everyone and @here mentions into non-mentions."
msgstr ""

#: ../../docstring disnake.Message.clean_content:11 of
msgid ""
"This *does not* affect markdown. If you want to escape or remove markdown"
" then use :func:`utils.escape_markdown` or :func:`utils.remove_markdown` "
"respectively, along with this function."
msgstr ""

#: disnake.Message.created_at:1 of
msgid "The message's creation time in UTC."
msgstr ""

#: disnake.Message.edited_at:1 of
msgid "An aware UTC datetime object containing the edited time of the message."
msgstr ""

#: disnake.Activity.end:3 disnake.Activity.start:3
#: disnake.BaseActivity.created_at:5 disnake.Game.end:3 disnake.Game.start:3
#: disnake.Message.edited_at:3 disnake.PartialEmoji.created_at:5
#: disnake.Spotify.created_at:5 disnake.invite.Invite:125
#: disnake.member.Member:30 disnake.member.Member:69
#: disnake.member.VoiceState:61 of
msgid "Optional[:class:`datetime.datetime`]"
msgstr ""

#: disnake.Message.jump_url:1 disnake.PartialMessage.jump_url:1 of
msgid "Returns a URL that allows the client to jump to this message."
msgstr ""

#: disnake.message.Message.is_system:1 of
msgid ":class:`bool`: Whether the message is a system message."
msgstr ""

#: disnake.message.Message.is_system:3 of
msgid ""
"A system message is a message that is constructed entirely by the Discord"
" API in response to something."
msgstr ""

#: ../../docstring disnake.Message.system_content:1 of
msgid ""
"A property that returns the content that is rendered regardless of the "
":attr:`Message.type`."
msgstr ""

#: ../../docstring disnake.Message.system_content:4 of
msgid ""
"In the case of :attr:`MessageType.default` and "
":attr:`MessageType.reply`\\, this just returns the regular "
":attr:`Message.content`. Otherwise this returns an English message "
"denoting the contents of the system message."
msgstr ""

#: disnake.message.Message.delete:5 of
msgid ""
"Your own messages could be deleted without any proper permissions. "
"However to delete other people's messages, you need the "
":attr:`~Permissions.manage_messages` permission."
msgstr ""

#: disnake.message.Message.delete:9 of
msgid "Added the new ``delay`` keyword-only parameter."
msgstr ""

#: disnake.message.Message.delete:12 of
msgid ""
"If provided, the number of seconds to wait in the background before "
"deleting the message. If the deletion fails then it is silently ignored."
msgstr ""

#: disnake.message.Message.delete:17 of
msgid "The message was deleted already"
msgstr ""

#: disnake.message.Message.edit:5 disnake.message.PartialMessage.edit:5 of
msgid ""
"The content must be able to be transformed into a string via "
"``str(content)``."
msgstr ""

#: disnake.message.Message.edit:7 of
msgid "The ``suppress`` keyword-only parameter was added."
msgstr ""

#: disnake.message.Message.edit:10 disnake.message.PartialMessage.edit:10 of
msgid ""
"The new content to replace the message with. Could be ``None`` to remove "
"the content."
msgstr ""

#: disnake.message.Message.edit:17 of
msgid ""
"The new embeds to replace the original with. Must be a maximum of 10. "
"This cannot be mixed with the ``embed`` parameter. To remove all embeds "
"``[]`` should be passed.  .. versionadded:: 2.0"
msgstr ""

#: disnake.message.Message.edit:23 disnake.message.PartialMessage.edit:23 of
msgid ""
"The file to upload. This cannot be mixed with ``files`` parameter. Files "
"will be appended to the message, see the ``attachments`` parameter to "
"remove/replace existing files.  .. versionadded:: 2.1"
msgstr ""

#: disnake.message.Message.edit:23 disnake.message.PartialMessage.edit:23 of
msgid ""
"The file to upload. This cannot be mixed with ``files`` parameter. Files "
"will be appended to the message, see the ``attachments`` parameter to "
"remove/replace existing files."
msgstr ""

#: disnake.message.Message.edit:29 disnake.message.PartialMessage.edit:29 of
msgid ""
"A list of files to upload. This cannot be mixed with the ``file`` "
"parameter. Files will be appended to the message, see the ``attachments``"
" parameter to remove/replace existing files.  .. versionadded:: 2.1"
msgstr ""

#: disnake.message.Message.edit:29 disnake.message.PartialMessage.edit:29 of
msgid ""
"A list of files to upload. This cannot be mixed with the ``file`` "
"parameter. Files will be appended to the message, see the ``attachments``"
" parameter to remove/replace existing files."
msgstr ""

#: disnake.message.Message.edit:38 disnake.message.PartialMessage.edit:40 of
msgid ""
"Whether to suppress embeds for the message. This removes all the embeds "
"if set to ``True``. If set to ``False`` this brings the embeds back if "
"they were suppressed. Using this parameter requires "
":attr:`~.Permissions.manage_messages`."
msgstr ""

#: disnake.message.Message.edit:43 disnake.message.PartialMessage.edit:45 of
msgid ""
"If provided, the number of seconds to wait in the background before "
"deleting the message we just edited. If the deletion fails, then it is "
"silently ignored."
msgstr ""

#: disnake.message.Message.edit:47 of
msgid ""
"Controls the mentions being processed in this message. If this is passed,"
" then the object is merged with :attr:`Client.allowed_mentions`. The "
"merging behaviour only overrides attributes that have been explicitly "
"passed to the object, otherwise it uses the attributes set in "
":attr:`Client.allowed_mentions`. If no object is passed at all then the "
"defaults given by :attr:`Client.allowed_mentions` are used instead.  .. "
"versionadded:: 1.4"
msgstr ""

#: disnake.message.Message.edit:47 of
msgid ""
"Controls the mentions being processed in this message. If this is passed,"
" then the object is merged with :attr:`Client.allowed_mentions`. The "
"merging behaviour only overrides attributes that have been explicitly "
"passed to the object, otherwise it uses the attributes set in "
":attr:`Client.allowed_mentions`. If no object is passed at all then the "
"defaults given by :attr:`Client.allowed_mentions` are used instead."
msgstr ""

#: disnake.message.Message.edit:61 disnake.message.PartialMessage.edit:66 of
msgid ""
"Tried to suppress a message without permissions or     edited a message's"
" content or embed that isn't yours."
msgstr ""

#: disnake.message.Message.edit:64 disnake.message.PartialMessage.edit:69 of
msgid "The message that was edited."
msgstr ""

#: ../../docstring disnake.Intents.dm_messages:15
#: disnake.Intents.guild_messages:15 disnake.Intents.messages:15
#: disnake.message.Message.edit:65 disnake.message.PartialMessage.edit:70
#: disnake.message.PartialMessage.fetch:10 disnake.reaction.Reaction:48 of
msgid ":class:`Message`"
msgstr ""

#: disnake.message.Message.publish:3 of
msgid "Publishes this message to your announcement channel."
msgstr ""

#: disnake.message.Message.publish:5 of
msgid ""
"You must have the :attr:`~Permissions.send_messages` permission to do "
"this."
msgstr ""

#: disnake.message.Message.publish:7 of
msgid ""
"If the message is not your own then the "
":attr:`~Permissions.manage_messages` permission is also needed."
msgstr ""

#: disnake.message.Message.publish:10 of
msgid "You do not have the proper permissions to publish this message."
msgstr ""

#: disnake.message.Message.publish:11 of
msgid "Publishing the message failed."
msgstr ""

#: disnake.message.Message.pin:3 of
msgid "Pins the message."
msgstr ""

#: disnake.message.Message.pin:5 disnake.message.Message.unpin:5 of
msgid ""
"You must have the :attr:`~Permissions.manage_messages` permission to do "
"this in a non-private channel context."
msgstr ""

#: disnake.message.Message.pin:8 of
msgid ""
"The reason for pinning the message. Shows up on the audit log.  .. "
"versionadded:: 1.4"
msgstr ""

#: disnake.message.Message.pin:8 of
msgid "The reason for pinning the message. Shows up on the audit log."
msgstr ""

#: disnake.message.Message.pin:13 of
msgid "You do not have permissions to pin the message."
msgstr ""

#: disnake.message.Message.pin:14 disnake.message.Message.unpin:14 of
msgid "The message or channel was not found or deleted."
msgstr ""

#: disnake.message.Message.pin:15 of
msgid ""
"Pinning the message failed, probably due to the channel     having more "
"than 50 pinned messages."
msgstr ""

#: disnake.message.Message.unpin:3 of
msgid "Unpins the message."
msgstr ""

#: disnake.message.Message.unpin:8 of
msgid ""
"The reason for unpinning the message. Shows up on the audit log.  .. "
"versionadded:: 1.4"
msgstr ""

#: disnake.message.Message.unpin:8 of
msgid "The reason for unpinning the message. Shows up on the audit log."
msgstr ""

#: disnake.message.Message.unpin:13 of
msgid "You do not have permissions to unpin the message."
msgstr ""

#: disnake.message.Message.unpin:15 of
msgid "Unpinning the message failed."
msgstr ""

#: disnake.message.Message.add_reaction:3 of
msgid "Add a reaction to the message."
msgstr ""

#: disnake.message.Message.add_reaction:5
#: disnake.message.Message.clear_reaction:5
#: disnake.message.Message.remove_reaction:5 of
msgid "The emoji may be a unicode emoji or a custom guild :class:`Emoji`."
msgstr ""

#: disnake.message.Message.add_reaction:7 of
msgid ""
"You must have the :attr:`~Permissions.read_message_history` permission to"
" use this. If nobody else has reacted to the message using this emoji, "
"the :attr:`~Permissions.add_reactions` permission is required."
msgstr ""

#: disnake.message.Message.add_reaction:11 of
msgid "The emoji to react with."
msgstr ""

#: disnake.message.Message.add_reaction:14 of
msgid "Adding the reaction failed."
msgstr ""

#: disnake.message.Message.add_reaction:15 of
msgid "You do not have the proper permissions to react to the message."
msgstr ""

#: disnake.message.Message.add_reaction:16
#: disnake.message.Message.clear_reaction:16 disnake.reaction.Reaction.clear:11
#: of
msgid "The emoji you specified was not found."
msgstr ""

#: disnake.message.Message.add_reaction:17
#: disnake.message.Message.clear_reaction:17
#: disnake.message.Message.remove_reaction:21
#: disnake.reaction.Reaction.clear:12 of
msgid "The emoji parameter is invalid."
msgstr ""

#: disnake.message.Message.remove_reaction:3 of
msgid "Remove a reaction by the member from the message."
msgstr ""

#: disnake.message.Message.remove_reaction:7 of
msgid ""
"If the reaction is not your own (i.e. ``member`` parameter is not you) "
"then the :attr:`~Permissions.manage_messages` permission is needed."
msgstr ""

#: disnake.message.Message.remove_reaction:10 of
msgid ""
"The ``member`` parameter must represent a member and meet the "
":class:`abc.Snowflake` abc."
msgstr ""

#: disnake.message.Message.remove_reaction:13 of
msgid "The emoji to remove."
msgstr ""

#: disnake.message.Message.remove_reaction:15 of
msgid "The member for which to remove the reaction."
msgstr ""

#: disnake.message.Message.remove_reaction:18
#: disnake.reaction.Reaction.remove:14 of
msgid "Removing the reaction failed."
msgstr ""

#: disnake.message.Message.remove_reaction:19
#: disnake.reaction.Reaction.remove:15 of
msgid "You do not have the proper permissions to remove the reaction."
msgstr ""

#: disnake.message.Message.remove_reaction:20 of
msgid "The member or emoji you specified was not found."
msgstr ""

#: disnake.message.Message.clear_reaction:3 of
msgid "Clears a specific reaction from the message."
msgstr ""

#: disnake.message.Message.clear_reaction:7
#: disnake.message.Message.clear_reactions:5 disnake.reaction.Reaction.clear:5
#: of
msgid "You need the :attr:`~Permissions.manage_messages` permission to use this."
msgstr ""

#: disnake.message.Message.clear_reaction:11 of
msgid "The emoji to clear."
msgstr ""

#: disnake.message.Message.clear_reaction:14 disnake.reaction.Reaction.clear:9
#: of
msgid "Clearing the reaction failed."
msgstr ""

#: disnake.message.Message.clear_reaction:15 disnake.reaction.Reaction.clear:10
#: of
msgid "You do not have the proper permissions to clear the reaction."
msgstr ""

#: disnake.message.Message.clear_reactions:3 of
msgid "Removes all the reactions from the message."
msgstr ""

#: disnake.message.Message.clear_reactions:7 of
msgid "Removing the reactions failed."
msgstr ""

#: disnake.message.Message.clear_reactions:8 of
msgid "You do not have the proper permissions to remove all the reactions."
msgstr ""

#: disnake.message.Message.create_thread:3 of
msgid "Creates a public thread from this message."
msgstr ""

#: disnake.message.Message.create_thread:5 of
msgid ""
"You must have :attr:`~disnake.Permissions.create_public_threads` in order"
" to create a public thread from a message."
msgstr ""

#: disnake.message.Message.create_thread:8 of
msgid "The channel this message belongs in must be a :class:`TextChannel`."
msgstr ""

#: disnake.channel.TextChannel.create_thread:10
#: disnake.message.Message.create_thread:12 of
msgid "The name of the thread."
msgstr ""

#: disnake.channel.TextChannel.create_thread:16
#: disnake.message.Message.create_thread:14 of
msgid ""
"The duration in minutes before a thread is automatically archived for "
"inactivity. If not provided, the channel's default auto archive duration "
"is used."
msgstr ""

#: disnake.channel.TextChannel.create_thread:26
#: disnake.message.Message.create_thread:18 of
msgid "You do not have permissions to create a thread."
msgstr ""

#: disnake.message.Message.create_thread:19 of
msgid "Creating the thread failed."
msgstr ""

#: disnake.message.Message.create_thread:20 of
msgid "This message does not have guild info attached."
msgstr ""

#: disnake.message.Message.create_thread:22 of
msgid "The created thread."
msgstr ""

#: disnake.message.Message.create_thread:23 of
msgid ":class:`.Thread`"
msgstr ""

#: disnake.message.Message.reply:3 of
msgid ""
"A shortcut method to :meth:`.abc.Messageable.send` to reply to the "
":class:`.Message`."
msgstr ""

#: disnake.message.Message.reply:10 of
msgid ""
"The ``files`` list is not of the appropriate size or     you specified "
"both ``file`` and ``files``."
msgstr ""

#: disnake.message.Message.reply:13 of
msgid ":class:`.Message`"
msgstr ""

#: disnake.message.Message.to_reference:1 of
msgid "Creates a :class:`~disnake.MessageReference` from the current message."
msgstr ""

#: disnake.message.Message.to_reference:5 of
msgid ""
"Whether replying using the message reference should raise "
":class:`HTTPException` if the message no longer exists or Discord could "
"not fetch the message.  .. versionadded:: 1.7"
msgstr ""

#: disnake.message.Message.to_reference:5 of
msgid ""
"Whether replying using the message reference should raise "
":class:`HTTPException` if the message no longer exists or Discord could "
"not fetch the message."
msgstr ""

#: disnake.message.Message.to_reference:11 of
msgid "The reference to this message."
msgstr ""

#: disnake.message.Message.to_reference:12 of
msgid ":class:`~disnake.MessageReference`"
msgstr ""

#: ../../api.rst:3546
msgid "ApplicationCommand"
msgstr ""

#: disnake.app_commands.ApplicationCommand:1 of
msgid "The base class for application commands"
msgstr ""

#: ../../api.rst:3554
msgid "SlashCommand"
msgstr ""

#: disnake.app_commands.SlashCommand:1 of
msgid "The base class for building slash commands."
msgstr ""

#: disnake.app_commands.SlashCommand:3 of
msgid "The command name"
msgstr ""

#: disnake.app_commands.SlashCommand:5 of
msgid "The command description (it'll be displayed by disnake)"
msgstr ""

#: disnake.app_commands.SlashCommand:7 of
msgid "The options of the command"
msgstr ""

#: disnake.app_commands.SlashCommand:9 of
msgid "Whether the command is enabled by default when the app is added to a guild"
msgstr ""

#: disnake.app_commands.Option.add_option:1
#: disnake.app_commands.SlashCommand.add_option:1 of
msgid ""
"Adds an option to the current list of options Parameters are the same as "
"for :class:`Option`"
msgstr ""

#: ../../api.rst:3562
msgid "UserCommand"
msgstr ""

#: ../../api.rst:3570
msgid "MessageCommand"
msgstr ""

#: ../../api.rst:3578 ../../api.rst:4229
msgid "Option"
msgstr ""

#: disnake.app_commands.Option:1 of
msgid "Represents a slash command option."
msgstr ""

#: disnake.app_commands.Option:3 of
msgid "option's name"
msgstr ""

#: disnake.app_commands.Option:5 of
msgid "option's description"
msgstr ""

#: disnake.app_commands.Option:7 of
msgid "the option type, e.g. :class:`OptionType.user`"
msgstr ""

#: disnake.app_commands.Option:9 of
msgid "whether this option is required or not"
msgstr ""

#: disnake.app_commands.Option:11 of
msgid "the list of option choices"
msgstr ""

#: disnake.app_commands.Option:13 of
msgid ""
"the list of sub options. Normally you don't have to specify it directly, "
"instead consider using ``@main_cmd.sub_command`` or "
"``@main_cmd.sub_command_group`` decorators."
msgstr ""

#: disnake.app_commands.Option:16 of
msgid ""
"the list of channel types that your option supports, if the type is "
":class:`OptionType.channel`. By default, it supports all channel types."
msgstr ""

#: disnake.app_commands.Option:19 of
msgid "whether this option can be autocompleted."
msgstr ""

#: disnake.app_commands.Option:21 of
msgid "the minimum value permitted"
msgstr ""

#: disnake.app_commands.Option:23 of
msgid "the maximum value permitted"
msgstr ""

#: disnake.app_commands.Option.add_choice:1 of
msgid ""
"Adds an OptionChoice to the list of current choices Parameters are the "
"same as for :class:`OptionChoice`"
msgstr ""

#: ../../api.rst:3586 ../../api.rst:4237
msgid "OptionChoice"
msgstr ""

#: disnake.app_commands.OptionChoice:1 of
msgid "Represents an option choice."
msgstr ""

#: disnake.app_commands.OptionChoice:3 of
msgid "the name of the option choice (visible to users)"
msgstr ""

#: disnake.app_commands.OptionChoice:5 of
msgid "the value of the option choice"
msgstr ""

#: ../../api.rst:3594
msgid "ApplicationCommandPermissions"
msgstr ""

#: disnake.app_commands.ApplicationCommandPermissions:1 of
msgid "Represents application command permissions for a role or a user."
msgstr ""

#: disnake.app_commands.ApplicationCommandPermissions:5 of
msgid "ID of a target"
msgstr ""

#: disnake.app_commands.ApplicationCommandPermissions:11 of
msgid "1 if target is a role; 2 if target is a user"
msgstr ""

#: disnake.app_commands.ApplicationCommandPermissions:17 of
msgid "Allow or deny the access to the command"
msgstr ""

#: ../../api.rst:3602
msgid "GuildApplicationCommandPermissions"
msgstr ""

#: disnake.app_commands.GuildApplicationCommandPermissions:1 of
msgid "Represents application command permissions in a guild."
msgstr ""

#: disnake.app_commands.GuildApplicationCommandPermissions:5 of
msgid "The ID of the corresponding command."
msgstr ""

#: disnake.app_commands.GuildApplicationCommandPermissions:11 of
msgid "The ID of your application."
msgstr ""

#: disnake.app_commands.GuildApplicationCommandPermissions:17 of
msgid "The ID of the guild where these permissions are applied."
msgstr ""

#: disnake.app_commands.GuildApplicationCommandPermissions:23 of
msgid "A list of :class:`ApplicationCommandPermissions`."
msgstr ""

#: disnake.app_commands.GuildApplicationCommandPermissions:25 of
msgid "List[:class:`ApplicationCommandPermissions`]"
msgstr ""

#: disnake.app_commands.GuildApplicationCommandPermissions.edit:1 of
msgid "Replaces current permissions with specified ones."
msgstr ""

#: ../../api.rst:3610
msgid "PartialGuildApplicationCommandPermissions"
msgstr ""

#: disnake.app_commands.PartialGuildApplicationCommandPermissions:1 of
msgid "Creates an object representing permissions of the application command."
msgstr ""

#: ../../api.rst:3618
msgid "UnresolvedGuildApplicationCommandPermissions"
msgstr ""

#: disnake.app_commands.UnresolvedGuildApplicationCommandPermissions:1 of
msgid ""
"Creates an object representing permissions of an application command, "
"without a specific command ID."
msgstr ""

#: disnake.app_commands.UnresolvedGuildApplicationCommandPermissions:10 of
msgid "Allow/deny the bot owner(s)."
msgstr ""

#: disnake.app_commands.UnresolvedGuildApplicationCommandPermissions.resolve:1
#: of
msgid ""
"Creates a new :class:`PartialGuildApplicationCommandPermissions` object, "
"combining the previously supplied permission values with the provided "
"command ID and owner IDs."
msgstr ""

#: disnake.app_commands.UnresolvedGuildApplicationCommandPermissions.resolve:5
#: of
msgid "the command ID to be used"
msgstr ""

#: disnake.app_commands.UnresolvedGuildApplicationCommandPermissions.resolve:7
#: of
msgid ""
"the owner IDs, used for extending the user ID mapping based on the "
"previously set ``owner`` permission if applicable"
msgstr ""

#: disnake.app_commands.UnresolvedGuildApplicationCommandPermissions.resolve:11
#: of
msgid ""
"A new permissions object based on this instance and the provided command "
"ID and owner IDs."
msgstr ""

#: disnake.app_commands.UnresolvedGuildApplicationCommandPermissions.resolve:13
#: of
msgid ":class:`PartialGuildApplicationCommandPermissions`"
msgstr ""

#: ../../api.rst:3626
msgid "Component"
msgstr ""

#: disnake.components.Component:1 of
msgid "Represents a Discord Bot UI Kit Component."
msgstr ""

#: disnake.components.Component:3 of
msgid "Currently, the only components supported by Discord are:"
msgstr ""

#: disnake.components.Component:5 of
msgid ":class:`ActionRow`"
msgstr ""

#: disnake.components.Component:6 of
msgid ":class:`Button`"
msgstr ""

#: disnake.components.Component:7 of
msgid ":class:`SelectMenu`"
msgstr ""

#: disnake.components.Component:9 of
msgid "This class is abstract and cannot be instantiated."
msgstr ""

#: disnake.components.ActionRow:11 disnake.components.Component:15 of
msgid "The type of component."
msgstr ""

#: disnake.components.ActionRow:13 disnake.components.Component:17
#: disnake.interactions.message.MessageInteractionData:15 of
msgid ":class:`ComponentType`"
msgstr ""

#: ../../api.rst:3634
msgid "ActionRow"
msgstr ""

#: disnake.components.ActionRow:1 of
msgid "Represents a Discord Bot UI Kit Action Row."
msgstr ""

#: disnake.components.ActionRow:3 of
msgid "This is a component that holds up to 5 children components in a row."
msgstr ""

#: disnake.components.ActionRow:5 disnake.components.Button:3 of
msgid "This inherits from :class:`Component`."
msgstr ""

#: disnake.components.ActionRow:17 of
msgid "The children components that this holds, if any."
msgstr ""

#: ../../api.rst:3642 ../../api.rst:4404
msgid "Button"
msgstr ""

#: disnake.components.Button:1 of
msgid "Represents a button from the Discord Bot UI Kit."
msgstr ""

#: disnake.components.Button:7 of
msgid ""
"The user constructible and usable type to create a button is "
":class:`disnake.ui.Button` not this one."
msgstr ""

#: disnake.components.Button:14 disnake.ui.Button.style:1
#: disnake.ui.button.Button:5 of
msgid "The style of the button."
msgstr ""

#: disnake.components.Button:16 of
msgid ":class:`.ButtonStyle`"
msgstr ""

#: disnake.components.Button:20 disnake.ui.button.Button:7 of
msgid ""
"The ID of the button that gets received during an interaction. If this "
"button is for a URL, it does not have a custom ID."
msgstr ""

#: disnake.components.Button:27 disnake.ui.Button.url:1
#: disnake.ui.button.Button:10 of
msgid "The URL this button sends you to."
msgstr ""

#: disnake.components.Button:33 disnake.ui.Button.disabled:1
#: disnake.ui.button.Button:12 of
msgid "Whether the button is disabled or not."
msgstr ""

#: disnake.components.Button:39 disnake.ui.button.Button:14
#: disnake.ui.button.button:15 of
msgid "The label of the button, if any."
msgstr ""

#: disnake.components.Button:45 disnake.ui.Button.emoji:1
#: disnake.ui.button.Button:16 of
msgid "The emoji of the button, if available."
msgstr ""

#: disnake.Role.emoji:5 disnake.activity.Activity:96
#: disnake.activity.CustomActivity:33 disnake.components.Button:47 of
msgid "Optional[:class:`PartialEmoji`]"
msgstr ""

#: ../../api.rst:3651
msgid "SelectMenu"
msgstr ""

#: disnake.components.SelectMenu:1 of
msgid "Represents a select menu from the Discord Bot UI Kit."
msgstr ""

#: disnake.components.SelectMenu:3 of
msgid ""
"A select menu is functionally the same as a dropdown, however on mobile "
"it renders a bit differently."
msgstr ""

#: disnake.components.SelectMenu:8 of
msgid ""
"The user constructible and usable type to create a select menu is "
":class:`disnake.ui.Select` not this one."
msgstr ""

#: disnake.components.SelectMenu:15 disnake.ui.Select.custom_id:1 of
msgid "The ID of the select menu that gets received during an interaction."
msgstr ""

#: disnake.components.SelectMenu:21 disnake.ui.Select.placeholder:1
#: disnake.ui.select.Select:12 disnake.ui.select.select:10 of
msgid "The placeholder text that is shown if nothing is selected, if any."
msgstr ""

#: disnake.components.SelectMenu:27 disnake.ui.select.Select:14
#: disnake.ui.select.select:21 of
msgid ""
"The minimum number of items that must be chosen for this select menu. "
"Defaults to 1 and must be between 1 and 25."
msgstr ""

#: disnake.components.SelectMenu:34 disnake.ui.select.Select:17
#: disnake.ui.select.select:24 of
msgid ""
"The maximum number of items that must be chosen for this select menu. "
"Defaults to 1 and must be between 1 and 25."
msgstr ""

#: disnake.components.SelectMenu:41 disnake.ui.Select.options:1
#: disnake.ui.select.Select:20 disnake.ui.select.select:27 of
msgid "A list of options that can be selected in this menu."
msgstr ""

#: disnake.components.SelectMenu:43 of
msgid "List[:class:`SelectOption`]"
msgstr ""

#: disnake.components.SelectMenu:47 disnake.ui.Select.disabled:1
#: disnake.ui.select.Select:22 of
msgid "Whether the select is disabled or not."
msgstr ""

#: ../../api.rst:3661
msgid "DeletedReferencedMessage"
msgstr ""

#: disnake.message.DeletedReferencedMessage:1 of
msgid ""
"A special sentinel type that denotes whether the resolved message "
"referenced message had since been deleted."
msgstr ""

#: disnake.message.DeletedReferencedMessage:4 of
msgid ""
"The purpose of this class is to separate referenced messages that could "
"not be fetched and those that were previously fetched but have since been"
" deleted."
msgstr ""

#: disnake.DeletedReferencedMessage.id:1 of
msgid "The message ID of the deleted referenced message."
msgstr ""

#: disnake.DeletedReferencedMessage.channel_id:1 of
msgid "The channel ID of the deleted referenced message."
msgstr ""

#: disnake.DeletedReferencedMessage.guild_id:1 of
msgid "The guild ID of the deleted referenced message."
msgstr ""

#: ../../api.rst:3670
msgid "Reaction"
msgstr ""

#: disnake.reaction.Reaction:1 of
msgid "Represents a reaction to a message."
msgstr ""

#: disnake.emoji.Emoji:3 disnake.invite.Invite:3 disnake.reaction.Reaction:3 of
msgid ""
"Depending on the way this object was created, some of the attributes can "
"have a value of ``None``."
msgstr ""

#: disnake.reaction.Reaction:10 of
msgid ""
"Checks if two reactions are equal. This works by checking if the emoji is"
" the same. So two messages with the same reaction will be considered "
"\"equal\"."
msgstr ""

#: disnake.reaction.Reaction:16 of
msgid "Checks if two reactions are not equal."
msgstr ""

#: disnake.reaction.Reaction:20 of
msgid "Returns the reaction's hash."
msgstr ""

#: disnake.reaction.Reaction:24 of
msgid "Returns the string form of the reaction's emoji."
msgstr ""

#: disnake.reaction.Reaction:28 of
msgid "The reaction emoji. May be a custom emoji, or a unicode emoji."
msgstr ""

#: disnake.reaction.Reaction:30 of
msgid "Union[:class:`Emoji`, :class:`PartialEmoji`, :class:`str`]"
msgstr ""

#: disnake.reaction.Reaction:34 of
msgid "Number of times this reaction was made"
msgstr ""

#: disnake.reaction.Reaction:40 of
msgid "If the user sent this reaction."
msgstr ""

#: disnake.reaction.Reaction:46 of
msgid "Message this reaction is for."
msgstr ""

#: disnake.reaction.Reaction.users:1 of
msgid ""
"Returns an :class:`AsyncIterator` representing the users that have "
"reacted to the message."
msgstr ""

#: disnake.reaction.Reaction.users:3 of
msgid ""
"The ``after`` parameter must represent a member and meet the "
":class:`abc.Snowflake` abc."
msgstr ""

#: disnake.reaction.Reaction.users:21 of
msgid ""
"The maximum number of results to return. If not provided, returns all the"
" users who reacted to the message."
msgstr ""

#: disnake.reaction.Reaction.users:25 of
msgid "For pagination, reactions are sorted by member."
msgstr ""

#: disnake.reaction.Reaction.users:28 of
msgid "Getting the users for the reaction failed."
msgstr ""

#: disnake.reaction.Reaction.users:30 of
msgid ""
"Union[:class:`User`, :class:`Member`] -- The member (if retrievable) or "
"the user that has reacted to this message. The case where it can be a "
":class:`Member` is in a guild message context. Sometimes it can be a "
":class:`User` if the member has left the guild."
msgstr ""

#: disnake.reaction.Reaction.is_custom_emoji:1 of
msgid ":class:`bool`: If this is a custom emoji."
msgstr ""

#: disnake.reaction.Reaction.remove:3 of
msgid "Remove the reaction by the provided :class:`User` from the message."
msgstr ""

#: disnake.reaction.Reaction.remove:5 of
msgid ""
"If the reaction is not your own (i.e. ``user`` parameter is not you) then"
" the :attr:`~Permissions.manage_messages` permission is needed."
msgstr ""

#: disnake.reaction.Reaction.remove:8 of
msgid ""
"The ``user`` parameter must represent a user or member and meet the "
":class:`abc.Snowflake` abc."
msgstr ""

#: disnake.reaction.Reaction.remove:11 of
msgid "The user or member from which to remove the reaction."
msgstr ""

#: disnake.reaction.Reaction.remove:16 of
msgid "The user you specified, or the reaction's message was not found."
msgstr ""

#: disnake.reaction.Reaction.clear:3 of
msgid "Clears this reaction from the message."
msgstr ""

#: ../../api.rst:3682
msgid "Guild"
msgstr ""

#: disnake.guild.Guild:1 of
msgid "Represents a Discord guild."
msgstr ""

#: disnake.guild.Guild:3 of
msgid "This is referred to as a \"server\" in the official Discord UI."
msgstr ""

#: disnake.guild.Guild:9 of
msgid "Checks if two guilds are equal."
msgstr ""

#: disnake.guild.Guild:13 of
msgid "Checks if two guilds are not equal."
msgstr ""

#: disnake.guild.Guild:17 of
msgid "Returns the guild's hash."
msgstr ""

#: disnake.guild.Guild:21 of
msgid "Returns the guild's name."
msgstr ""

#: disnake.guild.Guild:25 of
msgid "The guild name."
msgstr ""

#: disnake.guild.Guild:31 of
msgid "All emojis that the guild owns."
msgstr ""

#: disnake.guild.Guild:33 of
msgid "Tuple[:class:`Emoji`, ...]"
msgstr ""

#: disnake.guild.Guild:37 of
msgid "All stickers that the guild owns."
msgstr ""

#: disnake.guild.Guild:41 of
msgid "Tuple[:class:`GuildSticker`, ...]"
msgstr ""

#: disnake.guild.Guild:45 of
msgid ""
"The region the guild belongs on. There is a chance that the region will "
"be a :class:`str` if the value is not recognised by the enumerator."
msgstr ""

#: disnake.guild.Guild:52 of
msgid "The timeout to get sent to the AFK channel."
msgstr ""

#: disnake.guild.Guild:58 of
msgid "The channel that denotes the AFK channel. ``None`` if it doesn't exist."
msgstr ""

#: disnake.guild.Guild:60 of
msgid "Optional[:class:`VoiceChannel`]"
msgstr ""

#: disnake.guild.Guild:64 disnake.widget.Widget:19 of
msgid "The guild's ID."
msgstr ""

#: disnake.guild.Guild:70 of
msgid "The guild owner's ID. Use :attr:`Guild.owner` instead."
msgstr ""

#: disnake.guild.Guild:76 of
msgid ""
"Indicates if the guild is unavailable. If this is ``True`` then the "
"reliability of other attributes outside of :attr:`Guild.id` is slim and "
"they might all be ``None``. It is best to not do anything with the guild "
"if it is unavailable."
msgstr ""

#: disnake.guild.Guild:80 of
msgid ""
"Check the :func:`on_guild_unavailable` and :func:`on_guild_available` "
"events."
msgstr ""

#: disnake.guild.Guild:86 of
msgid "The maximum amount of presences for the guild."
msgstr ""

#: disnake.guild.Guild:92 of
msgid "The maximum amount of members for the guild."
msgstr ""

#: disnake.guild.Guild:96 of
msgid "This attribute is only available via :meth:`.Client.fetch_guild`."
msgstr ""

#: disnake.guild.Guild:102 of
msgid "The maximum amount of users in a video channel."
msgstr ""

#: disnake.guild.Guild:110 of
msgid "The guild's description."
msgstr ""

#: disnake.guild.Guild:116 of
msgid ""
"Indicates the guild's two factor authorisation level. If this value is 0 "
"then the guild does not require 2FA for their administrative members. If "
"the value is 1 then they do."
msgstr ""

#: disnake.guild.Guild:130 of
msgid "The guild's explicit content filter."
msgstr ""

#: disnake.guild.Guild:136 of
msgid "The guild's notification settings."
msgstr ""

#: disnake.guild.Guild:142 of
msgid ""
"A list of features that the guild has. The features that a guild can have"
" are subject to arbitrary change by Discord."
msgstr ""

#: disnake.guild.Guild:145 of
msgid "They are currently as follows:"
msgstr ""

#: disnake.guild.Guild:147 of
msgid "``ANIMATED_BANNER``: Guild can upload an animated banner."
msgstr ""

#: disnake.guild.Guild:148 of
msgid "``ANIMATED_ICON``: Guild can upload an animated icon."
msgstr ""

#: disnake.guild.Guild:149 of
msgid "``BANNER``: Guild can upload and use a banner. (i.e. :attr:`.banner`)"
msgstr ""

#: disnake.guild.Guild:150 of
msgid "``COMMERCE``: Guild can sell things using store channels."
msgstr ""

#: disnake.guild.Guild:151 of
msgid "``COMMUNITY``: Guild is a community server."
msgstr ""

#: disnake.guild.Guild:152 of
msgid "``DISCOVERABLE``: Guild shows up in Server Discovery."
msgstr ""

#: disnake.guild.Guild:153 of
msgid "``FEATURABLE``: Guild is able to be featured in Server Discovery."
msgstr ""

#: disnake.guild.Guild:154 of
msgid "``HAS_DIRECTORY_ENTRY``: Guild is listed in a student hub."
msgstr ""

#: disnake.guild.Guild:155 of
msgid "``HUB``: Guild is a student hub."
msgstr ""

#: disnake.guild.Guild:156 of
msgid "``INVITE_SPLASH``: Guild's invite page can have a special splash."
msgstr ""

#: disnake.guild.Guild:157 of
msgid ""
"``MEMBER_VERIFICATION_GATE_ENABLED``: Guild has Membership Screening "
"enabled."
msgstr ""

#: disnake.guild.Guild:158 of
msgid "``MONETIZATION_ENABLED``: Guild has enabled monetization."
msgstr ""

#: disnake.guild.Guild:159 of
msgid "``MORE_EMOJI``: Guild has increased custom emoji slots."
msgstr ""

#: disnake.guild.Guild:160 of
msgid "``MORE_STICKERS``: Guild has increased custom sticker slots."
msgstr ""

#: disnake.guild.Guild:161 of
msgid "``NEWS``: Guild can create news channels."
msgstr ""

#: disnake.guild.Guild:162 of
msgid "``PARTNERED``: Guild is a partnered server."
msgstr ""

#: disnake.guild.Guild:163 of
msgid ""
"``PREVIEW_ENABLED``: Guild can be viewed before being accepted via "
"Membership Screening."
msgstr ""

#: disnake.guild.Guild:164 of
msgid "``PRIVATE_THREADS``: Guild has access to create private threads."
msgstr ""

#: disnake.guild.Guild:165 of
msgid ""
"``SEVEN_DAY_THREAD_ARCHIVE``: Guild has access to the seven day archive "
"time for threads."
msgstr ""

#: disnake.guild.Guild:166 of
msgid ""
"``THREE_DAY_THREAD_ARCHIVE``: Guild has access to the three day archive "
"time for threads."
msgstr ""

#: disnake.guild.Guild:167 of
msgid "``TICKETED_EVENTS_ENABLED``: Guild has enabled ticketed events."
msgstr ""

#: disnake.guild.Guild:168 of
msgid ""
"``VANITY_URL``: Guild can have a vanity invite URL (e.g. discord.gg"
"/disnake-api)."
msgstr ""

#: disnake.guild.Guild:169 of
msgid "``VERIFIED``: Guild is a verified server."
msgstr ""

#: disnake.guild.Guild:170 of
msgid "``VIP_REGIONS``: Guild has VIP voice regions."
msgstr ""

#: disnake.guild.Guild:171 of
msgid "``WELCOME_SCREEN_ENABLED``: Guild has enabled the welcome screen."
msgstr ""

#: disnake.Spotify.artists:3 disnake.guild.Guild:173
#: disnake.invite.PartialInviteGuild:46 disnake.sticker.StandardSticker:53
#: disnake.ui.Select.values:3 of
msgid "List[:class:`str`]"
msgstr ""

#: disnake.guild.Guild:177 disnake.guild.Guild.edit:78 of
msgid "Whether the server boost progress bar is enabled."
msgstr ""

#: disnake.guild.Guild:183 of
msgid ""
"The premium tier for this guild. Corresponds to \"Nitro Server\" in the "
"official UI. The number goes from 0 to 3 inclusive."
msgstr ""

#: disnake.guild.Guild:190 of
msgid "The number of \"boosts\" this guild currently has."
msgstr ""

#: disnake.guild.Guild:196 of
msgid ""
"The preferred locale for the guild. Used when filtering Server Discovery "
"results to a specific language."
msgstr ""

#: disnake.guild.Guild:203 of
msgid "The guild's NSFW level."
msgstr ""

#: disnake.guild.Guild:207 of
msgid ":class:`NSFWLevel`"
msgstr ""

#: disnake.guild.Guild.fetch_members:1 of
msgid ""
"Retrieves an :class:`.AsyncIterator` that enables receiving the guild's "
"members. In order to use this, :meth:`Intents.members` must be enabled."
msgstr ""

#: disnake.guild.Guild.fetch_members:6 of
msgid ""
"This method is an API call. For general usage, consider :attr:`members` "
"instead."
msgstr ""

#: disnake.guild.Guild.fetch_members:12 of
msgid ""
"The number of members to retrieve. Defaults to 1000. Pass ``None`` to "
"fetch all members. Note that this is potentially slow."
msgstr ""

#: disnake.guild.Guild.fetch_members:15 of
msgid ""
"Retrieve members after this date or object. If a datetime is provided, it"
" is recommended to use a UTC aware datetime. If the datetime is naive, it"
" is assumed to be local time."
msgstr ""

#: disnake.guild.Guild.chunk:13 disnake.guild.Guild.fetch_members:20 of
msgid "The members intent is not enabled."
msgstr ""

#: disnake.guild.Guild.fetch_members:21 of
msgid "Getting the members failed."
msgstr ""

#: disnake.guild.Guild.fetch_members:23 of
msgid ":class:`.Member` -- The member with the member data parsed."
msgstr ""

#: disnake.guild.Guild.audit_logs:1 of
msgid ""
"Returns an :class:`AsyncIterator` that enables receiving the guild's "
"audit logs."
msgstr ""

#: disnake.guild.Guild.audit_logs:3 of
msgid ""
"You must have the :attr:`~Permissions.view_audit_log` permission to use "
"this."
msgstr ""

#: disnake.guild.Guild.audit_logs:7 of
msgid "Getting the first 100 entries: ::"
msgstr ""

#: disnake.guild.Guild.audit_logs:12 of
msgid "Getting entries for a specific action: ::"
msgstr ""

#: disnake.guild.Guild.audit_logs:17 of
msgid "Getting entries made by a specific user: ::"
msgstr ""

#: disnake.guild.Guild.audit_logs:22 of
msgid "The number of entries to retrieve. If ``None`` retrieve all entries."
msgstr ""

#: disnake.guild.Guild.audit_logs:24 of
msgid ""
"Retrieve entries before this date or entry. If a datetime is provided, it"
" is recommended to use a UTC aware datetime. If the datetime is naive, it"
" is assumed to be local time."
msgstr ""

#: disnake.guild.Guild.audit_logs:28 of
msgid ""
"Retrieve entries after this date or entry. If a datetime is provided, it "
"is recommended to use a UTC aware datetime. If the datetime is naive, it "
"is assumed to be local time."
msgstr ""

#: disnake.guild.Guild.audit_logs:32 of
msgid ""
"If set to ``True``, return entries in oldest->newest order. Defaults to "
"``True`` if ``after`` is specified, otherwise ``False``."
msgstr ""

#: disnake.guild.Guild.audit_logs:35 of
msgid "The moderator to filter entries from."
msgstr ""

#: disnake.guild.Guild.audit_logs:37 of
msgid "The action to filter with."
msgstr ""

#: disnake.guild.Guild.audit_logs:40 of
msgid "You are not allowed to fetch audit logs"
msgstr ""

#: disnake.guild.Guild.audit_logs:41 of
msgid "An error occurred while fetching the audit logs."
msgstr ""

#: disnake.guild.Guild.audit_logs:43 of
msgid ":class:`AuditLogEntry` -- The audit log entry."
msgstr ""

#: disnake.guild.Guild.get_command:1 of
msgid "Gets a cached application command matching the specified ID."
msgstr ""

#: disnake.guild.Guild.get_command:3 of
msgid "the ID to compare to."
msgstr ""

#: disnake.guild.Guild.get_command_named:1 of
msgid "Gets a cached application command matching the specified name."
msgstr ""

#: disnake.guild.Guild.get_command_named:3 of
msgid "the name to compare to."
msgstr ""

#: disnake.Guild.channels:1 of
msgid "A list of channels that belongs to this guild."
msgstr ""

#: disnake.Guild.threads:1 of
msgid "A list of threads that you have permission to view."
msgstr ""

#: disnake.Guild.threads:5 disnake.TextChannel.threads:5
#: disnake.guild.Guild.active_threads:12 of
msgid "List[:class:`Thread`]"
msgstr ""

#: disnake.Guild.large:1 of
msgid "Indicates if the guild is a 'large' guild."
msgstr ""

#: disnake.Guild.large:3 of
msgid ""
"A large guild is defined as having more than ``large_threshold`` count "
"members, which for this library is set to the maximum of 250."
msgstr ""

#: disnake.Guild.voice_channels:1 of
msgid "A list of voice channels that belongs to this guild."
msgstr ""

#: disnake.Guild.categories:3 disnake.Guild.stage_channels:5
#: disnake.Guild.text_channels:3 disnake.Guild.voice_channels:3 of
msgid "This is sorted by the position and are in UI order from top to bottom."
msgstr ""

#: disnake.CategoryChannel.voice_channels:3 disnake.Guild.voice_channels:5 of
msgid "List[:class:`VoiceChannel`]"
msgstr ""

#: disnake.Guild.stage_channels:1 of
msgid "A list of stage channels that belongs to this guild."
msgstr ""

#: disnake.CategoryChannel.stage_channels:5 disnake.Guild.stage_channels:7 of
msgid "List[:class:`StageChannel`]"
msgstr ""

#: disnake.Guild.me:1 of
msgid ""
"Similar to :attr:`Client.user` except an instance of :class:`Member`. "
"This is essentially used to get the member version of yourself."
msgstr ""

#: disnake.Guild.me:4 disnake.guild.Guild.fetch_member:16
#: disnake.guild.Guild.get_or_fetch_member:10 of
msgid ":class:`Member`"
msgstr ""

#: disnake.Guild.voice_client:1 of
msgid "Returns the :class:`VoiceProtocol` associated with this guild, if any."
msgstr ""

#: disnake.Guild.voice_client:3 of
msgid "Optional[:class:`VoiceProtocol`]"
msgstr ""

#: disnake.Guild.text_channels:1 of
msgid "A list of text channels that belongs to this guild."
msgstr ""

#: disnake.CategoryChannel.text_channels:3 disnake.Guild.text_channels:5 of
msgid "List[:class:`TextChannel`]"
msgstr ""

#: disnake.Guild.categories:1 of
msgid "A list of categories that belongs to this guild."
msgstr ""

#: disnake.Guild.categories:5 of
msgid "List[:class:`CategoryChannel`]"
msgstr ""

#: disnake.guild.Guild.by_category:1 of
msgid "Returns every :class:`CategoryChannel` and their associated channels."
msgstr ""

#: disnake.guild.Guild.by_category:3 of
msgid "These channels and categories are sorted in the official Discord UI order."
msgstr ""

#: disnake.guild.Guild.by_category:5 of
msgid ""
"If the channels do not have a category, then the first element of the "
"tuple is ``None``."
msgstr ""

#: disnake.guild.Guild.by_category:8 of
msgid "The categories and their associated channels."
msgstr ""

#: disnake.guild.Guild.by_category:9 of
msgid ""
"List[Tuple[Optional[:class:`CategoryChannel`], "
"List[:class:`abc.GuildChannel`]]]"
msgstr ""

#: disnake.guild.Guild.get_channel_or_thread:8 of
msgid "The returned channel or thread or ``None`` if not found."
msgstr ""

#: disnake.guild.Guild.get_channel_or_thread:9 of
msgid "Optional[Union[:class:`Thread`, :class:`.abc.GuildChannel`]]"
msgstr ""

#: disnake.guild.Guild.get_channel:1 of
msgid "Returns a channel with the given ID."
msgstr ""

#: disnake.guild.Guild.get_channel:5 of
msgid "This does *not* search for threads."
msgstr ""

#: disnake.guild.Guild.get_channel:11 of
msgid "Optional[:class:`.abc.GuildChannel`]"
msgstr ""

#: disnake.channel.TextChannel.get_thread:1 disnake.guild.Guild.get_thread:1 of
msgid "Returns a thread with the given ID."
msgstr ""

#: disnake.channel.TextChannel.get_thread:8 disnake.guild.Guild.get_thread:8 of
msgid "The returned thread or ``None`` if not found."
msgstr ""

#: disnake.channel.TextChannel.get_thread:9 disnake.guild.Guild.get_thread:9 of
msgid "Optional[:class:`Thread`]"
msgstr ""

#: disnake.Guild.system_channel:1 of
msgid "Returns the guild's channel used for system messages."
msgstr ""

#: disnake.Guild.public_updates_channel:5 disnake.Guild.rules_channel:4
#: disnake.Guild.system_channel:3 of
msgid "If no channel is set, then this returns ``None``."
msgstr ""

#: disnake.Guild.system_channel_flags:1 of
msgid "Returns the guild's system channel settings."
msgstr ""

#: disnake.Guild.system_channel_flags:3 of
msgid ":class:`SystemChannelFlags`"
msgstr ""

#: disnake.Guild.rules_channel:1 of
msgid ""
"Return's the guild's channel used for the rules. The guild must be a "
"Community guild."
msgstr ""

#: disnake.Guild.public_updates_channel:1 of
msgid ""
"Return's the guild's channel where admins and moderators of the guilds "
"receive notices from Discord. The guild must be a Community guild."
msgstr ""

#: disnake.Guild.emoji_limit:1 of
msgid "The maximum number of emoji slots this guild has."
msgstr ""

#: disnake.Guild.sticker_limit:1 of
msgid "The maximum number of sticker slots this guild has."
msgstr ""

#: disnake.Guild.bitrate_limit:1 of
msgid "The maximum bitrate for voice channels this guild can have."
msgstr ""

#: disnake.Guild.filesize_limit:1 of
msgid "The maximum number of bytes files can have when uploaded to this guild."
msgstr ""

#: disnake.Guild.members:1 of
msgid "A list of members that belong to this guild."
msgstr ""

#: disnake.Guild.members:3 disnake.Guild.premium_subscribers:3
#: disnake.Role.members:3 disnake.StageChannel.listeners:5
#: disnake.StageChannel.members:3 disnake.StageChannel.moderators:5
#: disnake.StageChannel.requesting_to_speak:3 disnake.StageChannel.speakers:5
#: disnake.TextChannel.members:3 disnake.VoiceChannel.members:3
#: disnake.guild.Guild.query_members:33 disnake.widget.Widget:47 of
msgid "List[:class:`Member`]"
msgstr ""

#: disnake.guild.Guild.get_member:1 of
msgid "Returns a member with the given ID."
msgstr ""

#: disnake.guild.Guild.get_member:6 of
msgid "The member or ``None`` if not found."
msgstr ""

#: disnake.Guild.owner:3 disnake.Thread.owner:3
#: disnake.guild.Guild.get_member:7 disnake.guild.Guild.get_member_named:20
#: disnake.raw_models.RawReactionActionEvent:40 of
msgid "Optional[:class:`Member`]"
msgstr ""

#: disnake.Guild.premium_subscribers:1 of
msgid "A list of members who have \"boosted\" this guild."
msgstr ""

#: disnake.Guild.roles:1 of
msgid "Returns a :class:`list` of the guild's roles in hierarchy order."
msgstr ""

#: disnake.Guild.roles:3 of
msgid "The first element of this list will be the lowest role in the hierarchy."
msgstr ""

#: disnake.guild.Guild.get_role:1 of
msgid "Returns a role with the given ID."
msgstr ""

#: disnake.guild.Guild.get_role:6 of
msgid "The role or ``None`` if not found."
msgstr ""

#: disnake.Guild.premium_subscriber_role:5 disnake.Guild.self_role:5
#: disnake.guild.Guild.get_role:7 disnake.member.Member.get_role:9 of
msgid "Optional[:class:`Role`]"
msgstr ""

#: disnake.Guild.default_role:1 of
msgid "Gets the @everyone role that all members have by default."
msgstr ""

#: disnake.Guild.default_role:3 disnake.Member.top_role:6
#: disnake.guild.Guild.create_role:38 disnake.role.Role.edit:41 of
msgid ":class:`Role`"
msgstr ""

#: disnake.Guild.premium_subscriber_role:1 of
msgid "Gets the premium subscriber role, AKA \"boost\" role, in this guild."
msgstr ""

#: disnake.Guild.self_role:1 of
msgid "Gets the role associated with this client's user, if any."
msgstr ""

#: disnake.Guild.stage_instances:1 of
msgid ""
"Returns a :class:`list` of the guild's stage instances that are currently"
" running."
msgstr ""

#: disnake.Guild.stage_instances:6 of
msgid "List[:class:`StageInstance`]"
msgstr ""

#: disnake.guild.Guild.get_stage_instance:1 of
msgid "Returns a stage instance with the given ID."
msgstr ""

#: disnake.guild.Guild.get_stage_instance:8 of
msgid "The stage instance or ``None`` if not found."
msgstr ""

#: disnake.StageChannel.instance:5 disnake.guild.Guild.get_stage_instance:9 of
msgid "Optional[:class:`StageInstance`]"
msgstr ""

#: disnake.Guild.owner:1 of
msgid "The member that owns the guild."
msgstr ""

#: disnake.Guild.icon:1 disnake.PartialInviteGuild.icon:1
#: disnake.PartialWebhookGuild.icon:1 of
msgid "Returns the guild's icon asset, if available."
msgstr ""

#: disnake.Guild.banner:1 disnake.PartialInviteGuild.banner:1 of
msgid "Returns the guild's banner asset, if available."
msgstr ""

#: disnake.Guild.splash:1 disnake.PartialInviteGuild.splash:1 of
msgid "Returns the guild's invite splash asset, if available."
msgstr ""

#: disnake.Guild.discovery_splash:1 of
msgid "Returns the guild's discovery splash asset, if available."
msgstr ""

#: disnake.Guild.member_count:1 of
msgid "Returns the true member count regardless of it being loaded fully or not."
msgstr ""

#: disnake.Guild.member_count:5 of
msgid ""
"Due to a Discord limitation, in order for this attribute to remain up-to-"
"date and accurate, it requires :attr:`Intents.members` to be specified."
msgstr ""

#: disnake.Guild.chunked:1 of
msgid "Returns a boolean indicating if the guild is \"chunked\"."
msgstr ""

#: disnake.Guild.chunked:3 of
msgid ""
"A chunked guild means that :attr:`member_count` is equal to the number of"
" members stored in the internal :attr:`members` cache."
msgstr ""

#: disnake.Guild.chunked:6 of
msgid ""
"If this value returns ``False``, then you should request for offline "
"members."
msgstr ""

#: disnake.Guild.shard_id:1 of
msgid "Returns the shard ID for this guild if applicable."
msgstr ""

#: disnake.Guild.created_at:1 disnake.PartialInviteGuild.created_at:1 of
msgid "Returns the guild's creation time in UTC."
msgstr ""

#: disnake.guild.Guild.get_member_named:1 of
msgid "Returns the first member found that matches the name provided."
msgstr ""

#: disnake.guild.Guild.get_member_named:3 of
msgid ""
"The name can have an optional discriminator argument, e.g. \"Jake#0001\" "
"or \"Jake\" will both do the lookup. However the former will give a more "
"precise result. Note that the discriminator must have all 4 digits for "
"this to work."
msgstr ""

#: disnake.guild.Guild.get_member_named:8 of
msgid ""
"If a nickname is passed, then it is looked up via the nickname. Note "
"however, that a nickname + discriminator combo will not lookup the "
"nickname but rather the username + discriminator combo due to nickname + "
"discriminator not being unique."
msgstr ""

#: disnake.guild.Guild.get_member_named:13 of
msgid "If no member is found, ``None`` is returned."
msgstr ""

#: disnake.guild.Guild.get_member_named:15 of
msgid "The name of the member to lookup with an optional discriminator."
msgstr ""

#: disnake.guild.Guild.get_member_named:18 of
msgid ""
"The member in this guild with the associated name. If not found then "
"``None`` is returned."
msgstr ""

#: disnake.guild.Guild.create_text_channel:3 of
msgid "Creates a :class:`TextChannel` for the guild."
msgstr ""

#: disnake.guild.Guild.create_text_channel:5 of
msgid ""
"Note that you need the :attr:`~Permissions.manage_channels` permission to"
" create the channel."
msgstr ""

#: disnake.guild.Guild.create_text_channel:8 of
msgid ""
"The ``overwrites`` parameter can be used to create a 'secret' channel "
"upon creation. This parameter expects a :class:`dict` of overwrites with "
"the target (either a :class:`Member` or a :class:`Role`) as the key and a"
" :class:`PermissionOverwrite` as the value."
msgstr ""

#: disnake.guild.Guild.create_text_channel:15 of
msgid ""
"Creating a channel of a specified position will not update the position "
"of other channels to follow suit. A follow-up call to "
":meth:`~TextChannel.edit` will be required to update the position of the "
"channel in the channel list."
msgstr ""

#: disnake.guild.Guild.create_text_channel:21 of
msgid "Creating a basic channel:"
msgstr ""

#: disnake.guild.Guild.create_text_channel:27 of
msgid "Creating a \"secret\" channel:"
msgstr ""

#: disnake.guild.Guild.create_stage_channel:7
#: disnake.guild.Guild.create_text_channel:38
#: disnake.guild.Guild.create_voice_channel:5 disnake.widget.WidgetChannel:29
#: of
msgid "The channel's name."
msgstr ""

#: disnake.guild.Guild.create_stage_channel:11
#: disnake.guild.Guild.create_text_channel:40
#: disnake.guild.Guild.create_voice_channel:7 of
msgid ""
"A :class:`dict` of target (either a role or a member) to "
":class:`PermissionOverwrite` to apply upon creation of a channel. Useful "
"for creating secret channels."
msgstr ""

#: disnake.guild.Guild.create_stage_channel:15
#: disnake.guild.Guild.create_text_channel:44
#: disnake.guild.Guild.create_voice_channel:11 of
msgid ""
"The category to place the newly created channel under. The permissions "
"will be automatically synced to category if no overwrites are provided."
msgstr ""

#: disnake.channel.TextChannel.edit:19
#: disnake.guild.Guild.create_stage_channel:9
#: disnake.guild.Guild.create_text_channel:51 of
msgid "The new channel's topic."
msgstr ""

#: disnake.guild.Guild.create_text_channel:53 of
msgid ""
"Specifies the slowmode rate limit for user in this channel, in seconds. "
"The maximum value possible is `21600`."
msgstr ""

#: disnake.channel.StoreChannel.edit:15 disnake.channel.TextChannel.edit:23
#: disnake.guild.Guild.create_text_channel:56 of
msgid "To mark the channel as NSFW or not."
msgstr ""

#: disnake.guild.Guild.create_stage_channel:22
#: disnake.guild.Guild.create_text_channel:58
#: disnake.guild.Guild.create_voice_channel:31 of
msgid "The reason for creating this channel. Shows up on the audit log."
msgstr ""

#: disnake.guild.Guild.create_category:12
#: disnake.guild.Guild.create_stage_channel:27
#: disnake.guild.Guild.create_text_channel:63
#: disnake.guild.Guild.create_voice_channel:36 of
msgid "The permission overwrite information is not in proper form."
msgstr ""

#: disnake.channel.CategoryChannel.create_stage_channel:7
#: disnake.channel.CategoryChannel.create_text_channel:5
#: disnake.channel.CategoryChannel.create_voice_channel:5
#: disnake.guild.Guild.create_category:14
#: disnake.guild.Guild.create_stage_channel:29
#: disnake.guild.Guild.create_text_channel:65
#: disnake.guild.Guild.create_voice_channel:38 of
msgid "The channel that was just created."
msgstr ""

#: disnake.channel.CategoryChannel.create_text_channel:6
#: disnake.guild.Guild.create_text_channel:66 of
msgid ":class:`TextChannel`"
msgstr ""

#: disnake.guild.Guild.create_voice_channel:3 of
msgid ""
"This is similar to :meth:`create_text_channel` except makes a "
":class:`VoiceChannel` instead."
msgstr ""

#: disnake.channel.StageChannel:62 disnake.channel.VoiceChannel:54
#: disnake.guild.Guild.create_voice_channel:18 of
msgid "The channel's preferred audio bitrate in bits per second."
msgstr ""

#: disnake.channel.VoiceChannel:60 disnake.guild.Guild.create_voice_channel:20
#: of
msgid "The channel's limit for number of members that can be in a voice channel."
msgstr ""

#: disnake.guild.Guild.create_voice_channel:22 of
msgid ""
"The region for the voice channel's voice communication. A value of "
"``None`` indicates automatic voice region detection.  .. versionadded:: "
"1.7"
msgstr ""

#: disnake.channel.VoiceChannel:66 disnake.guild.Guild.create_voice_channel:22
#: of
msgid ""
"The region for the voice channel's voice communication. A value of "
"``None`` indicates automatic voice region detection."
msgstr ""

#: disnake.channel.VoiceChannel.edit:38
#: disnake.guild.Guild.create_voice_channel:27 of
msgid ""
"The camera video quality for the voice channel's participants.  .. "
"versionadded:: 2.0"
msgstr ""

#: disnake.channel.CategoryChannel.create_voice_channel:6
#: disnake.guild.Guild.create_voice_channel:39 of
msgid ":class:`VoiceChannel`"
msgstr ""

#: disnake.guild.Guild.create_stage_channel:3 of
msgid ""
"This is similar to :meth:`create_text_channel` except makes a "
":class:`StageChannel` instead."
msgstr ""

#: disnake.channel.CategoryChannel.create_stage_channel:8
#: disnake.guild.Guild.create_stage_channel:30 of
msgid ":class:`StageChannel`"
msgstr ""

#: disnake.guild.Guild.create_category:3 of
msgid ""
"Same as :meth:`create_text_channel` except makes a "
":class:`CategoryChannel` instead."
msgstr ""

#: disnake.guild.Guild.create_category:7 of
msgid ""
"The ``category`` parameter is not supported in this function since "
"categories cannot have categories."
msgstr ""

#: disnake.guild.Guild.create_category:15 of
msgid ":class:`CategoryChannel`"
msgstr ""

#: disnake.guild.Guild.leave:3 of
msgid "Leaves the guild."
msgstr ""

#: disnake.guild.Guild.leave:7 of
msgid ""
"You cannot leave the guild that you own, you must delete it instead via "
":meth:`delete`."
msgstr ""

#: disnake.guild.Guild.leave:10 of
msgid "Leaving the guild failed."
msgstr ""

#: disnake.guild.Guild.delete:3 of
msgid "Deletes the guild. You must be the guild owner to delete the guild."
msgstr ""

#: disnake.guild.Guild.delete:6 of
msgid "Deleting the guild failed."
msgstr ""

#: disnake.guild.Guild.delete:7 of
msgid "You do not have permissions to delete the guild."
msgstr ""

#: disnake.guild.Guild.edit:3 of
msgid "Edits the guild."
msgstr ""

#: disnake.guild.Guild.edit:5 of
msgid ""
"You must have the :attr:`~Permissions.manage_guild` permission to edit "
"the guild."
msgstr ""

#: disnake.guild.Guild.edit:8 of
msgid ""
"The `rules_channel` and `public_updates_channel` keyword-only parameters "
"were added."
msgstr ""

#: disnake.guild.Guild.edit:11 of
msgid "The `discovery_splash` and `community` keyword-only parameters were added."
msgstr ""

#: disnake.guild.Guild.edit:14 of
msgid "The newly updated guild is returned."
msgstr ""

#: disnake.guild.Guild.edit:17 of
msgid "The new name of the guild."
msgstr ""

#: disnake.guild.Guild.edit:19 of
msgid ""
"The new description of the guild. Could be ``None`` for no description. "
"This is only available to guilds that contain ``PUBLIC`` in "
":attr:`Guild.features`."
msgstr ""

#: disnake.guild.Guild.edit:22 of
msgid ""
"A :term:`py:bytes-like object` representing the icon. Only PNG/JPEG is "
"supported. GIF is only available to guilds that contain ``ANIMATED_ICON``"
" in :attr:`Guild.features`. Could be ``None`` to denote removal of the "
"icon."
msgstr ""

#: disnake.guild.Guild.edit:26 of
msgid ""
"A :term:`py:bytes-like object` representing the banner. GIF is only "
"available to guilds that contain ``ANIMATED_BANNER`` in "
":attr:`Guild.features`. Could be ``None`` to denote removal of the "
"banner. This is only available to guilds that contain ``BANNER`` in "
":attr:`Guild.features`."
msgstr ""

#: disnake.guild.Guild.edit:31 of
msgid ""
"A :term:`py:bytes-like object` representing the invite splash. Only "
"PNG/JPEG supported. Could be ``None`` to denote removing the splash. This"
" is only available to guilds that contain ``INVITE_SPLASH`` in "
":attr:`Guild.features`."
msgstr ""

#: disnake.guild.Guild.edit:36 of
msgid ""
"A :term:`py:bytes-like object` representing the discovery splash. Only "
"PNG/JPEG supported. Could be ``None`` to denote removing the splash. This"
" is only available to guilds that contain ``DISCOVERABLE`` in "
":attr:`Guild.features`."
msgstr ""

#: disnake.guild.Guild.edit:41 of
msgid ""
"Whether the guild should be a Community guild. If set to ``True``\\, both"
" ``rules_channel`` and ``public_updates_channel`` parameters are "
"required."
msgstr ""

#: disnake.guild.Guild.edit:44 of
msgid "The new region for the guild's voice communication."
msgstr ""

#: disnake.guild.Guild.edit:46 of
msgid ""
"The new channel that is the AFK channel. Could be ``None`` for no AFK "
"channel."
msgstr ""

#: disnake.guild.Guild.edit:48 of
msgid "The number of seconds until someone is moved to the AFK channel."
msgstr ""

#: disnake.guild.Guild.edit:50 of
msgid ""
"The new owner of the guild to transfer ownership to. Note that you must "
"be owner of the guild to do this."
msgstr ""

#: disnake.guild.Guild.edit:53 of
msgid "The new verification level for the guild."
msgstr ""

#: disnake.guild.Guild.edit:55 of
msgid "The new default notification level for the guild."
msgstr ""

#: disnake.guild.Guild.edit:57 of
msgid "The new explicit content filter for the guild."
msgstr ""

#: disnake.guild.Guild.edit:59 of
msgid "The new vanity code for the guild."
msgstr ""

#: disnake.guild.Guild.edit:61 of
msgid ""
"The new channel that is used for the system channel. Could be ``None`` "
"for no system channel."
msgstr ""

#: disnake.guild.Guild.edit:63 of
msgid "The new system channel settings to use with the new system channel."
msgstr ""

#: disnake.guild.Guild.edit:65 of
msgid ""
"The new preferred locale for the guild. Used as the primary language in "
"the guild. If set, this must be an ISO 639 code, e.g. ``en-US`` or ``ja``"
" or ``zh-CN``."
msgstr ""

#: disnake.guild.Guild.edit:68 of
msgid ""
"The new channel that is used for rules. This is only available to guilds "
"that contain ``PUBLIC`` in :attr:`Guild.features`. Could be ``None`` for "
"no rules channel."
msgstr ""

#: disnake.guild.Guild.edit:72 of
msgid ""
"The new channel that is used for public updates from Discord. This is "
"only available to guilds that contain ``PUBLIC`` in "
":attr:`Guild.features`. Could be ``None`` for no public updates channel."
msgstr ""

#: disnake.guild.Guild.edit:76 of
msgid "The reason for editing this guild. Shows up on the audit log."
msgstr ""

#: disnake.guild.Guild.edit:81 of
msgid "You do not have permissions to edit the guild."
msgstr ""

#: disnake.guild.Guild.edit:82 disnake.integrations.StreamIntegration.edit:16
#: of
msgid "Editing the guild failed."
msgstr ""

#: disnake.guild.Guild.edit:83 of
msgid ""
"The image format passed in to ``icon`` is invalid. It must be     PNG or "
"JPG. This is also raised if you are not the owner of the     guild and "
"request an ownership transfer."
msgstr ""

#: disnake.guild.Guild.edit:85 of
msgid ""
"The newly updated guild. Note that this has the same limitations as "
"mentioned in :meth:`Client.fetch_guild` and may not have full data."
msgstr ""

#: disnake.Emoji.guild:3 disnake.channel.CategoryChannel:33
#: disnake.channel.StageChannel:33 disnake.channel.StoreChannel:31
#: disnake.channel.TextChannel:31 disnake.channel.VoiceChannel:31
#: disnake.guild.Guild.edit:87 disnake.integrations.BotIntegration:21
#: disnake.integrations.Integration:21
#: disnake.integrations.StreamIntegration:21 disnake.member.Member:48
#: disnake.role.Role:53 disnake.stage_instance.StageInstance:29
#: disnake.template.Template:52 disnake.threads.Thread:33 of
msgid ":class:`Guild`"
msgstr ""

#: disnake.guild.Guild.fetch_channels:3 of
msgid "Retrieves all :class:`abc.GuildChannel` that the guild has."
msgstr ""

#: disnake.guild.Guild.fetch_channels:7 of
msgid ""
"This method is an API call. For general usage, consider :attr:`channels` "
"instead."
msgstr ""

#: disnake.guild.Guild.fetch_channels:12 of
msgid "Retrieving the channels failed."
msgstr ""

#: disnake.guild.Guild.fetch_channels:14 of
msgid "All channels in the guild."
msgstr ""

#: disnake.guild.Guild.fetch_channels:15 of
msgid "Sequence[:class:`abc.GuildChannel`]"
msgstr ""

#: disnake.guild.Guild.active_threads:3 of
msgid "Returns a list of active :class:`Thread` that the client can access."
msgstr ""

#: disnake.guild.Guild.active_threads:5 of
msgid "This includes both private and public threads."
msgstr ""

#: disnake.guild.Guild.active_threads:9 of
msgid "The request to get the active threads failed."
msgstr ""

#: disnake.guild.Guild.active_threads:11 of
msgid "The active threads"
msgstr ""

#: disnake.guild.Guild.fetch_member:3 of
msgid "Retrieves a :class:`Member` from a guild ID, and a member ID."
msgstr ""

#: disnake.guild.Guild.fetch_member:7 of
msgid ""
"This method is an API call. If you have :attr:`Intents.members` and "
"member cache enabled, consider :meth:`get_member` instead."
msgstr ""

#: disnake.guild.Guild.fetch_member:9 of
msgid "The member's ID to fetch from."
msgstr ""

#: disnake.guild.Guild.fetch_member:13 of
msgid "Fetching the member failed."
msgstr ""

#: disnake.guild.Guild.fetch_member:15 of
msgid "The member from the member ID."
msgstr ""

#: disnake.guild.Guild.fetch_ban:3 of
msgid "Retrieves the :class:`BanEntry` for a user."
msgstr ""

#: disnake.guild.Guild.bans:5 disnake.guild.Guild.fetch_ban:5 of
msgid ""
"You must have the :attr:`~Permissions.ban_members` permission to get this"
" information."
msgstr ""

#: disnake.guild.Guild.fetch_ban:8 of
msgid "The user to get ban information from."
msgstr ""

#: disnake.guild.Guild.fetch_ban:12 of
msgid "This user is not banned."
msgstr ""

#: disnake.guild.Guild.fetch_ban:15 of
msgid "The :class:`BanEntry` object for the specified user."
msgstr ""

#: disnake.guild.Guild.fetch_ban:16 of
msgid ":class:`BanEntry`"
msgstr ""

#: disnake.guild.Guild.fetch_channel:3 of
msgid ""
"Retrieves a :class:`.abc.GuildChannel` or :class:`.Thread` with the "
"specified ID."
msgstr ""

#: disnake.guild.Guild.fetch_channel:7 of
msgid ""
"This method is an API call. For general usage, consider "
":meth:`get_channel_or_thread` instead."
msgstr ""

#: disnake.guild.Guild.fetch_channel:11 of
msgid ""
"An unknown channel type was received from Discord     or the guild the "
"channel belongs to is not the same     as the one in this object points "
"to."
msgstr ""

#: disnake.guild.Guild.fetch_channel:17 of
msgid "Union[:class:`.abc.GuildChannel`, :class:`.Thread`]"
msgstr ""

#: disnake.guild.Guild.bans:3 of
msgid ""
"Retrieves all the users that are banned from the guild as a :class:`list`"
" of :class:`BanEntry`."
msgstr ""

#: disnake.guild.Guild.bans:11 of
msgid "A list of :class:`BanEntry` objects."
msgstr ""

#: disnake.guild.Guild.bans:12 of
msgid "List[:class:`BanEntry`]"
msgstr ""

#: disnake.guild.Guild.prune_members:3 of
msgid "Prunes the guild from its inactive members."
msgstr ""

#: disnake.guild.Guild.prune_members:5 of
msgid ""
"The inactive members are denoted if they have not logged on in ``days`` "
"number of days and they have no roles."
msgstr ""

#: disnake.guild.Guild.prune_members:8 of
msgid ""
"You must have the :attr:`~Permissions.kick_members` permission to use "
"this."
msgstr ""

#: disnake.guild.Guild.prune_members:11 of
msgid ""
"To check how many members you would prune without actually pruning, see "
"the :meth:`estimate_pruned_members` function."
msgstr ""

#: disnake.guild.Guild.prune_members:14 of
msgid "To prune members that have specific roles see the ``roles`` parameter."
msgstr ""

#: disnake.guild.Guild.prune_members:16 of
msgid "The ``roles`` keyword-only parameter was added."
msgstr ""

#: disnake.guild.Guild.estimate_pruned_members:7
#: disnake.guild.Guild.prune_members:19 of
msgid "The number of days before counting as inactive."
msgstr ""

#: disnake.guild.Guild.prune_members:23 of
msgid ""
"Whether to compute the prune count. This defaults to ``True`` which makes"
" it prone to timeouts in very large guilds. In order to prevent timeouts,"
" you must set this to ``False``. If this is set to ``False``\\, then this"
" function will always return ``None``."
msgstr ""

#: disnake.guild.Guild.prune_members:28 of
msgid ""
"A list of :class:`abc.Snowflake` that represent roles to include in the "
"pruning process. If a member has a role that is not specified, they'll be"
" excluded."
msgstr ""

#: disnake.guild.Guild.estimate_pruned_members:15
#: disnake.guild.Guild.prune_members:32 of
msgid "You do not have permissions to prune members."
msgstr ""

#: disnake.guild.Guild.prune_members:33 of
msgid "An error occurred while pruning members."
msgstr ""

#: disnake.guild.Guild.estimate_pruned_members:17
#: disnake.guild.Guild.prune_members:34 of
msgid "An integer was not passed for ``days``."
msgstr ""

#: disnake.guild.Guild.prune_members:36 of
msgid ""
"The number of members pruned. If ``compute_prune_count`` is ``False`` "
"then this returns ``None``."
msgstr ""

#: disnake.guild.Guild.templates:3 of
msgid "Gets the list of templates from this guild."
msgstr ""

#: disnake.guild.Guild.templates:5 of
msgid "Requires :attr:`~.Permissions.manage_guild` permissions."
msgstr ""

#: disnake.guild.Guild.templates:9 of
msgid "You don't have permissions to get the templates."
msgstr ""

#: disnake.guild.Guild.templates:11 of
msgid "The templates for this guild."
msgstr ""

#: disnake.guild.Guild.templates:12 of
msgid "List[:class:`Template`]"
msgstr ""

#: disnake.guild.Guild.webhooks:3 of
msgid "Gets the list of webhooks from this guild."
msgstr ""

#: disnake.channel.TextChannel.create_webhook:5
#: disnake.channel.TextChannel.webhooks:5 disnake.guild.Guild.webhooks:5 of
msgid "Requires :attr:`~.Permissions.manage_webhooks` permissions."
msgstr ""

#: disnake.channel.TextChannel.webhooks:7 disnake.guild.Guild.webhooks:7 of
msgid "You don't have permissions to get the webhooks."
msgstr ""

#: disnake.guild.Guild.webhooks:9 of
msgid "The webhooks for this guild."
msgstr ""

#: disnake.channel.TextChannel.webhooks:10 disnake.guild.Guild.webhooks:10 of
msgid "List[:class:`Webhook`]"
msgstr ""

#: disnake.guild.Guild.estimate_pruned_members:3 of
msgid ""
"Similar to :meth:`prune_members` except instead of actually pruning "
"members, it returns how many members it would prune from the guild had it"
" been called."
msgstr ""

#: disnake.guild.Guild.estimate_pruned_members:9 of
msgid ""
"A list of :class:`abc.Snowflake` that represent roles to include in the "
"estimate. If a member has a role that is not specified, they'll be "
"excluded.  .. versionadded:: 1.7"
msgstr ""

#: disnake.guild.Guild.estimate_pruned_members:9 of
msgid ""
"A list of :class:`abc.Snowflake` that represent roles to include in the "
"estimate. If a member has a role that is not specified, they'll be "
"excluded."
msgstr ""

#: disnake.guild.Guild.estimate_pruned_members:16 of
msgid "An error occurred while fetching the prune members estimate."
msgstr ""

#: disnake.guild.Guild.estimate_pruned_members:19 of
msgid "The number of members estimated to be pruned."
msgstr ""

#: disnake.guild.Guild.invites:3 of
msgid "Returns a list of all active instant invites from the guild."
msgstr ""

#: disnake.guild.Guild.invites:5 of
msgid ""
"You must have the :attr:`~Permissions.manage_guild` permission to get "
"this information."
msgstr ""

#: disnake.guild.Guild.invites:12 of
msgid "List[:class:`Invite`]"
msgstr ""

#: disnake.guild.Guild.create_template:3 of
msgid "Creates a template for the guild."
msgstr ""

#: disnake.guild.Guild.create_integration:5
#: disnake.guild.Guild.create_template:5 disnake.guild.Guild.integrations:5
#: disnake.integrations.Integration.delete:5
#: disnake.integrations.StreamIntegration.edit:5
#: disnake.integrations.StreamIntegration.sync:5 of
msgid "You must have the :attr:`~Permissions.manage_guild` permission to do this."
msgstr ""

#: disnake.guild.Guild.create_template:10 disnake.template.Template:19 of
msgid "The name of the template."
msgstr ""

#: disnake.guild.Guild.create_template:12 disnake.template.Template:25 of
msgid "The description of the template."
msgstr ""

#: disnake.guild.Guild.create_integration:3 of
msgid "Attaches an integration to the guild."
msgstr ""

#: disnake.guild.Guild.create_integration:10 of
msgid "The integration type (e.g. Twitch)."
msgstr ""

#: disnake.guild.Guild.create_integration:12
#: disnake.integrations.BotIntegration:7 disnake.integrations.Integration:7
#: disnake.integrations.StreamIntegration:7 of
msgid "The integration ID."
msgstr ""

#: disnake.guild.Guild.create_integration:15
#: disnake.guild.Guild.integrations:10 of
msgid "You do not have permission to create the integration."
msgstr ""

#: disnake.guild.Guild.create_integration:16 of
msgid "The account could not be found."
msgstr ""

#: disnake.guild.Guild.integrations:3 of
msgid "Returns a list of all integrations attached to the guild."
msgstr ""

#: disnake.guild.Guild.integrations:11 of
msgid "Fetching the integrations failed."
msgstr ""

#: disnake.guild.Guild.integrations:13 of
msgid "The list of integrations that are attached to the guild."
msgstr ""

#: disnake.guild.Guild.integrations:14 of
msgid "List[:class:`Integration`]"
msgstr ""

#: disnake.guild.Guild.fetch_stickers:3 of
msgid "Retrieves a list of all :class:`Sticker`\\s for the guild."
msgstr ""

#: disnake.guild.Guild.fetch_stickers:9 of
msgid ""
"This method is an API call. For general usage, consider :attr:`stickers` "
"instead."
msgstr ""

#: disnake.guild.Guild.fetch_stickers:11 of
msgid "An error occurred fetching the stickers."
msgstr ""

#: disnake.guild.Guild.fetch_stickers:13 of
msgid "The retrieved stickers."
msgstr ""

#: disnake.guild.Guild.fetch_stickers:14 of
msgid "List[:class:`GuildSticker`]"
msgstr ""

#: disnake.guild.Guild.fetch_sticker:3 of
msgid "Retrieves a custom :class:`Sticker` from the guild."
msgstr ""

#: disnake.guild.Guild.fetch_sticker:9 of
msgid ""
"This method is an API call. For general usage, consider iterating over "
":attr:`stickers` instead."
msgstr ""

#: disnake.guild.Guild.fetch_sticker:12 of
msgid "The sticker's ID."
msgstr ""

#: disnake.guild.Guild.fetch_sticker:15 of
msgid "The sticker requested could not be found."
msgstr ""

#: disnake.guild.Guild.fetch_sticker:16 of
msgid "An error occurred fetching the sticker."
msgstr ""

#: disnake.guild.Guild.fetch_sticker:18 disnake.sticker.StickerItem.fetch:7 of
msgid "The retrieved sticker."
msgstr ""

#: ../../docstring disnake.Intents.emojis_and_stickers:13
#: disnake.guild.Guild.create_sticker:25 disnake.guild.Guild.fetch_sticker:19
#: disnake.sticker.GuildSticker.edit:18 of
msgid ":class:`GuildSticker`"
msgstr ""

#: disnake.guild.Guild.create_sticker:3 of
msgid "Creates a :class:`Sticker` for the guild."
msgstr ""

#: disnake.guild.Guild.create_sticker:5 disnake.guild.Guild.delete_sticker:5
#: disnake.sticker.GuildSticker.delete:5 of
msgid ""
"You must have :attr:`~Permissions.manage_emojis_and_stickers` permission "
"to do this."
msgstr ""

#: disnake.guild.Guild.create_sticker:10 of
msgid "The sticker name. Must be at least 2 characters."
msgstr ""

#: disnake.guild.Guild.create_sticker:12 of
msgid "The sticker's description. Can be ``None``."
msgstr ""

#: disnake.guild.Guild.create_sticker:14 disnake.sticker.GuildSticker.edit:9 of
msgid "The name of a unicode emoji that represents the sticker's expression."
msgstr ""

#: disnake.guild.Guild.create_sticker:16 of
msgid "The file of the sticker to upload."
msgstr ""

#: disnake.guild.Guild.create_sticker:18 of
msgid "The reason for creating this sticker. Shows up on the audit log."
msgstr ""

#: disnake.guild.Guild.create_sticker:21 of
msgid "You are not allowed to create stickers."
msgstr ""

#: disnake.guild.Guild.create_sticker:22 of
msgid "An error occurred creating a sticker."
msgstr ""

#: disnake.guild.Guild.create_sticker:24 of
msgid "The created sticker."
msgstr ""

#: disnake.guild.Guild.delete_sticker:3 disnake.sticker.GuildSticker.delete:3
#: of
msgid "Deletes the custom :class:`Sticker` from the guild."
msgstr ""

#: disnake.guild.Guild.delete_sticker:10 of
msgid "The sticker you are deleting."
msgstr ""

#: disnake.guild.Guild.delete_sticker:12 disnake.sticker.GuildSticker.delete:8
#: of
msgid "The reason for deleting this sticker. Shows up on the audit log."
msgstr ""

#: disnake.guild.Guild.delete_sticker:15 disnake.sticker.GuildSticker.delete:11
#: of
msgid "You are not allowed to delete stickers."
msgstr ""

#: disnake.guild.Guild.delete_sticker:16 disnake.sticker.GuildSticker.delete:12
#: of
msgid "An error occurred deleting the sticker."
msgstr ""

#: disnake.guild.Guild.fetch_emojis:3 of
msgid "Retrieves all custom :class:`Emoji`\\s from the guild."
msgstr ""

#: disnake.guild.Guild.fetch_emojis:7 of
msgid ""
"This method is an API call. For general usage, consider :attr:`emojis` "
"instead."
msgstr ""

#: disnake.guild.Guild.fetch_emojis:9 of
msgid "An error occurred fetching the emojis."
msgstr ""

#: disnake.guild.Guild.fetch_emojis:11 of
msgid "The retrieved emojis."
msgstr ""

#: disnake.guild.Guild.fetch_emojis:12 of
msgid "List[:class:`Emoji`]"
msgstr ""

#: disnake.guild.Guild.fetch_emoji:3 of
msgid "Retrieves a custom :class:`Emoji` from the guild."
msgstr ""

#: disnake.guild.Guild.fetch_emoji:7 of
msgid ""
"This method is an API call. For general usage, consider iterating over "
":attr:`emojis` instead."
msgstr ""

#: disnake.emoji.Emoji:37 disnake.guild.Guild.fetch_emoji:10 of
msgid "The emoji's ID."
msgstr ""

#: disnake.guild.Guild.fetch_emoji:13 of
msgid "The emoji requested could not be found."
msgstr ""

#: disnake.guild.Guild.fetch_emoji:14 of
msgid "An error occurred fetching the emoji."
msgstr ""

#: disnake.guild.Guild.fetch_emoji:16 of
msgid "The retrieved emoji."
msgstr ""

#: ../../docstring disnake.Intents.emojis_and_stickers:12
#: disnake.emoji.Emoji.edit:22 disnake.guild.Guild.create_custom_emoji:25
#: disnake.guild.Guild.fetch_emoji:17 of
msgid ":class:`Emoji`"
msgstr ""

#: disnake.guild.Guild.create_custom_emoji:3 of
msgid "Creates a custom :class:`Emoji` for the guild."
msgstr ""

#: disnake.guild.Guild.create_custom_emoji:5 of
msgid ""
"There is currently a limit of 50 static and animated emojis respectively "
"per guild, unless the guild has the ``MORE_EMOJI`` feature which extends "
"the limit to 200."
msgstr ""

#: disnake.guild.Guild.create_custom_emoji:8 of
msgid ""
"You must have the :attr:`~Permissions.manage_emojis` permission to do "
"this."
msgstr ""

#: disnake.guild.Guild.create_custom_emoji:11 of
msgid "The emoji name. Must be at least 2 characters."
msgstr ""

#: disnake.guild.Guild.create_custom_emoji:13 of
msgid ""
"The :term:`py:bytes-like object` representing the image data to use. Only"
" JPG, PNG and GIF images are supported."
msgstr ""

#: disnake.guild.Guild.create_custom_emoji:16 of
msgid ""
"A :class:`list` of :class:`Role`\\s that can use this emoji. Leave empty "
"to make it available to everyone."
msgstr ""

#: disnake.guild.Guild.create_custom_emoji:18 of
msgid "The reason for creating this emoji. Shows up on the audit log."
msgstr ""

#: disnake.guild.Guild.create_custom_emoji:21 of
msgid "You are not allowed to create emojis."
msgstr ""

#: disnake.guild.Guild.create_custom_emoji:22 of
msgid "An error occurred creating an emoji."
msgstr ""

#: disnake.guild.Guild.create_custom_emoji:24 of
msgid "The created emoji."
msgstr ""

#: disnake.guild.Guild.delete_emoji:3 of
msgid "Deletes the custom :class:`Emoji` from the guild."
msgstr ""

#: disnake.emoji.Emoji.delete:5 disnake.emoji.Emoji.edit:5
#: disnake.guild.Guild.delete_emoji:5 of
msgid "You must have :attr:`~Permissions.manage_emojis` permission to do this."
msgstr ""

#: disnake.guild.Guild.delete_emoji:8 of
msgid "The emoji you are deleting."
msgstr ""

#: disnake.emoji.Emoji.delete:8 disnake.guild.Guild.delete_emoji:10 of
msgid "The reason for deleting this emoji. Shows up on the audit log."
msgstr ""

#: disnake.emoji.Emoji.delete:11 disnake.guild.Guild.delete_emoji:13 of
msgid "You are not allowed to delete emojis."
msgstr ""

#: disnake.emoji.Emoji.delete:12 disnake.guild.Guild.delete_emoji:14 of
msgid "An error occurred deleting the emoji."
msgstr ""

#: disnake.guild.Guild.fetch_roles:3 of
msgid "Retrieves all :class:`Role` that the guild has."
msgstr ""

#: disnake.guild.Guild.fetch_roles:7 of
msgid ""
"This method is an API call. For general usage, consider :attr:`roles` "
"instead."
msgstr ""

#: disnake.guild.Guild.fetch_roles:11 of
msgid "Retrieving the roles failed."
msgstr ""

#: disnake.guild.Guild.fetch_roles:13 of
msgid "All roles in the guild."
msgstr ""

#: disnake.guild.Guild.get_or_fetch_member:3 of
msgid ""
"Tries to get a member from the cache by ID. If fails, it fetcehs the user"
" from the API and caches it."
msgstr ""

#: disnake.guild.Guild.get_or_fetch_member:9 of
msgid "The member with the given ID"
msgstr ""

#: disnake.guild.Guild.create_role:3 of
msgid "Creates a :class:`Role` for the guild."
msgstr ""

#: disnake.guild.Guild.create_role:5 disnake.role.Role.edit:8 of
msgid "All fields are optional."
msgstr ""

#: disnake.guild.Guild.create_role:7 disnake.guild.Guild.edit_role_positions:5
#: of
msgid "You must have the :attr:`~Permissions.manage_roles` permission to do this."
msgstr ""

#: disnake.guild.Guild.create_role:10 disnake.role.Role.edit:10 of
msgid "Can now pass ``int`` to ``colour`` keyword-only parameter."
msgstr ""

#: disnake.guild.Guild.create_role:13 of
msgid "The role name. Defaults to 'new role'."
msgstr ""

#: disnake.guild.Guild.create_role:15 of
msgid "The permissions to have. Defaults to no permissions."
msgstr ""

#: disnake.guild.Guild.create_role:17 of
msgid ""
"The colour for the role. Defaults to :meth:`Colour.default`. This is "
"aliased to ``color`` as well."
msgstr ""

#: disnake.guild.Guild.create_role:20 of
msgid ""
"Indicates if the role should be shown separately in the member list. "
"Defaults to ``False``."
msgstr ""

#: disnake.guild.Guild.create_role:23 disnake.role.Role.edit:24 of
msgid "The role's new icon image (if the guild has the ``ROLE_ICONS`` feature)."
msgstr ""

#: disnake.guild.Guild.create_role:25 disnake.role.Role.edit:26 of
msgid "The role's new unicode emoji."
msgstr ""

#: disnake.guild.Guild.create_role:27 of
msgid ""
"Indicates if the role should be mentionable by others. Defaults to "
"``False``."
msgstr ""

#: disnake.guild.Guild.create_role:30 of
msgid "The reason for creating this role. Shows up on the audit log."
msgstr ""

#: disnake.guild.Guild.create_role:33 of
msgid "You do not have permissions to create the role."
msgstr ""

#: disnake.guild.Guild.create_role:34 of
msgid "Creating the role failed."
msgstr ""

#: disnake.guild.Guild.create_role:35
#: disnake.guild.Guild.edit_role_positions:29 of
msgid "An invalid keyword argument was given."
msgstr ""

#: disnake.guild.Guild.create_role:37 of
msgid "The newly created role."
msgstr ""

#: disnake.guild.Guild.edit_role_positions:3 of
msgid "Bulk edits a list of :class:`Role` in the guild."
msgstr ""

#: disnake.guild.Guild.edit_role_positions:10 of
msgid "Example:"
msgstr ""

#: disnake.guild.Guild.edit_role_positions:22 of
msgid ""
"A :class:`dict` of :class:`Role` to :class:`int` to change the positions "
"of each given role."
msgstr ""

#: disnake.guild.Guild.edit_role_positions:24 of
msgid "The reason for editing the role positions. Shows up on the audit log."
msgstr ""

#: disnake.guild.Guild.edit_role_positions:27 of
msgid "You do not have permissions to move the roles."
msgstr ""

#: disnake.guild.Guild.edit_role_positions:28 of
msgid "Moving the roles failed."
msgstr ""

#: disnake.guild.Guild.edit_role_positions:31 of
msgid "A list of all the roles in the guild."
msgstr ""

#: disnake.guild.Guild.kick:3 of
msgid "Kicks a user from the guild."
msgstr ""

#: disnake.guild.Guild.ban:5 disnake.guild.Guild.kick:5
#: disnake.guild.Guild.unban:5 of
msgid "The user must meet the :class:`abc.Snowflake` abc."
msgstr ""

#: disnake.guild.Guild.kick:7 of
msgid "You must have the :attr:`~Permissions.kick_members` permission to do this."
msgstr ""

#: disnake.guild.Guild.kick:10 of
msgid "The user to kick from their guild."
msgstr ""

#: disnake.guild.Guild.kick:12 of
msgid "The reason the user got kicked."
msgstr ""

#: disnake.guild.Guild.kick:15 of
msgid "You do not have the proper permissions to kick."
msgstr ""

#: disnake.guild.Guild.kick:16 of
msgid "Kicking failed."
msgstr ""

#: disnake.guild.Guild.ban:3 of
msgid "Bans a user from the guild."
msgstr ""

#: disnake.guild.Guild.ban:7 disnake.guild.Guild.unban:7 of
msgid "You must have the :attr:`~Permissions.ban_members` permission to do this."
msgstr ""

#: disnake.guild.Guild.ban:10 of
msgid "The user to ban from their guild."
msgstr ""

#: disnake.guild.Guild.ban:12 of
msgid ""
"The number of days worth of messages to delete from the user in the "
"guild. The minimum is 0 and the maximum is 7."
msgstr ""

#: disnake.guild.Guild.ban:15 of
msgid "The reason the user got banned."
msgstr ""

#: disnake.guild.Guild.ban:18 of
msgid "You do not have the proper permissions to ban."
msgstr ""

#: disnake.guild.Guild.ban:19 of
msgid "Banning failed."
msgstr ""

#: disnake.guild.Guild.unban:3 of
msgid "Unbans a user from the guild."
msgstr ""

#: disnake.guild.Guild.unban:10 of
msgid "The user to unban."
msgstr ""

#: disnake.guild.Guild.unban:15 of
msgid "You do not have the proper permissions to unban."
msgstr ""

#: disnake.guild.Guild.unban:16 of
msgid "Unbanning failed."
msgstr ""

#: disnake.guild.Guild.vanity_invite:3 of
msgid "Returns the guild's special vanity invite."
msgstr ""

#: disnake.guild.Guild.vanity_invite:5 of
msgid "The guild must have ``VANITY_URL`` in :attr:`~Guild.features`."
msgstr ""

#: disnake.guild.Guild.vanity_invite:7 of
msgid ""
"You must have the :attr:`~Permissions.manage_guild` permission to use "
"this as well."
msgstr ""

#: disnake.guild.Guild.vanity_invite:10 of
msgid "You do not have the proper permissions to get this."
msgstr ""

#: disnake.guild.Guild.vanity_invite:11 of
msgid "Retrieving the vanity invite failed."
msgstr ""

#: disnake.guild.Guild.vanity_invite:13 of
msgid ""
"The special vanity invite. If ``None`` then the guild does not have a "
"vanity invite set."
msgstr ""

#: disnake.guild.Guild.vanity_invite:15 of
msgid "Optional[:class:`Invite`]"
msgstr ""

#: disnake.guild.Guild.widget:3 of
msgid "Returns the widget of the guild."
msgstr ""

#: disnake.guild.Guild.widget:13 of
msgid ":class:`Widget`"
msgstr ""

#: disnake.guild.Guild.edit_widget:3 of
msgid "Edits the widget of the guild."
msgstr ""

#: disnake.guild.Guild.edit_widget:5 of
msgid "You must have the :attr:`~Permissions.manage_guild` permission to use this"
msgstr ""

#: disnake.guild.Guild.edit_widget:10 of
msgid "Whether to enable the widget for the guild."
msgstr ""

#: disnake.guild.Guild.edit_widget:12 of
msgid "The new widget channel. ``None`` removes the widget channel."
msgstr ""

#: disnake.guild.Guild.edit_widget:15 of
msgid "You do not have permission to edit the widget."
msgstr ""

#: disnake.guild.Guild.edit_widget:16 of
msgid "Editing the widget failed."
msgstr ""

#: disnake.guild.Guild.chunk:3 of
msgid ""
"Requests all members that belong to this guild. In order to use this, "
":meth:`Intents.members` must be enabled."
msgstr ""

#: disnake.guild.Guild.chunk:6 disnake.guild.Guild.query_members:6 of
msgid "This is a websocket operation and can be slow."
msgstr ""

#: disnake.guild.Guild.chunk:10 of
msgid "Whether to cache the members as well."
msgstr ""

#: disnake.guild.Guild.query_members:3 of
msgid ""
"Request members that belong to this guild whose username starts with the "
"query given."
msgstr ""

#: disnake.guild.Guild.query_members:10 of
msgid "The string that the username's start with."
msgstr ""

#: disnake.guild.Guild.query_members:12 of
msgid ""
"The maximum number of members to send back. This must be a number between"
" 5 and 100."
msgstr ""

#: disnake.guild.Guild.query_members:15 of
msgid ""
"Whether to request for presences to be provided. This defaults to "
"``False``.  .. versionadded:: 1.6"
msgstr ""

#: disnake.guild.Guild.query_members:15 of
msgid ""
"Whether to request for presences to be provided. This defaults to "
"``False``."
msgstr ""

#: disnake.guild.Guild.query_members:20 of
msgid ""
"Whether to cache the members internally. This makes operations such as "
":meth:`get_member` work for those that matched."
msgstr ""

#: disnake.guild.Guild.query_members:23 of
msgid ""
"List of user IDs to search for. If the user ID is not in the guild then "
"it won't be returned.  .. versionadded:: 1.4"
msgstr ""

#: disnake.guild.Guild.query_members:23 of
msgid ""
"List of user IDs to search for. If the user ID is not in the guild then "
"it won't be returned."
msgstr ""

#: disnake.guild.Guild.query_members:28 of
msgid "The query timed out waiting for the members."
msgstr ""

#: disnake.guild.Guild.query_members:29 of
msgid "Invalid parameters were passed to the function"
msgstr ""

#: disnake.guild.Guild.query_members:30 of
msgid "The presences intent is not enabled."
msgstr ""

#: disnake.guild.Guild.query_members:32 of
msgid "The list of members that have matched the query."
msgstr ""

#: disnake.guild.Guild.change_voice_state:3 of
msgid "Changes client's voice state in the guild."
msgstr ""

#: disnake.guild.Guild.change_voice_state:7 of
msgid "Channel the client wants to join. Use ``None`` to disconnect."
msgstr ""

#: disnake.guild.Guild.change_voice_state:9 of
msgid "Indicates if the client should be self-muted."
msgstr ""

#: disnake.guild.Guild.change_voice_state:11 of
msgid "Indicates if the client should be self-deafened."
msgstr ""

#: disnake.guild.Guild.bulk_fetch_command_permissions:3 of
msgid ""
"Requests a list of :class:`GuildApplicationCommandPermissions` configured"
" for this guild."
msgstr ""

#: disnake.guild.Guild.fetch_command_permissions:3 of
msgid ""
"Requests :class:`GuildApplicationCommandPermissions` for a specific "
"command."
msgstr ""

#: disnake.guild.Guild.fetch_command_permissions:7 of
msgid "the ID of the application command"
msgstr ""

#: disnake.guild.Guild.edit_command_permissions:13
#: disnake.guild.Guild.fetch_command_permissions:11 of
msgid ":class:`GuildApplicationCommandPermissions`"
msgstr ""

#: disnake.guild.Guild.bulk_edit_command_permissions:11 of
msgid "List[:class:`GuildApplicationCommandPermissions`]"
msgstr ""

#: ../../api.rst:3698
msgid "A namedtuple which represents a ban returned from :meth:`~Guild.bans`."
msgstr ""

#: ../../api.rst:3702
msgid "The reason this user was banned."
msgstr ""

#: ../../api.rst:3707
msgid "The :class:`User` that was banned."
msgstr ""

#: ../../api.rst:3713
msgid "Integration"
msgstr ""

#: disnake.integrations.Integration:1 of
msgid "Represents a guild integration."
msgstr ""

#: disnake.integrations.BotIntegration:13 disnake.integrations.Integration:13
#: disnake.integrations.StreamIntegration:13 of
msgid "The integration name."
msgstr ""

#: disnake.integrations.BotIntegration:19 disnake.integrations.Integration:19
#: disnake.integrations.StreamIntegration:19 of
msgid "The guild of the integration."
msgstr ""

#: disnake.integrations.BotIntegration:25 disnake.integrations.Integration:25
#: disnake.integrations.StreamIntegration:25 of
msgid "The integration type (i.e. Twitch)."
msgstr ""

#: disnake.integrations.BotIntegration:31 disnake.integrations.Integration:31
#: disnake.integrations.StreamIntegration:31 of
msgid "Whether the integration is currently enabled."
msgstr ""

#: disnake.integrations.Integration:37 of
msgid "The account linked to this integration."
msgstr ""

#: disnake.integrations.BotIntegration:45 disnake.integrations.Integration:39
#: disnake.integrations.StreamIntegration:69 of
msgid ":class:`IntegrationAccount`"
msgstr ""

#: disnake.integrations.BotIntegration:37 disnake.integrations.Integration:43
#: of
msgid "The user that added this integration."
msgstr ""

#: disnake.integrations.Integration.delete:3 of
msgid "Deletes the integration."
msgstr ""

#: disnake.integrations.Integration.delete:8 of
msgid ""
"The reason the integration was deleted. Shows up on the audit log.  .. "
"versionadded:: 2.0"
msgstr ""

#: disnake.integrations.Integration.delete:8 of
msgid "The reason the integration was deleted. Shows up on the audit log."
msgstr ""

#: disnake.integrations.Integration.delete:13 of
msgid "You do not have permission to delete the integration."
msgstr ""

#: disnake.integrations.Integration.delete:14 of
msgid "Deleting the integration failed."
msgstr ""

#: disnake.integrations.IntegrationAccount:1 of
msgid "Represents an integration account."
msgstr ""

#: disnake.integrations.IntegrationAccount:7 of
msgid "The account ID."
msgstr ""

#: disnake.integrations.IntegrationAccount:13 of
msgid "The account name."
msgstr ""

#: disnake.integrations.BotIntegration:1 of
msgid "Represents a bot integration on disnake."
msgstr ""

#: disnake.integrations.BotIntegration:43
#: disnake.integrations.StreamIntegration:67 of
msgid "The integration account information."
msgstr ""

#: disnake.integrations.BotIntegration:49 of
msgid "The application tied to this integration."
msgstr ""

#: disnake.integrations.BotIntegration:51 of
msgid ":class:`IntegrationApplication`"
msgstr ""

#: disnake.integrations.IntegrationApplication:1 of
msgid "Represents an application for a bot integration."
msgstr ""

#: disnake.integrations.IntegrationApplication:7 of
msgid "The ID for this application."
msgstr ""

#: disnake.integrations.IntegrationApplication:13 of
msgid "The application's name."
msgstr ""

#: disnake.integrations.IntegrationApplication:19 of
msgid "The application's icon hash."
msgstr ""

#: disnake.integrations.IntegrationApplication:25 of
msgid "The application's description. Can be an empty string."
msgstr ""

#: disnake.integrations.IntegrationApplication:31 of
msgid "The summary of the application. Can be an empty string."
msgstr ""

#: disnake.integrations.IntegrationApplication:37 of
msgid "The bot user on this application."
msgstr ""

#: disnake.integrations.StreamIntegration:1 of
msgid "Represents a stream integration for Twitch or YouTube."
msgstr ""

#: disnake.integrations.StreamIntegration:37 of
msgid "Where the integration is currently syncing."
msgstr ""

#: disnake.integrations.StreamIntegration:43 of
msgid ""
"Whether emoticons should be synced for this integration (currently twitch"
" only)."
msgstr ""

#: disnake.integrations.StreamIntegration:45 disnake.template.Template:60
#: disnake.widget.WidgetMember:73 disnake.widget.WidgetMember:79
#: disnake.widget.WidgetMember:85 of
msgid "Optional[:class:`bool`]"
msgstr ""

#: disnake.integrations.StreamIntegration:49 of
msgid ""
"The behaviour of expiring subscribers. Aliased to ``expire_behavior`` as "
"well."
msgstr ""

#: disnake.StreamIntegration.expire_behavior:3
#: disnake.integrations.StreamIntegration:51 of
msgid ":class:`ExpireBehaviour`"
msgstr ""

#: disnake.integrations.StreamIntegration:55 of
msgid "The grace period (in days) for expiring subscribers."
msgstr ""

#: disnake.integrations.StreamIntegration:61 of
msgid "The user for the integration."
msgstr ""

#: disnake.integrations.StreamIntegration:73 of
msgid "An aware UTC datetime representing when the integration was last synced."
msgstr ""

#: disnake.StreamIntegration.expire_behavior:1 of
msgid "An alias for :attr:`expire_behaviour`."
msgstr ""

#: disnake.StreamIntegration.role:1 of
msgid ""
"Optional[:class:`Role`] The role which the integration uses for "
"subscribers."
msgstr ""

#: disnake.integrations.StreamIntegration.edit:3 of
msgid "Edits the integration."
msgstr ""

#: disnake.integrations.StreamIntegration.edit:8 of
msgid ""
"The behaviour when an integration subscription lapses. Aliased to "
"``expire_behavior`` as well."
msgstr ""

#: disnake.integrations.StreamIntegration.edit:10 of
msgid ""
"The period (in days) where the integration will ignore lapsed "
"subscriptions."
msgstr ""

#: disnake.integrations.StreamIntegration.edit:12 of
msgid ""
"Where emoticons should be synced for this integration (currently twitch "
"only)."
msgstr ""

#: disnake.integrations.StreamIntegration.edit:15 of
msgid "You do not have permission to edit the integration."
msgstr ""

#: disnake.integrations.StreamIntegration.edit:17 of
msgid "``expire_behaviour`` did not receive a :class:`ExpireBehaviour`."
msgstr ""

#: disnake.integrations.StreamIntegration.sync:3 of
msgid "Syncs the integration."
msgstr ""

#: disnake.integrations.StreamIntegration.sync:8 of
msgid "You do not have permission to sync the integration."
msgstr ""

#: disnake.integrations.StreamIntegration.sync:9 of
msgid "Syncing the integration failed."
msgstr ""

#: ../../api.rst:3731
msgid "Interaction"
msgstr ""

#: disnake.interactions.base.Interaction:1 of
msgid "A base class representing a Discord interaction."
msgstr ""

#: disnake.interactions.base.Interaction:3 of
msgid ""
"An interaction happens when a user does an action that needs to be "
"notified. Current examples are application commands and components."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteraction:9
#: disnake.interactions.base.Interaction:10
#: disnake.interactions.message.MessageInteraction:9 of
msgid "The interaction's ID."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteraction:15
#: disnake.interactions.application_command.ApplicationCommandInteraction:81
#: disnake.interactions.base.Interaction:16
#: disnake.interactions.message.MessageInteraction:81 of
msgid "The interaction type."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteraction:17
#: disnake.interactions.application_command.ApplicationCommandInteraction:83
#: disnake.interactions.base.Interaction:18
#: disnake.interactions.message.MessageInteraction:83
#: disnake.message.InteractionReference:18 of
msgid ":class:`InteractionType`"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteraction:21
#: disnake.interactions.base.Interaction:22
#: disnake.interactions.message.MessageInteraction:15 of
msgid "The guild ID the interaction was sent from."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteraction:27
#: disnake.interactions.base.Interaction:28
#: disnake.interactions.message.MessageInteraction:21 of
msgid "The channel ID the interaction was sent from."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteraction:33
#: disnake.interactions.base.Interaction:34
#: disnake.interactions.message.MessageInteraction:27 of
msgid "The application ID that the interaction was for."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteraction:39
#: disnake.interactions.base.Interaction:40
#: disnake.interactions.message.MessageInteraction:33 of
msgid "The user or member that sent the interaction."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteraction:41
#: disnake.interactions.base.Interaction:42
#: disnake.interactions.message.MessageInteraction:35 of
msgid "Optional[Union[:class:`User`, :class:`Member`]]"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteraction:87
#: disnake.interactions.base.Interaction:46
#: disnake.interactions.message.MessageInteraction:87 of
msgid "The token to continue the interaction. These are valid for 15 minutes."
msgstr ""

#: disnake.Interaction.guild:1
#: disnake.interactions.application_command.ApplicationCommandInteraction:45
#: disnake.interactions.message.MessageInteraction:39 of
msgid "The guild the interaction was sent from."
msgstr ""

#: ../../docstring disnake.Interaction.me:1 of
msgid ""
"Union[:class:`.Member`, :class:`.ClientUser`]: Similar to "
":attr:`.Guild.me` except it may return the :class:`.ClientUser` in "
"private message contexts."
msgstr ""

#: ../../docstring disnake.Interaction.channel:1
#: disnake.interactions.application_command.ApplicationCommandInteraction:51
#: disnake.interactions.message.MessageInteraction:45 of
msgid "The channel the interaction was sent from."
msgstr ""

#: ../../docstring disnake.Interaction.channel:3 of
msgid ""
"Note that due to a Discord limitation, DM channels are not resolved since"
" there is no data to complete them. These are :class:`PartialMessageable`"
" instead."
msgstr ""

#: ../../docstring disnake.Interaction.channel:6
#: disnake.interactions.application_command.ApplicationCommandInteraction:53
#: disnake.interactions.message.MessageInteraction:47 of
msgid ""
"Optional[Union[:class:`abc.GuildChannel`, :class:`PartialMessageable`, "
":class:`Thread`]]"
msgstr ""

#: disnake.Interaction.permissions:1
#: disnake.interactions.application_command.ApplicationCommandInteraction:63
#: disnake.interactions.message.MessageInteraction:63 of
msgid ""
"The resolved permissions of the member in the channel, including "
"overwrites."
msgstr ""

#: disnake.Interaction.permissions:3 of
msgid ""
"In a non-guild context where this doesn't apply, an empty permissions "
"object is returned."
msgstr ""

#: ../../docstring disnake.Interaction.response:1
#: disnake.interactions.application_command.ApplicationCommandInteraction:69
#: disnake.interactions.message.MessageInteraction:69 of
msgid "Returns an object responsible for handling responding to the interaction."
msgstr ""

#: ../../docstring disnake.Interaction.response:3 of
msgid ""
"A response can only be done once. If secondary messages need to be sent, "
"consider using :attr:`followup` instead."
msgstr ""

#: ../../docstring disnake.Interaction.response:6
#: disnake.interactions.application_command.ApplicationCommandInteraction:71
#: disnake.interactions.message.MessageInteraction:71 of
msgid ":class:`InteractionResponse`"
msgstr ""

#: ../../docstring disnake.Interaction.followup:1
#: disnake.interactions.application_command.ApplicationCommandInteraction:75
#: disnake.interactions.message.MessageInteraction:75 of
msgid "Returns the follow up webhook for follow up interactions."
msgstr ""

#: disnake.interactions.base.Interaction.original_message:3 of
msgid ""
"Fetches the original interaction response message associated with the "
"interaction."
msgstr ""

#: disnake.interactions.base.Interaction.original_message:5 of
msgid ""
"If the interaction response was :meth:`InteractionResponse.send_message` "
"then this would return the message that was sent using that response. "
"Otherwise, this would return the message that triggered the interaction."
msgstr ""

#: disnake.interactions.base.Interaction.original_message:9 of
msgid "Repeated calls to this will return a cached value."
msgstr ""

#: disnake.interactions.base.Interaction.original_message:11 of
msgid "Fetching the original response message failed."
msgstr ""

#: disnake.interactions.base.Interaction.original_message:12 of
msgid "The channel for the message could not be resolved."
msgstr ""

#: disnake.interactions.base.Interaction.original_message:14 of
msgid "The original interaction response message."
msgstr ""

#: disnake.interactions.base.Interaction.edit_original_message:3 of
msgid "Edits the original, previously sent interaction response message."
msgstr ""

#: disnake.interactions.base.Interaction.edit_original_message:5 of
msgid ""
"This is a lower level interface to :meth:`InteractionMessage.edit` in "
"case you do not want to fetch the message and save an HTTP request."
msgstr ""

#: disnake.interactions.base.Interaction.edit_original_message:8 of
msgid ""
"This method is also the only way to edit the original message if the "
"message sent was ephemeral."
msgstr ""

#: disnake.interactions.base.Interaction.edit_original_message:45
#: disnake.interactions.base.InteractionMessage.edit:39 of
msgid ":class:`InteractionMessage`"
msgstr ""

#: disnake.interactions.base.Interaction.delete_original_message:3 of
msgid "Deletes the original interaction response message."
msgstr ""

#: disnake.interactions.base.Interaction.delete_original_message:5 of
msgid ""
"This is a lower level interface to :meth:`InteractionMessage.delete` in "
"case you do not want to fetch the message and save an HTTP request."
msgstr ""

#: disnake.interactions.base.Interaction.delete_original_message:8 of
msgid ""
"If provided, the number of seconds to wait in the background before "
"deleting the original message. If the deletion fails, then it is silently"
" ignored."
msgstr ""

#: disnake.interactions.base.Interaction.send:3 of
msgid ""
"Sends a message using either :meth:`response.send_message` or "
":meth:`followup.send`."
msgstr ""

#: disnake.interactions.base.Interaction.send:5 of
msgid ""
"If the interaction is not responded, this method will call "
":meth:`response.send_message`. :meth:`followup.send` otherwise."
msgstr ""

#: disnake.interactions.base.Interaction.send:30
#: disnake.interactions.base.InteractionResponse.send_message:20 of
msgid "The view to send with the message."
msgstr ""

#: disnake.interactions.base.Interaction.send:32
#: disnake.interactions.base.InteractionResponse.send_message:24 of
msgid ""
"Indicates if the message should only be visible to the user who started "
"the interaction. If a view is sent with an ephemeral message and it has "
"no timeout set then the timeout is set to 15 minutes."
msgstr ""

#: disnake.interactions.base.Interaction.send:42
#: disnake.interactions.base.InteractionResponse.edit_message:40
#: disnake.interactions.base.InteractionResponse.send_message:34 of
msgid "You specified both ``embed`` and ``embeds``."
msgstr ""

#: ../../api.rst:3739
msgid "ApplicationCommandInteraction"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteraction:1 of
msgid "Represents an interaction with an application command."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteraction:3 of
msgid "Current examples are slash commands, user commands and message commands."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteraction:57
#: disnake.interactions.message.MessageInteraction:57 of
msgid "Similar to :attr:`.Guild.me`"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteraction:59
#: disnake.interactions.message.MessageInteraction:59 of
msgid "Union[:class:`.Member`, :class:`.ClientUser`]"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteraction:94
#: disnake.interactions.message.MessageInteraction:94 of
msgid "The wrapped interaction data."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteraction:96 of
msgid ":class:`ApplicationCommandInteractionData`"
msgstr ""

#: disnake.ApplicationCommandInteraction.target:1
#: disnake.interactions.application_command.ApplicationCommandInteractionData:43
#: of
msgid "The user or message targetted by a user or message command"
msgstr ""

#: disnake.ApplicationCommandInteraction.target:3 of
msgid "Optional[Union[:class:`abc.User`, :class:`Message`]]"
msgstr ""

#: disnake.ApplicationCommandInteraction.options:1 of
msgid "The full option tree, including nestings"
msgstr ""

#: disnake.ApplicationCommandInteraction.filled_options:3
#: disnake.ApplicationCommandInteraction.options:3 of
msgid "Dict[:class:`str`, :class:`Any`]"
msgstr ""

#: disnake.ApplicationCommandInteraction.filled_options:1 of
msgid "The options of the command (or sub-command) being invoked"
msgstr ""

#: ../../api.rst:3747
msgid "MessageInteraction"
msgstr ""

#: disnake.interactions.message.MessageInteraction:1 of
msgid "Represents an interaction with a message component."
msgstr ""

#: disnake.interactions.message.MessageInteraction:3 of
msgid "Current examples are buttons and dropdowns."
msgstr ""

#: disnake.interactions.message.MessageInteraction:51 of
msgid "The message that sent this interaction."
msgstr ""

#: disnake.TextChannel.last_message:14 disnake.Thread.last_message:14
#: disnake.interactions.message.MessageInteraction:53
#: disnake.raw_models.RawMessageDeleteEvent:25
#: disnake.raw_models.RawMessageUpdateEvent:36 of
msgid "Optional[:class:`Message`]"
msgstr ""

#: disnake.interactions.message.MessageInteraction:96 of
msgid ":class:`MessageInteractionData`"
msgstr ""

#: disnake.MessageInteraction.values:1 of
msgid "The values the user selected"
msgstr ""

#: ../../docstring disnake.MessageInteraction.component:1 of
msgid "The component the user interacted with"
msgstr ""

#: ../../docstring disnake.MessageInteraction.component:3 of
msgid "Union[:class:`Button`, :class:`SelectMenu`]"
msgstr ""

#: ../../api.rst:3755
msgid "InteractionResponse"
msgstr ""

#: disnake.interactions.base.InteractionResponse:1 of
msgid "Represents a Discord interaction response."
msgstr ""

#: disnake.interactions.base.InteractionResponse:3 of
msgid "This type can be accessed through :attr:`Interaction.response`."
msgstr ""

#: disnake.interactions.base.InteractionResponse.is_done:1 of
msgid ""
":class:`bool`: Indicates whether an interaction response has been done "
"before."
msgstr ""

#: disnake.interactions.base.InteractionResponse.is_done:3 of
msgid "An interaction can only be responded to once."
msgstr ""

#: disnake.interactions.base.InteractionResponse.defer:3 of
msgid "Defers the interaction response."
msgstr ""

#: disnake.interactions.base.InteractionResponse.defer:5 of
msgid ""
"This is typically used when the interaction is acknowledged and a "
"secondary action will be done later."
msgstr ""

#: disnake.interactions.base.InteractionResponse.defer:8 of
msgid ""
"Indicates whether the deferred message will eventually be ephemeral. This"
" only applies for interactions of type "
":attr:`InteractionType.application_command`."
msgstr ""

#: disnake.interactions.base.InteractionResponse.defer:12 of
msgid "Deferring the interaction failed."
msgstr ""

#: disnake.interactions.base.InteractionResponse.autocomplete:9
#: disnake.interactions.base.InteractionResponse.defer:13
#: disnake.interactions.base.InteractionResponse.edit_message:41
#: disnake.interactions.base.InteractionResponse.pong:8
#: disnake.interactions.base.InteractionResponse.send_message:36 of
msgid "This interaction has already been responded to before."
msgstr ""

#: disnake.interactions.base.InteractionResponse.pong:3 of
msgid "Pongs the ping interaction."
msgstr ""

#: disnake.interactions.base.InteractionResponse.pong:5 of
msgid "This should rarely be used."
msgstr ""

#: disnake.interactions.base.InteractionResponse.pong:7 of
msgid "Ponging the interaction failed."
msgstr ""

#: disnake.interactions.base.InteractionResponse.send_message:3 of
msgid "Responds to this interaction by sending a message."
msgstr ""

#: disnake.interactions.base.InteractionResponse.edit_message:3 of
msgid ""
"Responds to this interaction by editing the original message of a "
"component interaction."
msgstr ""

#: disnake.interactions.base.InteractionResponse.edit_message:7 of
msgid ""
"The ``attachments`` parameter is currently non-functional, "
"removing/replacing existing attachments using this method is presently "
"not supported (API limitation, see `this <https://github.com/discord"
"/discord-api-docs/discussions/3335>`_). As a workaround, respond to the "
"interaction first (e.g. using :meth:`.defer`), then edit the message "
"using :meth:`.edit_original_message`."
msgstr ""

#: disnake.interactions.base.InteractionResponse.edit_message:13 of
msgid "The new content to replace the message with. ``None`` removes the content."
msgstr ""

#: disnake.interactions.base.InteractionResponse.edit_message:23 of
msgid ""
"The file to upload. This cannot be mixed with ``files`` parameter. Files "
"will be appended to the message.  .. versionadded:: 2.1"
msgstr ""

#: disnake.interactions.base.InteractionResponse.edit_message:28 of
msgid ""
"A list of files to upload. This cannot be mixed with the ``file`` "
"parameter. Files will be appended to the message.  .. versionadded:: 2.1"
msgstr ""

#: disnake.interactions.base.InteractionResponse.autocomplete:1 of
msgid ""
"|coro| Responds to this interaction by displaying a list of possible "
"autocomplete results. Only works for autocomplete interactions."
msgstr ""

#: disnake.interactions.base.InteractionResponse.autocomplete:5 of
msgid "The list of choices to suggest."
msgstr ""

#: disnake.interactions.base.InteractionResponse.autocomplete:8 of
msgid "Autocomplete response has failed."
msgstr ""

#: ../../api.rst:3763
msgid "InteractionMessage"
msgstr ""

#: disnake.interactions.base.InteractionMessage:1 of
msgid "Represents the original interaction response message."
msgstr ""

#: disnake.interactions.base.InteractionMessage:3 of
msgid ""
"This allows you to edit or delete the message associated with the "
"interaction response. To retrieve this object see "
":meth:`Interaction.original_message`."
msgstr ""

#: ../../api.rst:3771
msgid "ApplicationCommandInteractionData"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionData:1
#: of
msgid "Represents the data of an interaction with an application command."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionData:7
#: of
msgid "The application command ID."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionData:13
#: of
msgid "The application command name."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionData:19
#: of
msgid "The application command type."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionData:21
#: of
msgid ":class:`ApplicationCommandType`"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionData:25
#: of
msgid "All resolved objects related to this interaction."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionData:27
#: of
msgid ":class:`ApplicationCommandInteractionDataResolved`"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionData:31
#: of
msgid "A list of options from the API."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionData:33
#: disnake.interactions.application_command.ApplicationCommandInteractionDataOption:25
#: of
msgid "List[:class:`ApplicationCommandInteractionDataOption`]"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionData:37
#: of
msgid "ID of the user or message targetted by a user or message command"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionData:45
#: of
msgid "Union[:class:`User`, :class:`Member`, :class:`Message`]"
msgstr ""

#: disnake.ApplicationCommandInteractionData.focused_option:1 of
msgid "The focused option"
msgstr ""

#: ../../api.rst:3779
msgid "ApplicationCommandInteractionDataOption"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionDataOption:1
#: of
msgid ""
"This class represents the structure of an interaction data option from "
"the API."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionDataOption:5
#: of
msgid "The name of the option."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionDataOption:11
#: of
msgid "The type of the option."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionDataOption:13
#: of
msgid ":class:`OptionType`"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionDataOption:17
#: of
msgid "The value of the option."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionDataOption:19
#: of
msgid ":class:`Any`"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionDataOption:23
#: of
msgid ""
"The list of options of this option. Only exists for subcommands and "
"groups."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionDataOption:29
#: of
msgid ""
"Whether this option is focused by the user. May be ``True`` in case of "
":class:`ApplicationCommandAutocompleteInteraction`."
msgstr ""

#: ../../api.rst:3787
msgid "ApplicationCommandInteractionDataResolved"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionDataResolved:1
#: of
msgid ""
"Represents the resolved data related to an interaction with an "
"application command."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionDataResolved:8
#: of
msgid "IDs and partial members (missing ``deaf`` and ``mute``)"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionDataResolved:10
#: of
msgid "Dict[:class:`int`, :class:`Member`]"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionDataResolved:14
#: of
msgid "IDs and users"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionDataResolved:16
#: of
msgid "Dict[:class:`int`, :class:`User`]"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionDataResolved:20
#: of
msgid "IDs and roles"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionDataResolved:22
#: of
msgid "Dict[:class:`int`, :class:`Role`]"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionDataResolved:26
#: of
msgid ""
"IDs and partial channels (only ``id``, ``name`` and ``permissions`` are "
"included, threads also have ``thread_metadata`` and ``parent_id``)."
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionDataResolved:29
#: of
msgid "Dict[:class:`int`, :class:`Channel`]"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionDataResolved:33
#: of
msgid "IDs and messages"
msgstr ""

#: disnake.interactions.application_command.ApplicationCommandInteractionDataResolved:35
#: of
msgid "Dict[:class:`int`, :class:`Message`]"
msgstr ""

#: ../../api.rst:3795
msgid "MessageInteractionData"
msgstr ""

#: disnake.interactions.message.MessageInteractionData:1 of
msgid "Represents the data of an interaction with a message component."
msgstr ""

#: disnake.interactions.message.MessageInteractionData:7 of
msgid "The custom ID of the component."
msgstr ""

#: disnake.interactions.message.MessageInteractionData:13 of
msgid "The type of the component."
msgstr ""

#: disnake.interactions.message.MessageInteractionData:19 of
msgid "The values the user has selected."
msgstr ""

#: ../../api.rst:3803
msgid "Member"
msgstr ""

#: disnake.member.Member:1 of
msgid "Represents a Discord member to a :class:`Guild`."
msgstr ""

#: disnake.member.Member:3 of
msgid "This implements a lot of the functionality of :class:`User`."
msgstr ""

#: disnake.member.Member:9 of
msgid ""
"Checks if two members are equal. Note that this works with :class:`User` "
"instances too."
msgstr ""

#: disnake.member.Member:14 of
msgid ""
"Checks if two members are not equal. Note that this works with "
":class:`User` instances too."
msgstr ""

#: disnake.member.Member:19 of
msgid "Returns the member's hash."
msgstr ""

#: disnake.member.Member:23 of
msgid "Returns the member's name with the discriminator."
msgstr ""

#: disnake.member.Member:27 of
msgid ""
"An aware datetime object that specifies the date and time in UTC that the"
" member joined the guild. If the member left and rejoined the guild, this"
" will be the latest date. In certain cases, this can be ``None``."
msgstr ""

#: disnake.member.Member:34 of
msgid "The activities that the user is currently doing."
msgstr ""

#: disnake.member.Member:38 of
msgid ""
"Due to a Discord API limitation, a user's Spotify activity may not appear"
" if they are listening to a song with a title longer than 128 characters."
" See :issue:`1738` for more information."
msgstr ""

#: disnake.member.Member:42 of
msgid "Tuple[Union[:class:`BaseActivity`, :class:`Spotify`]]"
msgstr ""

#: disnake.member.Member:46 of
msgid "The guild that the member belongs to."
msgstr ""

#: disnake.member.Member:52 of
msgid "The guild specific nickname of the user."
msgstr ""

#: disnake.member.Member:58 of
msgid "Whether the member is pending member verification."
msgstr ""

#: disnake.member.Member:66 of
msgid ""
"An aware datetime object that specifies the date and time in UTC when the"
" member used their \"Nitro boost\" on the guild, if available. This could"
" be ``None``."
msgstr ""

#: disnake.Member.name:1 of
msgid "Equivalent to :attr:`User.name`"
msgstr ""

#: disnake.Member.id:1 of
msgid "Equivalent to :attr:`User.id`"
msgstr ""

#: disnake.Member.bot:1 of
msgid "Equivalent to :attr:`User.bot`"
msgstr ""

#: disnake.Member.system:1 of
msgid "Equivalent to :attr:`User.system`"
msgstr ""

#: disnake.Member.created_at:1 of
msgid "Equivalent to :attr:`User.created_at`"
msgstr ""

#: disnake.Member.default_avatar:1 of
msgid "Equivalent to :attr:`User.default_avatar`"
msgstr ""

#: disnake.Member.avatar:1 of
msgid "Equivalent to :attr:`User.avatar`"
msgstr ""

#: disnake.Member.dm_channel:1 of
msgid "Equivalent to :attr:`User.dm_channel`"
msgstr ""

#: disnake.Member.mutual_guilds:1 of
msgid "Equivalent to :attr:`User.mutual_guilds`"
msgstr ""

#: disnake.Member.public_flags:1 of
msgid "Equivalent to :attr:`User.public_flags`"
msgstr ""

#: disnake.Member.banner:1 of
msgid "Equivalent to :attr:`User.banner`"
msgstr ""

#: disnake.Member.accent_color:1 of
msgid "Equivalent to :attr:`User.accent_color`"
msgstr ""

#: disnake.Member.accent_colour:1 of
msgid "Equivalent to :attr:`User.accent_colour`"
msgstr ""

#: disnake.Member.raw_status:1 of
msgid "The member's overall status as a string value."
msgstr ""

#: disnake.Member.status:1 of
msgid ""
"The member's overall status. If the value is unknown, then it will be a "
":class:`str` instead."
msgstr ""

#: disnake.Member.desktop_status:3 disnake.Member.mobile_status:3
#: disnake.Member.status:3 disnake.Member.web_status:3
#: disnake.widget.WidgetMember:49 of
msgid ":class:`Status`"
msgstr ""

#: disnake.Member.mobile_status:1 of
msgid "The member's status on a mobile device, if applicable."
msgstr ""

#: disnake.Member.desktop_status:1 of
msgid "The member's status on the desktop client, if applicable."
msgstr ""

#: disnake.Member.web_status:1 of
msgid "The member's status on the web client, if applicable."
msgstr ""

#: disnake.member.Member.is_on_mobile:1 of
msgid ""
":class:`bool`: A helper function that determines if a member is active on"
" a mobile device."
msgstr ""

#: disnake.Member.colour:1 of
msgid ""
"A property that returns a colour denoting the rendered colour for the "
"member. If the default colour is the one rendered then an instance of "
":meth:`Colour.default` is returned."
msgstr ""

#: disnake.Member.color:1 of
msgid ""
"A property that returns a color denoting the rendered color for the "
"member. If the default color is the one rendered then an instance of "
":meth:`Colour.default` is returned."
msgstr ""

#: disnake.Member.roles:1 of
msgid ""
"A :class:`list` of :class:`Role` that the member belongs to. Note that "
"the first element of this list is always the default '@everyone' role."
msgstr ""

#: disnake.Member.roles:5 of
msgid "These roles are sorted by their position in the role hierarchy."
msgstr ""

#: disnake.Member.mention:1 of
msgid "Returns a string that allows you to mention the member."
msgstr ""

#: disnake.Member.display_avatar:1 of
msgid "Returns the member's display avatar."
msgstr ""

#: disnake.Member.display_avatar:3 of
msgid ""
"For regular members this is just their avatar, but if they have a guild "
"specific avatar then that is returned instead."
msgstr ""

#: disnake.Member.guild_avatar:1 of
msgid ""
"Returns an :class:`Asset` for the guild avatar the member has. If "
"unavailable, ``None`` is returned."
msgstr ""

#: disnake.Member.activity:1 of
msgid ""
"Returns the primary activity the user is currently doing. Could be "
"``None`` if no activity is being done."
msgstr ""

#: disnake.Member.activity:6 of
msgid ""
"Due to a Discord API limitation, this may be ``None`` if the user is "
"listening to a song on Spotify with a title longer than 128 characters. "
"See :issue:`1738` for more information."
msgstr ""

#: disnake.Member.activity:12 of
msgid ""
"A user may have multiple activities, these can be accessed under "
":attr:`activities`."
msgstr ""

#: disnake.Member.activity:14 disnake.widget.WidgetMember:67 of
msgid "Optional[Union[:class:`BaseActivity`, :class:`Spotify`]]"
msgstr ""

#: disnake.member.Member.mentioned_in:1 of
msgid "Checks if the member is mentioned in the specified message."
msgstr ""

#: disnake.member.Member.mentioned_in:6 of
msgid "Indicates if the member is mentioned in the message."
msgstr ""

#: disnake.Member.top_role:1 of
msgid "Returns the member's highest role."
msgstr ""

#: disnake.Member.top_role:3 of
msgid ""
"This is useful for figuring where a member stands in the role hierarchy "
"chain."
msgstr ""

#: disnake.Member.guild_permissions:1 of
msgid "Returns the member's guild permissions."
msgstr ""

#: disnake.Member.guild_permissions:3 of
msgid ""
"This only takes into consideration the guild permissions and not most of "
"the implied permissions or any of the channel permission overwrites. For "
"100% accurate permission calculation, please use "
":meth:`abc.GuildChannel.permissions_for`."
msgstr ""

#: disnake.Member.guild_permissions:8 of
msgid ""
"This does take into consideration guild ownership and the administrator "
"implication."
msgstr ""

#: disnake.Member.voice:1 of
msgid "Returns the member's current voice state."
msgstr ""

#: disnake.Member.voice:3 of
msgid "Optional[:class:`VoiceState`]"
msgstr ""

#: disnake.member.Member.ban:3 of
msgid "Bans this member. Equivalent to :meth:`Guild.ban`."
msgstr ""

#: disnake.member.Member.unban:3 of
msgid "Unbans this member. Equivalent to :meth:`Guild.unban`."
msgstr ""

#: disnake.member.Member.kick:3 of
msgid "Kicks this member. Equivalent to :meth:`Guild.kick`."
msgstr ""

#: disnake.member.Member.edit:3 of
msgid "Edits the member's data."
msgstr ""

#: disnake.member.Member.edit:5 of
msgid ""
"Depending on the parameter passed, this requires different permissions "
"listed below:"
msgstr ""

#: disnake.member.Member.edit:8 of
msgid "Parameter"
msgstr ""

#: disnake.member.Member.edit:8 of
msgid "Permission"
msgstr ""

#: disnake.member.Member.edit:10 of
msgid "nick"
msgstr ""

#: disnake.member.Member.edit:10 of
msgid ":attr:`Permissions.manage_nicknames`"
msgstr ""

#: disnake.member.Member.edit:12 of
msgid "mute"
msgstr ""

#: disnake.member.Member.edit:12 of
msgid ":attr:`Permissions.mute_members`"
msgstr ""

#: disnake.member.Member.edit:14 of
msgid "deafen"
msgstr ""

#: disnake.member.Member.edit:14 of
msgid ":attr:`Permissions.deafen_members`"
msgstr ""

#: disnake.member.Member.edit:16 of
msgid ":attr:`Permissions.manage_roles`"
msgstr ""

#: disnake.member.Member.edit:18 of
msgid "voice_channel"
msgstr ""

#: disnake.member.Member.edit:18 of
msgid ":attr:`Permissions.move_members`"
msgstr ""

#: disnake.member.Member.edit:23 of
msgid "Can now pass ``None`` to ``voice_channel`` to kick a member from voice."
msgstr ""

#: disnake.member.Member.edit:26 of
msgid "The newly member is now optionally returned, if applicable."
msgstr ""

#: disnake.member.Member.edit:29 of
msgid "The member's new nickname. Use ``None`` to remove the nickname."
msgstr ""

#: disnake.member.Member.edit:31 of
msgid "Indicates if the member should be guild muted or un-muted."
msgstr ""

#: disnake.member.Member.edit:33 of
msgid "Indicates if the member should be guild deafened or un-deafened."
msgstr ""

#: disnake.member.Member.edit:35 of
msgid ""
"Indicates if the member should be suppressed in stage channels.  .. "
"versionadded:: 1.7"
msgstr ""

#: disnake.member.Member.edit:35 of
msgid "Indicates if the member should be suppressed in stage channels."
msgstr ""

#: disnake.member.Member.edit:39 of
msgid "The member's new list of roles. This *replaces* the roles."
msgstr ""

#: disnake.member.Member.edit:41 of
msgid ""
"The voice channel to move the member to. Pass ``None`` to kick them from "
"voice."
msgstr ""

#: disnake.member.Member.edit:44 of
msgid "The reason for editing this member. Shows up on the audit log."
msgstr ""

#: disnake.member.Member.edit:47 disnake.member.Member.request_to_speak:14 of
msgid "You do not have the proper permissions to the action requested."
msgstr ""

#: disnake.member.Member.edit:48 disnake.member.Member.request_to_speak:15 of
msgid "The operation failed."
msgstr ""

#: disnake.member.Member.edit:50 of
msgid ""
"The newly updated member, if applicable. This is only returned when "
"certain fields are updated."
msgstr ""

#: disnake.member.Member.edit:52 of
msgid "Optional[:class:`.Member`]"
msgstr ""

#: disnake.member.Member.request_to_speak:3 of
msgid "Request to speak in the connected channel."
msgstr ""

#: disnake.member.Member.request_to_speak:5 disnake.member.VoiceState:45 of
msgid "Only applies to stage channels."
msgstr ""

#: disnake.member.Member.request_to_speak:9 of
msgid ""
"Requesting members that are not the client is equivalent to :attr:`.edit`"
" providing ``suppress`` as ``False``."
msgstr ""

#: disnake.member.Member.move_to:3 of
msgid "Moves a member to a new voice channel (they must be connected first)."
msgstr ""

#: disnake.member.Member.move_to:5 of
msgid ""
"You must have the :attr:`~Permissions.move_members` permission to use "
"this."
msgstr ""

#: disnake.member.Member.move_to:8 of
msgid "This raises the same exceptions as :meth:`edit`."
msgstr ""

#: disnake.member.Member.move_to:10 of
msgid "Can now pass ``None`` to kick a member from voice."
msgstr ""

#: disnake.member.Member.move_to:13 of
msgid ""
"The new voice channel to move the member to. Pass ``None`` to kick them "
"from voice."
msgstr ""

#: disnake.member.Member.add_roles:3 of
msgid "Gives the member a number of :class:`Role`\\s."
msgstr ""

#: disnake.member.Member.add_roles:5 of
msgid ""
"You must have the :attr:`~Permissions.manage_roles` permission to use "
"this, and the added :class:`Role`\\s must appear lower in the list of "
"roles than the highest role of the member."
msgstr ""

#: disnake.member.Member.add_roles:9 of
msgid ""
"An argument list of :class:`abc.Snowflake` representing a :class:`Role` "
"to give to the member."
msgstr ""

#: disnake.member.Member.add_roles:12 of
msgid "The reason for adding these roles. Shows up on the audit log."
msgstr ""

#: disnake.member.Member.add_roles:14 of
msgid ""
"Whether to atomically add roles. This will ensure that multiple "
"operations will always be applied regardless of the current state of the "
"cache."
msgstr ""

#: disnake.member.Member.add_roles:19 of
msgid "You do not have permissions to add these roles."
msgstr ""

#: disnake.member.Member.add_roles:20 of
msgid "Adding roles failed."
msgstr ""

#: disnake.member.Member.remove_roles:3 of
msgid "Removes :class:`Role`\\s from this member."
msgstr ""

#: disnake.member.Member.remove_roles:5 of
msgid ""
"You must have the :attr:`~Permissions.manage_roles` permission to use "
"this, and the removed :class:`Role`\\s must appear lower in the list of "
"roles than the highest role of the member."
msgstr ""

#: disnake.member.Member.remove_roles:9 of
msgid ""
"An argument list of :class:`abc.Snowflake` representing a :class:`Role` "
"to remove from the member."
msgstr ""

#: disnake.member.Member.remove_roles:12 of
msgid "The reason for removing these roles. Shows up on the audit log."
msgstr ""

#: disnake.member.Member.remove_roles:14 of
msgid ""
"Whether to atomically remove roles. This will ensure that multiple "
"operations will always be applied regardless of the current state of the "
"cache."
msgstr ""

#: disnake.member.Member.remove_roles:19 of
msgid "You do not have permissions to remove these roles."
msgstr ""

#: disnake.member.Member.remove_roles:20 of
msgid "Removing the roles failed."
msgstr ""

#: disnake.member.Member.get_role:1 of
msgid "Returns a role with the given ID from roles which the member has."
msgstr ""

#: disnake.member.Member.get_role:8 of
msgid "The role or ``None`` if not found in the member's roles."
msgstr ""

#: ../../api.rst:3819
msgid "Spotify"
msgstr ""

#: disnake.activity.Spotify:1 of
msgid ""
"Represents a Spotify listening activity from Discord. This is a special "
"case of :class:`Activity` that makes it easier to work with the Spotify "
"integration."
msgstr ""

#: disnake.activity.CustomActivity:7 disnake.activity.Spotify:8 of
msgid "Checks if two activities are equal."
msgstr ""

#: disnake.activity.CustomActivity:11 disnake.activity.Spotify:12 of
msgid "Checks if two activities are not equal."
msgstr ""

#: disnake.activity.CustomActivity:15 disnake.activity.Spotify:16 of
msgid "Returns the activity's hash."
msgstr ""

#: disnake.activity.Spotify:20 of
msgid "Returns the string 'Spotify'."
msgstr ""

#: disnake.CustomActivity.type:1 disnake.Spotify.type:1 of
msgid ""
"Returns the activity's type. This is for compatibility with "
":class:`Activity`."
msgstr ""

#: disnake.Spotify.type:3 of
msgid "It always returns :attr:`ActivityType.listening`."
msgstr ""

#: disnake.CustomActivity.type:5 disnake.Game.type:5 disnake.Spotify.type:5
#: disnake.Streaming.type:5 disnake.activity.Activity:34 of
msgid ":class:`ActivityType`"
msgstr ""

#: disnake.Spotify.created_at:1 of
msgid "When the user started listening in UTC."
msgstr ""

#: disnake.Spotify.color:1 disnake.Spotify.colour:1 of
msgid "Returns the Spotify integration colour, as a :class:`Colour`."
msgstr ""

#: disnake.Spotify.colour:3 of
msgid "There is an alias for this named :attr:`color`"
msgstr ""

#: disnake.Spotify.color:3 of
msgid "There is an alias for this named :attr:`colour`"
msgstr ""

#: disnake.Spotify.name:1 of
msgid "The activity's name. This will always return \"Spotify\"."
msgstr ""

#: disnake.Spotify.title:1 of
msgid "The title of the song being played."
msgstr ""

#: disnake.Spotify.artists:1 of
msgid "The artists of the song being played."
msgstr ""

#: disnake.Spotify.artist:1 of
msgid "The artist of the song being played."
msgstr ""

#: disnake.Spotify.artist:3 of
msgid ""
"This does not attempt to split the artist information into multiple "
"artists. Useful if there's only a single artist."
msgstr ""

#: disnake.Spotify.album:1 of
msgid "The album that the song being played belongs to."
msgstr ""

#: disnake.Spotify.album_cover_url:1 of
msgid "The album cover image URL from Spotify's CDN."
msgstr ""

#: disnake.Spotify.track_id:1 of
msgid "The track ID used by Spotify to identify this song."
msgstr ""

#: disnake.Spotify.track_url:1 of
msgid "The track URL to listen on Spotify."
msgstr ""

#: disnake.Spotify.start:1 of
msgid "When the user started playing this song in UTC."
msgstr ""

#: disnake.Spotify.end:1 of
msgid "When the user will stop playing this song in UTC."
msgstr ""

#: disnake.Spotify.duration:1 of
msgid "The duration of the song being played."
msgstr ""

#: disnake.Spotify.duration:3 of
msgid ":class:`datetime.timedelta`"
msgstr ""

#: disnake.Spotify.party_id:1 of
msgid "The party ID of the listening party."
msgstr ""

#: ../../api.rst:3827
msgid "VoiceState"
msgstr ""

#: disnake.member.VoiceState:1 of
msgid "Represents a Discord user's voice state."
msgstr ""

#: disnake.member.VoiceState:5 of
msgid "Indicates if the user is currently deafened by the guild."
msgstr ""

#: disnake.member.VoiceState:11 of
msgid "Indicates if the user is currently muted by the guild."
msgstr ""

#: disnake.member.VoiceState:17 of
msgid "Indicates if the user is currently muted by their own accord."
msgstr ""

#: disnake.member.VoiceState:23 of
msgid "Indicates if the user is currently deafened by their own accord."
msgstr ""

#: disnake.member.VoiceState:29 of
msgid "Indicates if the user is currently streaming via 'Go Live' feature."
msgstr ""

#: disnake.member.VoiceState:37 of
msgid "Indicates if the user is currently broadcasting video."
msgstr ""

#: disnake.member.VoiceState:43 of
msgid "Indicates if the user is suppressed from speaking."
msgstr ""

#: disnake.member.VoiceState:53 of
msgid ""
"An aware datetime object that specifies the date and time in UTC that the"
" member requested to speak. It will be ``None`` if they are not "
"requesting to speak anymore or have been accepted to speak."
msgstr ""

#: disnake.member.VoiceState:57 of
msgid "Only applicable to stage channels."
msgstr ""

#: disnake.member.VoiceState:65 of
msgid "Indicates if the user is currently in the AFK channel in the guild."
msgstr ""

#: disnake.member.VoiceState:71 of
msgid ""
"The voice channel that the user is currently connected to. ``None`` if "
"the user is not currently in a voice channel."
msgstr ""

#: disnake.member.VoiceState:74 of
msgid "Optional[Union[:class:`VoiceChannel`, :class:`StageChannel`]]"
msgstr ""

#: ../../api.rst:3835
msgid "Emoji"
msgstr ""

#: disnake.emoji.Emoji:1 of
msgid "Represents a custom emoji."
msgstr ""

#: disnake.emoji.Emoji:10 disnake.partial_emoji.PartialEmoji:12 of
msgid "Checks if two emoji are the same."
msgstr ""

#: disnake.emoji.Emoji:14 disnake.partial_emoji.PartialEmoji:16 of
msgid "Checks if two emoji are not the same."
msgstr ""

#: disnake.emoji.Emoji:18 disnake.partial_emoji.PartialEmoji:20 of
msgid "Return the emoji's hash."
msgstr ""

#: disnake.emoji.Emoji:22 of
msgid ""
"Returns an iterator of ``(field, value)`` pairs. This allows this class "
"to be used as an iterable in list/dict/etc constructions."
msgstr ""

#: disnake.emoji.Emoji:27 disnake.partial_emoji.PartialEmoji:24 of
msgid "Returns the emoji rendered for disnake."
msgstr ""

#: disnake.emoji.Emoji:31 of
msgid "The name of the emoji."
msgstr ""

#: disnake.emoji.Emoji:43 of
msgid ""
"If colons are required to use this emoji in the client (:PJSalt: vs "
"PJSalt)."
msgstr ""

#: disnake.emoji.Emoji:49 of
msgid "Whether an emoji is animated or not."
msgstr ""

#: disnake.emoji.Emoji:55 of
msgid "If this emoji is managed by a Twitch integration."
msgstr ""

#: disnake.emoji.Emoji:61 of
msgid "The guild ID the emoji belongs to."
msgstr ""

#: disnake.emoji.Emoji:67 of
msgid "Whether the emoji is available for use."
msgstr ""

#: disnake.emoji.Emoji:73 of
msgid ""
"The user that created the emoji. This can only be retrieved using "
":meth:`Guild.fetch_emoji` and having the "
":attr:`~Permissions.manage_emojis` permission."
msgstr ""

#: disnake.Emoji.created_at:1 of
msgid "Returns the emoji's creation time in UTC."
msgstr ""

#: disnake.Emoji.url:1 of
msgid "Returns the URL of the emoji."
msgstr ""

#: disnake.Emoji.roles:1 of
msgid "A :class:`list` of roles that is allowed to use this emoji."
msgstr ""

#: disnake.Emoji.roles:3 of
msgid "If roles is empty, the emoji is unrestricted."
msgstr ""

#: disnake.Emoji.guild:1 of
msgid "The guild this emoji belongs to."
msgstr ""

#: disnake.emoji.Emoji.is_usable:1 of
msgid ":class:`bool`: Whether the bot can use this emoji."
msgstr ""

#: disnake.emoji.Emoji.delete:3 of
msgid "Deletes the custom emoji."
msgstr ""

#: disnake.emoji.Emoji.edit:3 of
msgid "Edits the custom emoji."
msgstr ""

#: disnake.emoji.Emoji.edit:8 of
msgid "The newly updated emoji is returned."
msgstr ""

#: disnake.emoji.Emoji.edit:11 of
msgid "The new emoji name."
msgstr ""

#: disnake.emoji.Emoji.edit:13 of
msgid ""
"A list of roles that can use this emoji. An empty list can be passed to "
"make it available to everyone."
msgstr ""

#: disnake.emoji.Emoji.edit:15 of
msgid "The reason for editing this emoji. Shows up on the audit log."
msgstr ""

#: disnake.emoji.Emoji.edit:18 of
msgid "You are not allowed to edit emojis."
msgstr ""

#: disnake.emoji.Emoji.edit:19 of
msgid "An error occurred editing the emoji."
msgstr ""

#: disnake.emoji.Emoji.edit:21 of
msgid "The newly updated emoji."
msgstr ""

#: ../../api.rst:3844
msgid "PartialEmoji"
msgstr ""

#: disnake.partial_emoji.PartialEmoji:1 of
msgid "Represents a \"partial\" emoji."
msgstr ""

#: disnake.partial_emoji.PartialEmoji:3 of
msgid "This model will be given in two scenarios:"
msgstr ""

#: disnake.partial_emoji.PartialEmoji:5 of
msgid "\"Raw\" data events such as :func:`on_raw_reaction_add`"
msgstr ""

#: disnake.partial_emoji.PartialEmoji:6 of
msgid "Custom emoji that the bot cannot see from e.g. :attr:`Message.reactions`"
msgstr ""

#: disnake.partial_emoji.PartialEmoji:28 of
msgid ""
"The custom emoji name, if applicable, or the unicode codepoint of the "
"non-custom emoji. This can be ``None`` if the emoji got deleted (e.g. "
"removing a reaction with a deleted emoji)."
msgstr ""

#: disnake.partial_emoji.PartialEmoji:36 of
msgid "Whether the emoji is animated or not."
msgstr ""

#: disnake.partial_emoji.PartialEmoji:42 of
msgid "The ID of the custom emoji, if applicable."
msgstr ""

#: disnake.partial_emoji.PartialEmoji.from_str:1 of
msgid ""
"Converts a Discord string representation of an emoji to a "
":class:`PartialEmoji`."
msgstr ""

#: disnake.partial_emoji.PartialEmoji.from_str:3 of
msgid "The formats accepted are:"
msgstr ""

#: disnake.partial_emoji.PartialEmoji.from_str:5 of
msgid "``a:name:id``"
msgstr ""

#: disnake.partial_emoji.PartialEmoji.from_str:6 of
msgid "``<a:name:id>``"
msgstr ""

#: disnake.partial_emoji.PartialEmoji.from_str:7 of
msgid "``name:id``"
msgstr ""

#: disnake.partial_emoji.PartialEmoji.from_str:8 of
msgid "``<:name:id>``"
msgstr ""

#: disnake.partial_emoji.PartialEmoji.from_str:10 of
msgid "If the format does not match then it is assumed to be a unicode emoji."
msgstr ""

#: disnake.partial_emoji.PartialEmoji.from_str:14 of
msgid "The string representation of an emoji."
msgstr ""

#: disnake.partial_emoji.PartialEmoji.from_str:17 of
msgid "The partial emoji from this string."
msgstr ""

#: disnake.partial_emoji.PartialEmoji.from_str:18
#: disnake.raw_models.RawReactionActionEvent:32
#: disnake.raw_models.RawReactionClearEmojiEvent:27 of
msgid ":class:`PartialEmoji`"
msgstr ""

#: disnake.partial_emoji.PartialEmoji.is_custom_emoji:1 of
msgid ":class:`bool`: Checks if this is a custom non-Unicode emoji."
msgstr ""

#: disnake.partial_emoji.PartialEmoji.is_unicode_emoji:1 of
msgid ":class:`bool`: Checks if this is a Unicode emoji."
msgstr ""

#: disnake.PartialEmoji.created_at:1 of
msgid "Returns the emoji's creation time in UTC, or None if Unicode emoji."
msgstr ""

#: disnake.PartialEmoji.url:1 of
msgid "Returns the URL of the emoji, if it is custom."
msgstr ""

#: disnake.PartialEmoji.url:3 of
msgid "If this isn't a custom emoji then an empty string is returned"
msgstr ""

#: ../../api.rst:3853
msgid "Role"
msgstr ""

#: disnake.role.Role:1 of
msgid "Represents a Discord role in a :class:`Guild`."
msgstr ""

#: disnake.role.Role:7 of
msgid "Checks if two roles are equal."
msgstr ""

#: disnake.role.Role:11 of
msgid "Checks if two roles are not equal."
msgstr ""

#: disnake.role.Role:15 of
msgid "Checks if a role is higher than another in the hierarchy."
msgstr ""

#: disnake.role.Role:19 of
msgid "Checks if a role is lower than another in the hierarchy."
msgstr ""

#: disnake.role.Role:23 of
msgid "Checks if a role is higher or equal to another in the hierarchy."
msgstr ""

#: disnake.role.Role:27 of
msgid "Checks if a role is lower or equal to another in the hierarchy."
msgstr ""

#: disnake.role.Role:31 of
msgid "Return the role's hash."
msgstr ""

#: disnake.role.Role:35 of
msgid "Returns the role's name."
msgstr ""

#: disnake.role.Role:39 of
msgid "The ID for the role."
msgstr ""

#: disnake.role.Role:45 of
msgid "The name of the role."
msgstr ""

#: disnake.role.Role:51 of
msgid "The guild the role belongs to."
msgstr ""

#: disnake.role.Role:57 of
msgid "Indicates if the role will be displayed separately from other members."
msgstr ""

#: disnake.role.Role:63 of
msgid ""
"The position of the role. This number is usually positive. The bottom "
"role has a position of 0."
msgstr ""

#: disnake.role.Role:68 of
msgid ""
"Multiple roles can have the same position number. As a consequence of "
"this, comparing via role position is prone to subtle bugs if checking for"
" role hierarchy. The recommended and correct way to compare for roles in "
"the hierarchy is using the comparison operators on the role objects "
"themselves."
msgstr ""

#: disnake.role.Role:78 of
msgid ""
"Indicates if the role is managed by the guild through some form of "
"integrations such as Twitch."
msgstr ""

#: disnake.role.Role:85 of
msgid "Indicates if the role can be mentioned by users."
msgstr ""

#: disnake.role.Role:91 of
msgid "The role tags associated with this role."
msgstr ""

#: disnake.role.Role:93 of
msgid "Optional[:class:`RoleTags`]"
msgstr ""

#: disnake.role.Role.is_default:1 of
msgid ":class:`bool`: Checks if the role is the default role."
msgstr ""

#: disnake.role.Role.is_bot_managed:1 disnake.role.RoleTags.is_bot_managed:1 of
msgid ":class:`bool`: Whether the role is associated with a bot."
msgstr ""

#: disnake.role.Role.is_premium_subscriber:1
#: disnake.role.RoleTags.is_premium_subscriber:1 of
msgid ""
":class:`bool`: Whether the role is the premium subscriber, AKA \"boost\","
" role for the guild."
msgstr ""

#: disnake.role.Role.is_integration:1 disnake.role.RoleTags.is_integration:1 of
msgid ":class:`bool`: Whether the role is managed by an integration."
msgstr ""

#: disnake.role.Role.is_assignable:1 of
msgid ""
":class:`bool`: Whether the role is able to be assigned or removed by the "
"bot."
msgstr ""

#: disnake.Role.permissions:1 of
msgid "Returns the role's permissions."
msgstr ""

#: disnake.Role.colour:1 of
msgid "Returns the role colour. An alias exists under ``color``."
msgstr ""

#: disnake.Role.color:1 of
msgid "Returns the role color. An alias exists under ``colour``."
msgstr ""

#: disnake.Role.icon:1 of
msgid "Returns the role's icon asset, if available."
msgstr ""

#: disnake.Role.emoji:1 of
msgid "Returns the role's emoji, if available."
msgstr ""

#: disnake.Role.created_at:1 of
msgid "Returns the role's creation time in UTC."
msgstr ""

#: disnake.Role.mention:1 of
msgid "Returns a string that allows you to mention a role."
msgstr ""

#: disnake.Role.members:1 of
msgid "Returns all the members with this role."
msgstr ""

#: disnake.role.Role.edit:3 of
msgid "Edits the role."
msgstr ""

#: disnake.role.Role.delete:5 disnake.role.Role.edit:5 of
msgid ""
"You must have the :attr:`~Permissions.manage_roles` permission to use "
"this."
msgstr ""

#: disnake.role.Role.edit:13 of
msgid "Edits are no longer in-place, the newly edited role is returned instead."
msgstr ""

#: disnake.role.Role.edit:16 of
msgid "The new role name to change to."
msgstr ""

#: disnake.role.Role.edit:18 of
msgid "The new permissions to change to."
msgstr ""

#: disnake.role.Role.edit:20 of
msgid "The new colour to change to. (aliased to color as well)"
msgstr ""

#: disnake.role.Role.edit:22 of
msgid "Indicates if the role should be shown separately in the member list."
msgstr ""

#: disnake.role.Role.edit:28 of
msgid "Indicates if the role should be mentionable by others."
msgstr ""

#: disnake.role.Role.edit:30 of
msgid ""
"The new role's position. This must be below your top role's position or "
"it will fail."
msgstr ""

#: disnake.role.Role.edit:33 of
msgid "The reason for editing this role. Shows up on the audit log."
msgstr ""

#: disnake.role.Role.edit:36 of
msgid "You do not have permissions to change the role."
msgstr ""

#: disnake.role.Role.edit:37 of
msgid "Editing the role failed."
msgstr ""

#: disnake.role.Role.edit:38 of
msgid ""
"An invalid position was given or the default     role was asked to be "
"moved."
msgstr ""

#: disnake.role.Role.edit:40 of
msgid "The newly edited role."
msgstr ""

#: disnake.role.Role.delete:3 of
msgid "Deletes the role."
msgstr ""

#: disnake.role.Role.delete:8 of
msgid "The reason for deleting this role. Shows up on the audit log."
msgstr ""

#: disnake.role.Role.delete:11 of
msgid "You do not have permissions to delete the role."
msgstr ""

#: disnake.role.Role.delete:12 of
msgid "Deleting the role failed."
msgstr ""

#: ../../api.rst:3861
msgid "RoleTags"
msgstr ""

#: disnake.role.RoleTags:1 of
msgid "Represents tags on a role."
msgstr ""

#: disnake.role.RoleTags:3 of
msgid ""
"A role tag is a piece of extra information attached to a managed role "
"that gives it context for the reason the role is managed."
msgstr ""

#: disnake.role.RoleTags:6 of
msgid ""
"While this can be accessed, a useful interface is also provided in the "
":class:`Role` and :class:`Guild` classes as well."
msgstr ""

#: disnake.role.RoleTags:13 of
msgid "The bot's user ID that manages this role."
msgstr ""

#: disnake.role.RoleTags:19 of
msgid "The integration ID that manages the role."
msgstr ""

#: ../../api.rst:3869
msgid "PartialMessageable"
msgstr ""

#: disnake.channel.PartialMessageable:1 of
msgid ""
"Represents a partial messageable to aid with working messageable channels"
" when only a channel ID are present."
msgstr ""

#: disnake.channel.PartialMessageable:4 of
msgid ""
"The only way to construct this class is through "
":meth:`Client.get_partial_messageable`."
msgstr ""

#: disnake.channel.PartialMessageable:6 disnake.message.PartialMessage:11 of
msgid "Note that this class is trimmed down and has no rich attributes."
msgstr ""

#: disnake.channel.PartialMessageable:14 of
msgid "Checks if two partial messageables are equal."
msgstr ""

#: disnake.channel.PartialMessageable:18 of
msgid "Checks if two partial messageables are not equal."
msgstr ""

#: disnake.channel.PartialMessageable:22 of
msgid "Returns the partial messageable's hash."
msgstr ""

#: disnake.channel.PartialMessageable:26 of
msgid "The channel ID associated with this partial messageable."
msgstr ""

#: disnake.channel.PartialMessageable:32 of
msgid "The channel type associated with this partial messageable, if given."
msgstr ""

#: disnake.channel.PartialMessageable:34 of
msgid "Optional[:class:`ChannelType`]"
msgstr ""

#: disnake.channel.DMChannel.get_partial_message:1
#: disnake.channel.PartialMessageable.get_partial_message:1
#: disnake.channel.TextChannel.get_partial_message:1
#: disnake.threads.Thread.get_partial_message:1 of
msgid "Creates a :class:`PartialMessage` from the message ID."
msgstr ""

#: disnake.channel.DMChannel.get_partial_message:3
#: disnake.channel.PartialMessageable.get_partial_message:3
#: disnake.channel.TextChannel.get_partial_message:3
#: disnake.threads.Thread.get_partial_message:3 of
msgid ""
"This is useful if you want to work with a message and only have its ID "
"without doing an unnecessary API call."
msgstr ""

#: disnake.channel.DMChannel.get_partial_message:8
#: disnake.channel.PartialMessageable.get_partial_message:6
#: disnake.channel.TextChannel.get_partial_message:8
#: disnake.threads.Thread.get_partial_message:8 of
msgid "The message ID to create a partial message for."
msgstr ""

#: disnake.channel.DMChannel.get_partial_message:11
#: disnake.channel.PartialMessageable.get_partial_message:9
#: disnake.channel.TextChannel.get_partial_message:11
#: disnake.threads.Thread.get_partial_message:11 of
msgid "The partial message."
msgstr ""

#: disnake.channel.DMChannel.get_partial_message:12
#: disnake.channel.PartialMessageable.get_partial_message:10
#: disnake.channel.TextChannel.get_partial_message:12
#: disnake.threads.Thread.get_partial_message:12 of
msgid ":class:`PartialMessage`"
msgstr ""

#: ../../api.rst:3878
msgid "TextChannel"
msgstr ""

#: disnake.channel.TextChannel:1 of
msgid "Represents a Discord guild text channel."
msgstr ""

#: disnake.channel.CategoryChannel:9 disnake.channel.DMChannel:7
#: disnake.channel.GroupChannel:7 disnake.channel.StageChannel:9
#: disnake.channel.StoreChannel:7 disnake.channel.TextChannel:7
#: disnake.channel.VoiceChannel:7 of
msgid "Checks if two channels are equal."
msgstr ""

#: disnake.channel.CategoryChannel:13 disnake.channel.DMChannel:11
#: disnake.channel.GroupChannel:11 disnake.channel.StageChannel:13
#: disnake.channel.StoreChannel:11 disnake.channel.TextChannel:11
#: disnake.channel.VoiceChannel:11 of
msgid "Checks if two channels are not equal."
msgstr ""

#: disnake.channel.DMChannel:15 disnake.channel.GroupChannel:15
#: disnake.channel.StageChannel:17 disnake.channel.StoreChannel:15
#: disnake.channel.TextChannel:15 disnake.channel.VoiceChannel:15 of
msgid "Returns the channel's hash."
msgstr ""

#: disnake.channel.StageChannel:21 disnake.channel.StoreChannel:19
#: disnake.channel.TextChannel:19 disnake.channel.VoiceChannel:19 of
msgid "Returns the channel's name."
msgstr ""

#: disnake.channel.StageChannel:37 disnake.channel.StoreChannel:35
#: disnake.channel.TextChannel:35 disnake.channel.VoiceChannel:35 of
msgid "The channel ID."
msgstr ""

#: disnake.channel.StageChannel:49 disnake.channel.TextChannel:41
#: disnake.channel.VoiceChannel:41 of
msgid "The category channel ID this channel belongs to, if applicable."
msgstr ""

#: disnake.channel.TextChannel:47 of
msgid "The channel's topic. ``None`` if it doesn't exist."
msgstr ""

#: disnake.channel.TextChannel:60 of
msgid ""
"The last message ID of the message sent to this channel. It may *not* "
"point to an existing or valid message."
msgstr ""

#: disnake.channel.TextChannel:67 of
msgid ""
"The number of seconds a member must wait between sending messages in this"
" channel. A value of `0` denotes that it is disabled. Bots and users with"
" :attr:`~Permissions.manage_channels` or "
":attr:`~Permissions.manage_messages` bypass slowmode."
msgstr ""

#: disnake.channel.CategoryChannel:50 disnake.channel.StoreChannel:54
#: disnake.channel.TextChannel:76 of
msgid "If the channel is marked as \"not safe for work\"."
msgstr ""

#: disnake.channel.CategoryChannel:54 disnake.channel.StoreChannel:58
#: disnake.channel.TextChannel:80 of
msgid ""
"To check if the channel or the guild of that channel are marked as NSFW, "
"consider :meth:`is_nsfw` instead."
msgstr ""

#: disnake.channel.TextChannel:86 of
msgid ""
"The default auto archive duration in minutes for threads created in this "
"channel."
msgstr ""

#: disnake.CategoryChannel.type:1 disnake.DMChannel.type:1
#: disnake.GroupChannel.type:1 disnake.StageChannel.type:1
#: disnake.StoreChannel.type:1 disnake.TextChannel.type:1 disnake.Thread.type:1
#: disnake.VoiceChannel.type:1 of
msgid "The channel's Discord type."
msgstr ""

#: disnake.CategoryChannel.type:3 disnake.DMChannel.type:3
#: disnake.GroupChannel.type:3 disnake.StageChannel.type:3
#: disnake.StoreChannel.type:3 disnake.TextChannel.type:3 disnake.Thread.type:3
#: disnake.VoiceChannel.type:3 disnake.invite.PartialInviteChannel:40 of
msgid ":class:`ChannelType`"
msgstr ""

#: disnake.TextChannel.members:1 of
msgid "Returns all members that can see this channel."
msgstr ""

#: disnake.TextChannel.threads:1 of
msgid "Returns all the threads that you can see."
msgstr ""

#: disnake.channel.StoreChannel.is_nsfw:1 disnake.channel.TextChannel.is_nsfw:1
#: of
msgid ":class:`bool`: Checks if the channel is NSFW."
msgstr ""

#: disnake.channel.TextChannel.is_news:1 of
msgid ":class:`bool`: Checks if the channel is a news channel."
msgstr ""

#: disnake.TextChannel.last_message:1 disnake.Thread.last_message:1 of
msgid "Fetches the last message from this channel in cache."
msgstr ""

#: disnake.TextChannel.last_message:3 disnake.Thread.last_message:3 of
msgid "The message might not be valid or point to an existing message."
msgstr ""

#: disnake.TextChannel.last_message:5 disnake.Thread.last_message:5 of
msgid "Reliable Fetching"
msgstr ""

#: disnake.TextChannel.last_message:8 disnake.Thread.last_message:8 of
msgid ""
"For a slightly more reliable method of fetching the last message, "
"consider using either :meth:`history` or :meth:`fetch_message` with the "
":attr:`last_message_id` attribute."
msgstr ""

#: disnake.TextChannel.last_message:13 disnake.Thread.last_message:13 of
msgid "The last message in this channel or ``None`` if not found."
msgstr ""

#: disnake.channel.CategoryChannel.edit:3 disnake.channel.StageChannel.edit:3
#: disnake.channel.StoreChannel.edit:3 disnake.channel.TextChannel.edit:3
#: disnake.channel.VoiceChannel.edit:3 of
msgid "Edits the channel."
msgstr ""

#: disnake.channel.CategoryChannel.edit:5
#: disnake.channel.StageChannel.create_instance:5
#: disnake.channel.StageChannel.edit:5 disnake.channel.StoreChannel.edit:5
#: disnake.channel.TextChannel.edit:5 disnake.channel.VoiceChannel.edit:5
#: disnake.stage_instance.StageInstance.delete:5
#: disnake.stage_instance.StageInstance.edit:5 of
msgid ""
"You must have the :attr:`~Permissions.manage_channels` permission to use "
"this."
msgstr ""

#: disnake.channel.CategoryChannel.edit:8 disnake.channel.TextChannel.edit:8
#: disnake.channel.VoiceChannel.edit:8 of
msgid "The ``overwrites`` keyword-only parameter was added."
msgstr ""

#: disnake.channel.TextChannel.edit:11 of
msgid "The ``type`` keyword-only parameter was added."
msgstr ""

#: disnake.channel.CategoryChannel.edit:11 disnake.channel.StageChannel.edit:11
#: disnake.channel.StoreChannel.edit:8 disnake.channel.TextChannel.edit:14
#: disnake.channel.VoiceChannel.edit:11 of
msgid ""
"Edits are no longer in-place, the newly edited channel is returned "
"instead."
msgstr ""

#: disnake.channel.StoreChannel.edit:11 disnake.channel.TextChannel.edit:17 of
msgid "The new channel name."
msgstr ""

#: disnake.channel.StageChannel.edit:16 disnake.channel.StoreChannel.edit:13
#: disnake.channel.TextChannel.edit:21 disnake.channel.VoiceChannel.edit:20 of
msgid "The new channel's position."
msgstr ""

#: disnake.channel.StageChannel.edit:18 disnake.channel.StoreChannel.edit:17
#: disnake.channel.TextChannel.edit:25 disnake.channel.VoiceChannel.edit:22 of
msgid ""
"Whether to sync permissions with the channel's new or pre-existing "
"category. Defaults to ``False``."
msgstr ""

#: disnake.channel.StageChannel.edit:21 disnake.channel.StoreChannel.edit:20
#: disnake.channel.TextChannel.edit:28 disnake.channel.VoiceChannel.edit:25 of
msgid "The new category for this channel. Can be ``None`` to remove the category."
msgstr ""

#: disnake.channel.TextChannel.edit:31 of
msgid ""
"Specifies the slowmode rate limit for user in this channel, in seconds. A"
" value of `0` disables slowmode. The maximum value possible is `21600`."
msgstr ""

#: disnake.channel.TextChannel.edit:34 of
msgid ""
"Change the type of this text channel. Currently, only conversion between "
":attr:`ChannelType.text` and :attr:`ChannelType.news` is supported. This "
"is only available to guilds that contain ``NEWS`` in "
":attr:`Guild.features`."
msgstr ""

#: disnake.channel.StageChannel.edit:24 disnake.channel.StoreChannel.edit:23
#: disnake.channel.TextChannel.edit:38 disnake.channel.VoiceChannel.edit:28 of
msgid "The reason for editing this channel. Shows up on the audit log."
msgstr ""

#: disnake.channel.CategoryChannel.edit:22 disnake.channel.StageChannel.edit:26
#: disnake.channel.StoreChannel.edit:25 disnake.channel.TextChannel.edit:40
#: disnake.channel.VoiceChannel.edit:30 of
msgid ""
"A :class:`Mapping` of target (either a role or a member) to "
":class:`PermissionOverwrite` to apply to the channel."
msgstr ""

#: disnake.channel.TextChannel.edit:43 of
msgid ""
"The new default auto archive duration in minutes for threads created in "
"this channel. Must be one of ``60``, ``1440``, ``4320``, or ``10080``."
msgstr ""

#: disnake.channel.StoreChannel.edit:31 disnake.channel.TextChannel.edit:47 of
msgid ""
"If position is less than 0 or greater than the number of channels, or if"
"     the permission overwrite information is not in proper form."
msgstr ""

#: disnake.channel.StageChannel.edit:38 disnake.channel.StoreChannel.edit:32
#: disnake.channel.TextChannel.edit:48 disnake.channel.VoiceChannel.edit:44 of
msgid "You do not have permissions to edit the channel."
msgstr ""

#: disnake.channel.StageChannel.edit:39 disnake.channel.StoreChannel.edit:33
#: disnake.channel.TextChannel.edit:49 disnake.channel.VoiceChannel.edit:45 of
msgid "Editing the channel failed."
msgstr ""

#: disnake.channel.TextChannel.edit:51 of
msgid ""
"The newly edited text channel. If the edit was only positional then "
"``None`` is returned instead."
msgstr ""

#: disnake.channel.TextChannel.edit:53 of
msgid "Optional[:class:`.TextChannel`]"
msgstr ""

#: disnake.channel.TextChannel.delete_messages:3
#: disnake.threads.Thread.delete_messages:3 of
msgid ""
"Deletes a list of messages. This is similar to :meth:`Message.delete` "
"except it bulk deletes multiple messages."
msgstr ""

#: disnake.channel.TextChannel.delete_messages:6
#: disnake.threads.Thread.delete_messages:6 of
msgid ""
"As a special case, if the number of messages is 0, then nothing is done. "
"If the number of messages is 1 then single message delete is done. If "
"it's more than two, then bulk delete is used."
msgstr ""

#: disnake.channel.TextChannel.delete_messages:10
#: disnake.threads.Thread.delete_messages:10 of
msgid ""
"You cannot bulk delete more than 100 messages or messages that are older "
"than 14 days old."
msgstr ""

#: disnake.channel.TextChannel.delete_messages:13
#: disnake.threads.Thread.delete_messages:13 of
msgid ""
"You must have the :attr:`~Permissions.manage_messages` permission to use "
"this."
msgstr ""

#: disnake.channel.TextChannel.delete_messages:16
#: disnake.threads.Thread.delete_messages:18 of
msgid "An iterable of messages denoting which ones to bulk delete."
msgstr ""

#: disnake.channel.TextChannel.delete_messages:19
#: disnake.threads.Thread.delete_messages:21 of
msgid "The number of messages to delete was more than 100."
msgstr ""

#: disnake.channel.TextChannel.delete_messages:20 of
msgid "You do not have proper permissions to delete the messages."
msgstr ""

#: disnake.channel.TextChannel.delete_messages:21
#: disnake.threads.Thread.delete_messages:23 of
msgid "If single delete, then the message was already deleted."
msgstr ""

#: disnake.channel.TextChannel.delete_messages:22
#: disnake.threads.Thread.delete_messages:24 of
msgid "Deleting the messages failed."
msgstr ""

#: disnake.channel.TextChannel.purge:3 disnake.threads.Thread.purge:3 of
msgid ""
"Purges a list of messages that meet the criteria given by the predicate "
"``check``. If a ``check`` is not provided then all messages are deleted "
"without discrimination."
msgstr ""

#: disnake.channel.TextChannel.purge:7 of
msgid ""
"You must have the :attr:`~Permissions.manage_messages` permission to "
"delete messages even if they are your own. The "
":attr:`~Permissions.read_message_history` permission is also needed to "
"retrieve message history."
msgstr ""

#: disnake.channel.TextChannel.purge:14 disnake.threads.Thread.purge:14 of
msgid "Deleting bot's messages ::"
msgstr ""

#: disnake.channel.TextChannel.purge:22 disnake.threads.Thread.purge:22 of
msgid ""
"The number of messages to search through. This is not the number of "
"messages that will be deleted, though it can be."
msgstr ""

#: disnake.channel.TextChannel.purge:25 disnake.threads.Thread.purge:25 of
msgid ""
"The function used to check if a message should be deleted. It must take a"
" :class:`Message` as its sole parameter."
msgstr ""

#: disnake.channel.TextChannel.purge:28 disnake.threads.Thread.purge:28 of
msgid "Same as ``before`` in :meth:`history`."
msgstr ""

#: disnake.channel.TextChannel.purge:30 disnake.threads.Thread.purge:30 of
msgid "Same as ``after`` in :meth:`history`."
msgstr ""

#: disnake.channel.TextChannel.purge:32 disnake.threads.Thread.purge:32 of
msgid "Same as ``around`` in :meth:`history`."
msgstr ""

#: disnake.channel.TextChannel.purge:34 disnake.threads.Thread.purge:34 of
msgid "Same as ``oldest_first`` in :meth:`history`."
msgstr ""

#: disnake.channel.TextChannel.purge:36 disnake.threads.Thread.purge:36 of
msgid ""
"If ``True``, use bulk delete. Setting this to ``False`` is useful for "
"mass-deleting a bot's own messages without "
":attr:`Permissions.manage_messages`. When ``True``, will fall back to "
"single delete if messages are older than two weeks."
msgstr ""

#: disnake.channel.TextChannel.purge:41 disnake.threads.Thread.purge:41 of
msgid "You do not have proper permissions to do the actions required."
msgstr ""

#: disnake.channel.TextChannel.purge:42 disnake.threads.Thread.purge:42 of
msgid "Purging the messages failed."
msgstr ""

#: disnake.channel.TextChannel.purge:44 disnake.threads.Thread.purge:44 of
msgid "The list of messages that were deleted."
msgstr ""

#: disnake.channel.TextChannel.purge:45 disnake.threads.Thread.purge:45 of
msgid "List[:class:`.Message`]"
msgstr ""

#: disnake.channel.TextChannel.webhooks:3 of
msgid "Gets the list of webhooks from this channel."
msgstr ""

#: disnake.channel.TextChannel.webhooks:9 of
msgid "The webhooks for this channel."
msgstr ""

#: disnake.channel.TextChannel.create_webhook:3 of
msgid "Creates a webhook for this channel."
msgstr ""

#: disnake.channel.TextChannel.create_webhook:7 of
msgid "Added the ``reason`` keyword-only parameter."
msgstr ""

#: disnake.channel.TextChannel.create_webhook:10 of
msgid "The webhook's name."
msgstr ""

#: disnake.channel.TextChannel.create_webhook:12 of
msgid ""
"A :term:`py:bytes-like object` representing the webhook's default avatar."
" This operates similarly to :meth:`~ClientUser.edit`."
msgstr ""

#: disnake.channel.TextChannel.create_webhook:15 of
msgid "The reason for creating this webhook. Shows up in the audit logs."
msgstr ""

#: disnake.channel.TextChannel.create_webhook:18 of
msgid "Creating the webhook failed."
msgstr ""

#: disnake.channel.TextChannel.create_webhook:19 of
msgid "You do not have permissions to create a webhook."
msgstr ""

#: disnake.channel.TextChannel.create_webhook:21
#: disnake.channel.TextChannel.follow:22 of
msgid "The created webhook."
msgstr ""

#: disnake.channel.TextChannel.follow:1 of
msgid "Follows a channel using a webhook."
msgstr ""

#: disnake.channel.TextChannel.follow:3 of
msgid "Only news channels can be followed."
msgstr ""

#: disnake.channel.TextChannel.follow:7 of
msgid ""
"The webhook returned will not provide a token to do webhook actions, as "
"Discord does not provide it."
msgstr ""

#: disnake.channel.TextChannel.follow:12 of
msgid "The channel you would like to follow from."
msgstr ""

#: disnake.channel.TextChannel.follow:14 of
msgid ""
"The reason for following the channel. Shows up on the destination guild's"
" audit log.  .. versionadded:: 1.4"
msgstr ""

#: disnake.channel.TextChannel.follow:14 of
msgid ""
"The reason for following the channel. Shows up on the destination guild's"
" audit log."
msgstr ""

#: disnake.channel.TextChannel.follow:19 of
msgid "Following the channel failed."
msgstr ""

#: disnake.channel.TextChannel.follow:20 of
msgid "You do not have the permissions to create a webhook."
msgstr ""

#: disnake.channel.TextChannel.create_thread:3 of
msgid "Creates a thread in this text channel."
msgstr ""

#: disnake.channel.TextChannel.create_thread:5 of
msgid ""
"To create a public thread, you must have "
":attr:`~disnake.Permissions.create_public_threads`. For a private thread,"
" :attr:`~disnake.Permissions.create_private_threads` is needed instead."
msgstr ""

#: disnake.channel.TextChannel.create_thread:12 of
msgid ""
"A snowflake representing the message to create the thread with. If "
"``None`` is passed then a private thread is created. Defaults to "
"``None``."
msgstr ""

#: disnake.channel.TextChannel.create_thread:19 of
msgid ""
"The type of thread to create. If a ``message`` is passed then this "
"parameter is ignored, as a thread created with a message is always a "
"public thread. By default this creates a private thread if this is "
"``None``."
msgstr ""

#: disnake.channel.TextChannel.create_thread:23 of
msgid "The reason for creating a new thread. Shows up on the audit log."
msgstr ""

#: disnake.channel.TextChannel.create_thread:27 of
msgid "Starting the thread failed."
msgstr ""

#: disnake.channel.TextChannel.create_thread:29 of
msgid "The created thread"
msgstr ""

#: disnake.ThreadMember.thread:3 disnake.channel.TextChannel.create_thread:30
#: disnake.threads.Thread.edit:32 of
msgid ":class:`Thread`"
msgstr ""

#: disnake.channel.TextChannel.archived_threads:1 of
msgid ""
"Returns an :class:`~disnake.AsyncIterator` that iterates over all "
"archived threads in the guild."
msgstr ""

#: disnake.channel.TextChannel.archived_threads:3 of
msgid ""
"You must have :attr:`~Permissions.read_message_history` to use this. If "
"iterating over private threads then :attr:`~Permissions.manage_threads` "
"is also required."
msgstr ""

#: disnake.channel.TextChannel.archived_threads:8 of
msgid ""
"The number of threads to retrieve. If ``None``, retrieves every archived "
"thread in the channel. Note, however, that this would make it a slow "
"operation."
msgstr ""

#: disnake.channel.TextChannel.archived_threads:12 of
msgid "Retrieve archived channels before the given date or ID."
msgstr ""

#: disnake.channel.TextChannel.archived_threads:14 of
msgid "Whether to retrieve private archived threads."
msgstr ""

#: disnake.channel.TextChannel.archived_threads:16 of
msgid ""
"Whether to retrieve private archived threads that you've joined. You "
"cannot set ``joined`` to ``True`` and ``private`` to ``False``."
msgstr ""

#: disnake.channel.TextChannel.archived_threads:20 of
msgid "You do not have permissions to get archived threads."
msgstr ""

#: disnake.channel.TextChannel.archived_threads:21 of
msgid "The request to get the archived threads failed."
msgstr ""

#: disnake.channel.TextChannel.archived_threads:23 of
msgid ":class:`Thread` -- The archived threads."
msgstr ""

#: ../../api.rst:3894
msgid "Thread"
msgstr ""

#: disnake.threads.Thread:1 of
msgid "Represents a Discord thread."
msgstr ""

#: disnake.threads.Thread:7 of
msgid "Checks if two threads are equal."
msgstr ""

#: disnake.threads.Thread:11 of
msgid "Checks if two threads are not equal."
msgstr ""

#: disnake.threads.Thread:15 of
msgid "Returns the thread's hash."
msgstr ""

#: disnake.threads.Thread:19 of
msgid "Returns the thread's name."
msgstr ""

#: disnake.threads.Thread:25 of
msgid "The thread name."
msgstr ""

#: disnake.threads.Thread:31 of
msgid "The guild the thread belongs to."
msgstr ""

#: disnake.threads.Thread:37 of
msgid "The thread ID."
msgstr ""

#: disnake.threads.Thread:43 of
msgid "The parent :class:`TextChannel` ID this thread belongs to."
msgstr ""

#: disnake.threads.Thread:49 of
msgid "The user's ID that created this thread."
msgstr ""

#: disnake.threads.Thread:55 of
msgid ""
"The last message ID of the message sent to this thread. It may *not* "
"point to an existing or valid message."
msgstr ""

#: disnake.threads.Thread:62 of
msgid ""
"The number of seconds a member must wait between sending messages in this"
" thread. A value of `0` denotes that it is disabled. Bots and users with "
":attr:`~Permissions.manage_channels` or "
":attr:`~Permissions.manage_messages` bypass slowmode."
msgstr ""

#: disnake.threads.Thread:71 of
msgid "An approximate number of messages in this thread. This caps at 50."
msgstr ""

#: disnake.threads.Thread:77 of
msgid "An approximate number of members in this thread. This caps at 50."
msgstr ""

#: disnake.threads.Thread:83 of
msgid ""
"A thread member representing yourself, if you've joined the thread. This "
"could not be available."
msgstr ""

#: disnake.threads.Thread:86 of
msgid "Optional[:class:`ThreadMember`]"
msgstr ""

#: disnake.threads.Thread:90 of
msgid "Whether the thread is archived."
msgstr ""

#: disnake.threads.Thread:96 of
msgid "Whether the thread is locked."
msgstr ""

#: disnake.threads.Thread:102 of
msgid ""
"Whether non-moderators can add other non-moderators to this thread. This "
"is always ``True`` for public threads."
msgstr ""

#: disnake.threads.Thread:109 of
msgid "The user's ID that archived this thread."
msgstr ""

#: disnake.threads.Thread:115 of
msgid ""
"The duration in minutes until the thread is automatically archived due to"
" inactivity. Usually a value of 60, 1440, 4320 and 10080."
msgstr ""

#: disnake.threads.Thread:122 of
msgid ""
"An aware timestamp of when the thread's archived status was last updated "
"in UTC."
msgstr ""

#: disnake.Thread.parent:1 of
msgid "The parent channel this thread belongs to."
msgstr ""

#: disnake.Thread.owner:1 of
msgid "The member this thread belongs to."
msgstr ""

#: disnake.Thread.mention:1 of
msgid "The string that allows you to mention the thread."
msgstr ""

#: disnake.Thread.members:1 of
msgid "A list of thread members in this thread."
msgstr ""

#: disnake.Thread.members:3 of
msgid ""
"This requires :attr:`Intents.members` to be properly filled. Most of the "
"time however, this data is not provided by the gateway and a call to "
":meth:`fetch_members` is needed."
msgstr ""

#: disnake.Thread.members:7 disnake.threads.Thread.fetch_members:11 of
msgid "List[:class:`ThreadMember`]"
msgstr ""

#: disnake.Thread.category:1 of
msgid "The category channel the parent channel belongs to, if applicable."
msgstr ""

#: disnake.Thread.category:3 disnake.Thread.category_id:3 of
msgid "The parent channel was not cached and returned ``None``."
msgstr ""

#: disnake.Thread.category:5 of
msgid "The parent channel's category."
msgstr ""

#: disnake.Thread.category:6 of
msgid "Optional[:class:`CategoryChannel`]"
msgstr ""

#: disnake.Thread.category_id:1 of
msgid "The category channel ID the parent channel belongs to, if applicable."
msgstr ""

#: disnake.Thread.category_id:5 of
msgid "The parent channel's category ID."
msgstr ""

#: disnake.Thread.created_at:1 of
msgid "Returns the thread's creation time in UTC."
msgstr ""

#: disnake.threads.Thread.is_private:1 of
msgid ":class:`bool`: Whether the thread is a private thread."
msgstr ""

#: disnake.threads.Thread.is_private:3 of
msgid ""
"A private thread is only viewable by those that have been explicitly "
"invited or have :attr:`~.Permissions.manage_threads`."
msgstr ""

#: disnake.threads.Thread.is_news:1 of
msgid ":class:`bool`: Whether the thread is a news thread."
msgstr ""

#: disnake.threads.Thread.is_news:3 of
msgid ""
"A news thread is a thread that has a parent that is a news channel, i.e. "
":meth:`.TextChannel.is_news` is ``True``."
msgstr ""

#: disnake.threads.Thread.is_nsfw:1 of
msgid ":class:`bool`: Whether the thread is NSFW or not."
msgstr ""

#: disnake.threads.Thread.is_nsfw:3 of
msgid ""
"An NSFW thread is a thread that has a parent that is an NSFW channel, "
"i.e. :meth:`.TextChannel.is_nsfw` is ``True``."
msgstr ""

#: disnake.threads.Thread.permissions_for:4 of
msgid ""
"Since threads do not have their own permissions, they inherit them from "
"the parent channel. This is a convenience method for calling "
":meth:`~disnake.TextChannel.permissions_for` on the parent channel."
msgstr ""

#: disnake.threads.Thread.permissions_for:14 of
msgid "The parent channel was not cached and returned ``None``"
msgstr ""

#: disnake.threads.Thread.delete_messages:16 of
msgid "Usable only by bot accounts."
msgstr ""

#: disnake.threads.Thread.delete_messages:22 of
msgid ""
"You do not have proper permissions to delete the messages or     you're "
"not using a bot account."
msgstr ""

#: disnake.threads.Thread.purge:7 of
msgid ""
"You must have the :attr:`~Permissions.manage_messages` permission to "
"delete messages even if they are your own (unless you are a user "
"account). The :attr:`~Permissions.read_message_history` permission is "
"also needed to retrieve message history."
msgstr ""

#: disnake.threads.Thread.edit:3 of
msgid "Edits the thread."
msgstr ""

#: disnake.threads.Thread.edit:5 of
msgid ""
"Editing the thread requires :attr:`.Permissions.manage_threads`. The "
"thread creator can also edit ``name``, ``archived`` or "
"``auto_archive_duration``. Note that if the thread is locked then only "
"those with :attr:`.Permissions.manage_threads` can unarchive a thread."
msgstr ""

#: disnake.threads.Thread.edit:10 of
msgid "The thread must be unarchived to be edited."
msgstr ""

#: disnake.threads.Thread.edit:12 of
msgid "The new name of the thread."
msgstr ""

#: disnake.threads.Thread.edit:14 of
msgid "Whether to archive the thread or not."
msgstr ""

#: disnake.threads.Thread.edit:16 of
msgid "Whether to lock the thread or not."
msgstr ""

#: disnake.threads.Thread.edit:18 of
msgid ""
"Whether non-moderators can add other non-moderators to this thread. Only "
"available for private threads."
msgstr ""

#: disnake.threads.Thread.edit:21 of
msgid ""
"The new duration in minutes before a thread is automatically archived for"
" inactivity. Must be one of ``60``, ``1440``, ``4320``, or ``10080``."
msgstr ""

#: disnake.threads.Thread.edit:24 of
msgid ""
"Specifies the slowmode rate limit for user in this thread, in seconds. A "
"value of ``0`` disables slowmode. The maximum value possible is "
"``21600``."
msgstr ""

#: disnake.threads.Thread.edit:28 of
msgid "You do not have permissions to edit the thread."
msgstr ""

#: disnake.threads.Thread.edit:29 of
msgid "Editing the thread failed."
msgstr ""

#: disnake.threads.Thread.edit:31 of
msgid "The newly edited thread."
msgstr ""

#: disnake.threads.Thread.join:3 of
msgid "Joins this thread."
msgstr ""

#: disnake.threads.Thread.join:5 of
msgid ""
"You must have :attr:`~Permissions.send_messages_in_threads` to join a "
"thread. If the thread is private, :attr:`~Permissions.manage_threads` is "
"also needed."
msgstr ""

#: disnake.threads.Thread.join:8 of
msgid "You do not have permissions to join the thread."
msgstr ""

#: disnake.threads.Thread.join:9 of
msgid "Joining the thread failed."
msgstr ""

#: disnake.threads.Thread.leave:3 of
msgid "Leaves this thread."
msgstr ""

#: disnake.threads.Thread.leave:5 of
msgid "Leaving the thread failed."
msgstr ""

#: disnake.threads.Thread.add_user:3 of
msgid "Adds a user to this thread."
msgstr ""

#: disnake.threads.Thread.add_user:5 of
msgid ""
"You must have :attr:`~Permissions.send_messages` and "
":attr:`~Permissions.use_threads` to add a user to a public thread. If the"
" thread is private then :attr:`~Permissions.send_messages` and either "
":attr:`~Permissions.use_private_threads` or "
":attr:`~Permissions.manage_messages` is required to add a user to the "
"thread."
msgstr ""

#: disnake.threads.Thread.add_user:10 disnake.threads.Thread.remove_user:7 of
msgid "The user to add to the thread."
msgstr ""

#: disnake.threads.Thread.add_user:13 of
msgid "You do not have permissions to add the user to the thread."
msgstr ""

#: disnake.threads.Thread.add_user:14 of
msgid "Adding the user to the thread failed."
msgstr ""

#: disnake.threads.Thread.remove_user:3 of
msgid "Removes a user from this thread."
msgstr ""

#: disnake.threads.Thread.remove_user:5 of
msgid ""
"You must have :attr:`~Permissions.manage_threads` or be the creator of "
"the thread to remove a user."
msgstr ""

#: disnake.threads.Thread.remove_user:10 of
msgid "You do not have permissions to remove the user from the thread."
msgstr ""

#: disnake.threads.Thread.remove_user:11 of
msgid "Removing the user from the thread failed."
msgstr ""

#: disnake.threads.Thread.fetch_member:3 of
msgid "Retrieve a single :class:`ThreadMember` from this thread."
msgstr ""

#: disnake.threads.Thread.fetch_member:5 of
msgid "The ID of the member to fetch."
msgstr ""

#: disnake.threads.Thread.fetch_member:8 of
msgid "The specified member was not found."
msgstr ""

#: disnake.threads.Thread.fetch_member:9 of
msgid "Retrieving the member failed."
msgstr ""

#: disnake.threads.Thread.fetch_member:11 of
msgid "The thread member asked for."
msgstr ""

#: disnake.threads.Thread.fetch_member:12 of
msgid ":class:`ThreadMember`"
msgstr ""

#: disnake.threads.Thread.fetch_members:3 of
msgid "Retrieves all :class:`ThreadMember` that are in this thread."
msgstr ""

#: disnake.threads.Thread.fetch_members:5 of
msgid ""
"This requires :attr:`Intents.members` to get information about members "
"other than yourself."
msgstr ""

#: disnake.threads.Thread.fetch_members:8 of
msgid "Retrieving the members failed."
msgstr ""

#: disnake.threads.Thread.fetch_members:10 of
msgid "All thread members in the thread."
msgstr ""

#: disnake.threads.Thread.delete:3 of
msgid "Deletes this thread."
msgstr ""

#: disnake.threads.Thread.delete:5 of
msgid "You must have :attr:`~Permissions.manage_threads` to delete threads."
msgstr ""

#: disnake.threads.Thread.delete:7 of
msgid "You do not have permissions to delete this thread."
msgstr ""

#: disnake.threads.Thread.delete:8 of
msgid "Deleting the thread failed."
msgstr ""

#: ../../api.rst:3910
msgid "ThreadMember"
msgstr ""

#: disnake.threads.ThreadMember:1 of
msgid "Represents a Discord thread member."
msgstr ""

#: disnake.threads.ThreadMember:7 of
msgid "Checks if two thread members are equal."
msgstr ""

#: disnake.threads.ThreadMember:11 of
msgid "Checks if two thread members are not equal."
msgstr ""

#: disnake.threads.ThreadMember:15 of
msgid "Returns the thread member's hash."
msgstr ""

#: disnake.threads.ThreadMember:19 of
msgid "Returns the thread member's name."
msgstr ""

#: disnake.threads.ThreadMember:25 of
msgid "The thread member's ID."
msgstr ""

#: disnake.threads.ThreadMember:31 of
msgid "The thread's ID."
msgstr ""

#: disnake.threads.ThreadMember:37 of
msgid "The time the member joined the thread in UTC."
msgstr ""

#: disnake.ThreadMember.thread:1 of
msgid "The thread this member belongs to."
msgstr ""

#: ../../api.rst:3918
msgid "StoreChannel"
msgstr ""

#: disnake.channel.StoreChannel:1 of
msgid "Represents a Discord guild store channel."
msgstr ""

#: disnake.channel.StoreChannel:41 of
msgid "The category channel ID this channel belongs to."
msgstr ""

#: disnake.channel.StoreChannel.edit:25 of
msgid ""
"A :class:`Mapping` of target (either a role or a member) to "
":class:`PermissionOverwrite` to apply to the channel.  .. versionadded:: "
"1.3"
msgstr ""

#: disnake.channel.StoreChannel.edit:35 of
msgid ""
"The newly edited store channel. If the edit was only positional then "
"``None`` is returned instead."
msgstr ""

#: disnake.channel.StoreChannel.edit:37 of
msgid "Optional[:class:`.StoreChannel`]"
msgstr ""

#: ../../api.rst:3927
msgid "VoiceChannel"
msgstr ""

#: disnake.channel.VoiceChannel:1 of
msgid "Represents a Discord guild voice channel."
msgstr ""

#: disnake.channel.StageChannel:77 disnake.channel.VoiceChannel:71 of
msgid "Optional[:class:`VoiceRegion`]"
msgstr ""

#: disnake.channel.StageChannel.edit:14 disnake.channel.VoiceChannel.edit:14 of
msgid "The new channel's name."
msgstr ""

#: disnake.channel.VoiceChannel.edit:16 of
msgid "The new channel's bitrate."
msgstr ""

#: disnake.channel.VoiceChannel.edit:18 of
msgid "The new channel's user limit."
msgstr ""

#: disnake.channel.VoiceChannel.edit:33 of
msgid ""
"The new region for the voice channel's voice communication. A value of "
"``None`` indicates automatic voice region detection.  .. versionadded:: "
"1.7"
msgstr ""

#: disnake.channel.VoiceChannel.edit:33 of
msgid ""
"The new region for the voice channel's voice communication. A value of "
"``None`` indicates automatic voice region detection."
msgstr ""

#: disnake.channel.StageChannel.edit:37 disnake.channel.VoiceChannel.edit:43 of
msgid "If the permission overwrite information is not in proper form."
msgstr ""

#: disnake.channel.VoiceChannel.edit:47 of
msgid ""
"The newly edited voice channel. If the edit was only positional then "
"``None`` is returned instead."
msgstr ""

#: disnake.channel.VoiceChannel.edit:49 of
msgid "Optional[:class:`.VoiceChannel`]"
msgstr ""

#: disnake.abc.Connectable.connect:3 of
msgid ""
"Connects to voice and creates a :class:`VoiceClient` to establish your "
"connection to the voice server."
msgstr ""

#: ../../docstring disnake.MemberCacheFlags.voice:3
#: disnake.abc.Connectable.connect:6 of
msgid "This requires :attr:`Intents.voice_states`."
msgstr ""

#: disnake.abc.Connectable.connect:8 of
msgid "The timeout in seconds to wait for the voice endpoint."
msgstr ""

#: disnake.abc.Connectable.connect:10 of
msgid ""
"Whether the bot should automatically attempt a reconnect if a part of the"
" handshake fails or the gateway goes down."
msgstr ""

#: disnake.abc.Connectable.connect:14 of
msgid ""
"A type that subclasses :class:`~disnake.VoiceProtocol` to connect with. "
"Defaults to :class:`~disnake.VoiceClient`."
msgstr ""

#: disnake.abc.Connectable.connect:18 of
msgid "Could not connect to the voice channel in time."
msgstr ""

#: disnake.abc.Connectable.connect:19 of
msgid "You are already connected to a voice channel."
msgstr ""

#: disnake.abc.Connectable.connect:20 of
msgid "The opus library has not been loaded."
msgstr ""

#: disnake.abc.Connectable.connect:22 of
msgid "A voice client that is fully connected to the voice server."
msgstr ""

#: disnake.abc.Connectable.connect:23 of
msgid ":class:`~disnake.VoiceProtocol`"
msgstr ""

#: disnake.StageChannel.members:1 disnake.VoiceChannel.members:1 of
msgid "Returns all members that are currently inside this voice channel."
msgstr ""

#: disnake.StageChannel.voice_states:1 disnake.VoiceChannel.voice_states:1 of
msgid "Returns a mapping of member IDs who have voice states in this channel."
msgstr ""

#: disnake.StageChannel.voice_states:7 disnake.VoiceChannel.voice_states:7 of
msgid ""
"This function is intentionally low level to replace :attr:`members` when "
"the member cache is unavailable."
msgstr ""

#: disnake.StageChannel.voice_states:10 disnake.VoiceChannel.voice_states:10 of
msgid "The mapping of member ID to a voice state."
msgstr ""

#: disnake.StageChannel.voice_states:11 disnake.VoiceChannel.voice_states:11 of
msgid "Mapping[:class:`int`, :class:`VoiceState`]"
msgstr ""

#: ../../api.rst:3936
msgid "StageChannel"
msgstr ""

#: disnake.channel.StageChannel:1 of
msgid "Represents a Discord guild stage channel."
msgstr ""

#: disnake.channel.StageChannel:43 of
msgid "The channel's topic. ``None`` if it isn't set."
msgstr ""

#: disnake.channel.StageChannel:68 of
msgid "The channel's limit for number of members that can be in a stage channel."
msgstr ""

#: disnake.channel.StageChannel:74 of
msgid ""
"The region for the stage channel's voice communication. A value of "
"``None`` indicates automatic voice region detection."
msgstr ""

#: disnake.channel.StageChannel:81 disnake.channel.StageChannel.edit:32 of
msgid "The camera video quality for the stage channel's participants."
msgstr ""

#: disnake.StageChannel.requesting_to_speak:1 of
msgid "A list of members who are requesting to speak in the stage channel."
msgstr ""

#: disnake.StageChannel.speakers:1 of
msgid "A list of members who have been permitted to speak in the stage channel."
msgstr ""

#: disnake.StageChannel.listeners:1 of
msgid "A list of members who are listening in the stage channel."
msgstr ""

#: disnake.StageChannel.moderators:1 of
msgid "A list of members who are moderating the stage channel."
msgstr ""

#: disnake.StageChannel.instance:1 of
msgid "The running stage instance of the stage channel."
msgstr ""

#: disnake.channel.StageChannel.create_instance:3 of
msgid "Create a stage instance."
msgstr ""

#: disnake.channel.StageChannel.create_instance:10 of
msgid "The stage instance's topic."
msgstr ""

#: disnake.channel.StageChannel.create_instance:12 of
msgid ""
"The stage instance's privacy level. Defaults to "
":attr:`StagePrivacyLevel.guild_only`."
msgstr ""

#: disnake.channel.StageChannel.create_instance:14 of
msgid "The reason the stage instance was created. Shows up on the audit log."
msgstr ""

#: disnake.channel.StageChannel.create_instance:17
#: disnake.stage_instance.StageInstance.edit:15 of
msgid "If the ``privacy_level`` parameter is not the proper type."
msgstr ""

#: disnake.channel.StageChannel.create_instance:18 of
msgid "You do not have permissions to create a stage instance."
msgstr ""

#: disnake.channel.StageChannel.create_instance:19 of
msgid "Creating a stage instance failed."
msgstr ""

#: disnake.channel.StageChannel.create_instance:21 of
msgid "The newly created stage instance."
msgstr ""

#: disnake.channel.StageChannel.create_instance:22
#: disnake.channel.StageChannel.fetch_instance:11 of
msgid ":class:`StageInstance`"
msgstr ""

#: disnake.channel.StageChannel.fetch_instance:3 of
msgid "Gets the running :class:`StageInstance`."
msgstr ""

#: disnake.channel.StageChannel.fetch_instance:10 of
msgid "The stage instance."
msgstr ""

#: disnake.channel.StageChannel.edit:8 of
msgid "The ``topic`` parameter must now be set via :attr:`create_instance`."
msgstr ""

#: disnake.channel.StageChannel.edit:29 of
msgid ""
"The new region for the stage channel's voice communication. A value of "
"``None`` indicates automatic voice region detection."
msgstr ""

#: disnake.channel.StageChannel.edit:32 of
msgid ""
"The camera video quality for the stage channel's participants.  .. "
"versionadded:: 2.0"
msgstr ""

#: disnake.channel.StageChannel.edit:41 of
msgid ""
"The newly edited stage channel. If the edit was only positional then "
"``None`` is returned instead."
msgstr ""

#: disnake.channel.StageChannel.edit:43 of
msgid "Optional[:class:`.StageChannel`]"
msgstr ""

#: ../../api.rst:3946
msgid "StageInstance"
msgstr ""

#: disnake.stage_instance.StageInstance:1 of
msgid "Represents a stage instance of a stage channel in a guild."
msgstr ""

#: disnake.stage_instance.StageInstance:9 of
msgid "Checks if two stage instances are equal."
msgstr ""

#: disnake.stage_instance.StageInstance:13 of
msgid "Checks if two stage instances are not equal."
msgstr ""

#: disnake.stage_instance.StageInstance:17 of
msgid "Returns the stage instance's hash."
msgstr ""

#: disnake.stage_instance.StageInstance:21 of
msgid "The stage instance's ID."
msgstr ""

#: disnake.stage_instance.StageInstance:27 of
msgid "The guild that the stage instance is running in."
msgstr ""

#: disnake.stage_instance.StageInstance:33 of
msgid "The ID of the channel that the stage instance is running in."
msgstr ""

#: disnake.stage_instance.StageInstance:39 of
msgid "The topic of the stage instance."
msgstr ""

#: disnake.stage_instance.StageInstance:51 of
msgid "Whether discoverability for the stage instance is disabled."
msgstr ""

#: ../../docstring disnake.StageInstance.channel:1 of
msgid "The channel that stage instance is running in."
msgstr ""

#: ../../docstring disnake.StageInstance.channel:3 of
msgid "Optional[:class:`StageChannel`]"
msgstr ""

#: disnake.stage_instance.StageInstance.edit:3 of
msgid "Edits the stage instance."
msgstr ""

#: disnake.stage_instance.StageInstance.edit:8 of
msgid "The stage instance's new topic."
msgstr ""

#: disnake.stage_instance.StageInstance.edit:10 of
msgid "The stage instance's new privacy level."
msgstr ""

#: disnake.stage_instance.StageInstance.edit:12 of
msgid "The reason the stage instance was edited. Shows up on the audit log."
msgstr ""

#: disnake.stage_instance.StageInstance.edit:16 of
msgid "You do not have permissions to edit the stage instance."
msgstr ""

#: disnake.stage_instance.StageInstance.edit:17 of
msgid "Editing a stage instance failed."
msgstr ""

#: disnake.stage_instance.StageInstance.delete:3 of
msgid "Deletes the stage instance."
msgstr ""

#: disnake.stage_instance.StageInstance.delete:8 of
msgid "The reason the stage instance was deleted. Shows up on the audit log."
msgstr ""

#: disnake.stage_instance.StageInstance.delete:11 of
msgid "You do not have permissions to delete the stage instance."
msgstr ""

#: disnake.stage_instance.StageInstance.delete:12 of
msgid "Deleting the stage instance failed."
msgstr ""

#: ../../api.rst:3954
msgid "CategoryChannel"
msgstr ""

#: disnake.channel.CategoryChannel:1 of
msgid "Represents a Discord channel category."
msgstr ""

#: disnake.channel.CategoryChannel:3 of
msgid "These are useful to group channels to logical compartments."
msgstr ""

#: disnake.channel.CategoryChannel:17 of
msgid "Returns the category's hash."
msgstr ""

#: disnake.channel.CategoryChannel:21 of
msgid "Returns the category's name."
msgstr ""

#: disnake.channel.CategoryChannel:25 of
msgid "The category name."
msgstr ""

#: disnake.channel.CategoryChannel:31 of
msgid "The guild the category belongs to."
msgstr ""

#: disnake.channel.CategoryChannel:37 of
msgid "The category channel ID."
msgstr ""

#: disnake.channel.CategoryChannel:43 of
msgid ""
"The position in the category list. This is a number that starts at 0. "
"e.g. the top category is position 0."
msgstr ""

#: disnake.channel.CategoryChannel.is_nsfw:1 of
msgid ":class:`bool`: Checks if the category is NSFW."
msgstr ""

#: disnake.channel.CategoryChannel.edit:14 of
msgid "The new category's name."
msgstr ""

#: disnake.channel.CategoryChannel.edit:16 of
msgid "The new category's position."
msgstr ""

#: disnake.channel.CategoryChannel.edit:18 of
msgid "To mark the category as NSFW or not."
msgstr ""

#: disnake.channel.CategoryChannel.edit:20 of
msgid "The reason for editing this category. Shows up on the audit log."
msgstr ""

#: disnake.channel.CategoryChannel.edit:26 of
msgid "If position is less than 0 or greater than the number of categories."
msgstr ""

#: disnake.channel.CategoryChannel.edit:27 of
msgid "You do not have permissions to edit the category."
msgstr ""

#: disnake.channel.CategoryChannel.edit:28 of
msgid "Editing the category failed."
msgstr ""

#: disnake.channel.CategoryChannel.edit:30 of
msgid ""
"The newly edited category channel. If the edit was only positional then "
"``None`` is returned instead."
msgstr ""

#: disnake.channel.CategoryChannel.edit:32 of
msgid "Optional[:class:`.CategoryChannel`]"
msgstr ""

#: disnake.CategoryChannel.channels:1 of
msgid "Returns the channels that are under this category."
msgstr ""

#: disnake.CategoryChannel.channels:3 of
msgid ""
"These are sorted by the official Discord UI, which places voice channels "
"below the text channels."
msgstr ""

#: disnake.CategoryChannel.text_channels:1 of
msgid "Returns the text channels that are under this category."
msgstr ""

#: disnake.CategoryChannel.voice_channels:1 of
msgid "Returns the voice channels that are under this category."
msgstr ""

#: disnake.CategoryChannel.stage_channels:1 of
msgid "Returns the stage channels that are under this category."
msgstr ""

#: disnake.channel.CategoryChannel.create_text_channel:3 of
msgid ""
"A shortcut method to :meth:`Guild.create_text_channel` to create a "
":class:`TextChannel` in the category."
msgstr ""

#: disnake.channel.CategoryChannel.create_voice_channel:3 of
msgid ""
"A shortcut method to :meth:`Guild.create_voice_channel` to create a "
":class:`VoiceChannel` in the category."
msgstr ""

#: disnake.channel.CategoryChannel.create_stage_channel:3 of
msgid ""
"A shortcut method to :meth:`Guild.create_stage_channel` to create a "
":class:`StageChannel` in the category."
msgstr ""

#: ../../api.rst:3963
msgid "DMChannel"
msgstr ""

#: disnake.channel.DMChannel:1 of
msgid "Represents a Discord direct message channel."
msgstr ""

#: disnake.channel.DMChannel:19 disnake.channel.GroupChannel:19 of
msgid "Returns a string representation of the channel"
msgstr ""

#: disnake.channel.DMChannel:23 of
msgid ""
"The user you are participating with in the direct message channel. If "
"this channel is received through the gateway, the recipient information "
"may not be always available."
msgstr ""

#: disnake.channel.DMChannel:37 of
msgid "The direct message channel ID."
msgstr ""

#: disnake.DMChannel.created_at:1 of
msgid "Returns the direct message channel's creation time in UTC."
msgstr ""

#: disnake.channel.DMChannel.permissions_for:1
#: disnake.channel.GroupChannel.permissions_for:1 of
msgid "Handles permission resolution for a :class:`User`."
msgstr ""

#: disnake.channel.DMChannel.permissions_for:3
#: disnake.channel.GroupChannel.permissions_for:3 of
msgid "This function is there for compatibility with other channel types."
msgstr ""

#: disnake.channel.DMChannel.permissions_for:5
#: disnake.channel.GroupChannel.permissions_for:5 of
msgid "Actual direct messages do not really have the concept of permissions."
msgstr ""

#: disnake.channel.DMChannel.permissions_for:7
#: disnake.channel.GroupChannel.permissions_for:7 of
msgid "This returns all the Text related permissions set to ``True`` except:"
msgstr ""

#: disnake.channel.DMChannel.permissions_for:9
#: disnake.channel.GroupChannel.permissions_for:9 of
msgid ""
":attr:`~Permissions.send_tts_messages`: You cannot send TTS messages in a"
" DM."
msgstr ""

#: disnake.channel.DMChannel.permissions_for:10
#: disnake.channel.GroupChannel.permissions_for:10 of
msgid ""
":attr:`~Permissions.manage_messages`: You cannot delete others messages "
"in a DM."
msgstr ""

#: disnake.channel.DMChannel.permissions_for:12 of
msgid ""
"The user to check permissions for. This parameter is ignored but kept for"
" compatibility with other ``permissions_for`` methods."
msgstr ""

#: disnake.channel.DMChannel.permissions_for:16 of
msgid "The resolved permissions."
msgstr ""

#: ../../api.rst:3979
msgid "GroupChannel"
msgstr ""

#: disnake.channel.GroupChannel:1 of
msgid "Represents a Discord group channel."
msgstr ""

#: disnake.channel.GroupChannel:23 of
msgid "The users you are participating with in the group channel."
msgstr ""

#: disnake.channel.GroupChannel:25 of
msgid "List[:class:`User`]"
msgstr ""

#: disnake.channel.GroupChannel:35 of
msgid "The group channel ID."
msgstr ""

#: disnake.channel.GroupChannel:41 of
msgid "The user that owns the group channel."
msgstr ""

#: disnake.channel.GroupChannel:47 of
msgid "The owner ID that owns the group channel."
msgstr ""

#: disnake.channel.GroupChannel:55 of
msgid "The group channel's name if provided."
msgstr ""

#: disnake.GroupChannel.icon:1 of
msgid "Returns the channel's icon asset if available."
msgstr ""

#: disnake.channel.GroupChannel.permissions_for:12 of
msgid "This also checks the kick_members permission if the user is the owner."
msgstr ""

#: disnake.channel.GroupChannel.permissions_for:14 of
msgid "The user to check permissions for."
msgstr ""

#: disnake.channel.GroupChannel.permissions_for:17 of
msgid "The resolved permissions for the user."
msgstr ""

#: disnake.channel.GroupChannel.leave:3 of
msgid "Leave the group."
msgstr ""

#: disnake.channel.GroupChannel.leave:5 of
msgid "If you are the only one in the group, this deletes it as well."
msgstr ""

#: disnake.channel.GroupChannel.leave:7 of
msgid "Leaving the group failed."
msgstr ""

#: ../../api.rst:3995
msgid "PartialInviteGuild"
msgstr ""

#: disnake.invite.PartialInviteGuild:1 of
msgid "Represents a \"partial\" invite guild."
msgstr ""

#: disnake.invite.PartialInviteChannel:3 disnake.invite.PartialInviteGuild:3 of
msgid ""
"This model will be given when the user is not part of the guild the "
":class:`Invite` resolves to."
msgstr ""

#: disnake.invite.PartialInviteGuild:10 of
msgid "Checks if two partial guilds are the same."
msgstr ""

#: disnake.invite.PartialInviteGuild:14 of
msgid "Checks if two partial guilds are not the same."
msgstr ""

#: disnake.invite.PartialInviteGuild:18 of
msgid "Return the partial guild's hash."
msgstr ""

#: disnake.invite.PartialInviteGuild:22 of
msgid "Returns the partial guild's name."
msgstr ""

#: disnake.invite.PartialInviteGuild:26
#: disnake.webhook.async_.PartialWebhookGuild:15 of
msgid "The partial guild's name."
msgstr ""

#: disnake.invite.PartialInviteGuild:32
#: disnake.webhook.async_.PartialWebhookGuild:9 of
msgid "The partial guild's ID."
msgstr ""

#: disnake.invite.PartialInviteGuild:38 of
msgid "The partial guild's verification level."
msgstr ""

#: disnake.invite.PartialInviteGuild:44 of
msgid ""
"A list of features the guild has. See :attr:`Guild.features` for more "
"information."
msgstr ""

#: disnake.invite.PartialInviteGuild:50 of
msgid "The partial guild's description."
msgstr ""

#: ../../api.rst:4003
msgid "PartialInviteChannel"
msgstr ""

#: disnake.invite.PartialInviteChannel:1 of
msgid "Represents a \"partial\" invite channel."
msgstr ""

#: disnake.invite.PartialInviteChannel:10 disnake.widget.WidgetChannel:7 of
msgid "Checks if two partial channels are the same."
msgstr ""

#: disnake.invite.PartialInviteChannel:14 disnake.widget.WidgetChannel:11 of
msgid "Checks if two partial channels are not the same."
msgstr ""

#: disnake.invite.PartialInviteChannel:18 disnake.widget.WidgetChannel:15 of
msgid "Return the partial channel's hash."
msgstr ""

#: disnake.invite.PartialInviteChannel:22 disnake.widget.WidgetChannel:19 of
msgid "Returns the partial channel's name."
msgstr ""

#: disnake.invite.PartialInviteChannel:26
#: disnake.webhook.async_.PartialWebhookChannel:15 of
msgid "The partial channel's name."
msgstr ""

#: disnake.invite.PartialInviteChannel:32
#: disnake.webhook.async_.PartialWebhookChannel:9 of
msgid "The partial channel's ID."
msgstr ""

#: disnake.invite.PartialInviteChannel:38 of
msgid "The partial channel's type."
msgstr ""

#: ../../api.rst:4011
msgid "Invite"
msgstr ""

#: disnake.invite.Invite:1 of
msgid "Represents a Discord :class:`Guild` or :class:`abc.GuildChannel` invite."
msgstr ""

#: disnake.invite.Invite:10 of
msgid "Checks if two invites are equal."
msgstr ""

#: disnake.invite.Invite:14 of
msgid "Checks if two invites are not equal."
msgstr ""

#: disnake.invite.Invite:18 of
msgid "Returns the invite hash."
msgstr ""

#: disnake.invite.Invite:22 of
msgid "Returns the invite URL."
msgstr ""

#: disnake.invite.Invite:24 of
msgid "The following table illustrates what methods will obtain the attributes:"
msgstr ""

#: disnake.invite.Invite:27 of
msgid "Attribute"
msgstr ""

#: disnake.invite.Invite:27 of
msgid "Method"
msgstr ""

#: disnake.invite.Invite:29 of
msgid ":attr:`max_age`"
msgstr ""

#: disnake.invite.Invite:29 disnake.invite.Invite:31 disnake.invite.Invite:33
#: disnake.invite.Invite:35 disnake.invite.Invite:37 of
msgid ":meth:`abc.GuildChannel.invites`\\, :meth:`Guild.invites`"
msgstr ""

#: disnake.invite.Invite:31 of
msgid ":attr:`max_uses`"
msgstr ""

#: disnake.invite.Invite:33 of
msgid ":attr:`created_at`"
msgstr ""

#: disnake.invite.Invite:35 of
msgid ":attr:`temporary`"
msgstr ""

#: disnake.invite.Invite:37 of
msgid ":attr:`uses`"
msgstr ""

#: disnake.invite.Invite:39 of
msgid ":attr:`approximate_member_count`"
msgstr ""

#: disnake.invite.Invite:39 disnake.invite.Invite:41 of
msgid ":meth:`Client.fetch_invite` with `with_counts` enabled"
msgstr ""

#: disnake.invite.Invite:41 of
msgid ":attr:`approximate_presence_count`"
msgstr ""

#: disnake.invite.Invite:43 of
msgid ":attr:`expires_at`"
msgstr ""

#: disnake.invite.Invite:43 of
msgid ":meth:`Client.fetch_invite` with `with_expiration` enabled"
msgstr ""

#: disnake.invite.Invite:46 of
msgid "If it's not in the table above then it is available by all methods."
msgstr ""

#: disnake.invite.Invite:50 of
msgid ""
"How long before the invite expires in seconds. A value of ``0`` indicates"
" that it doesn't expire."
msgstr ""

#: disnake.invite.Invite:57 of
msgid "The URL fragment used for the invite."
msgstr ""

#: disnake.invite.Invite:63 of
msgid ""
"The guild the invite is for. Can be ``None`` if it's from a group direct "
"message."
msgstr ""

#: disnake.invite.Invite:65 of
msgid ""
"Optional[Union[:class:`Guild`, :class:`Object`, "
":class:`PartialInviteGuild`]]"
msgstr ""

#: disnake.invite.Invite:69 of
msgid "Indicates if the invite has been revoked."
msgstr ""

#: disnake.invite.Invite:75 of
msgid "An aware UTC datetime object denoting the time the invite was created."
msgstr ""

#: disnake.invite.Invite:81 of
msgid ""
"Indicates that the invite grants temporary membership. If ``True``, "
"members who joined via this invite will be kicked upon disconnect."
msgstr ""

#: disnake.invite.Invite:88 of
msgid "How many times the invite has been used."
msgstr ""

#: disnake.invite.Invite:94 of
msgid ""
"How many times the invite can be used. A value of ``0`` indicates that it"
" has unlimited uses."
msgstr ""

#: disnake.invite.Invite:107 of
msgid "The approximate number of members in the guild."
msgstr ""

#: disnake.invite.Invite:113 of
msgid ""
"The approximate number of members currently active in the guild. This "
"includes idle, dnd, online, and invisible members. Offline members are "
"excluded."
msgstr ""

#: disnake.invite.Invite:120 of
msgid ""
"The expiration date of the invite. If the value is ``None`` when received"
" through `Client.fetch_invite` with `with_expiration` enabled, the invite"
" will never expire."
msgstr ""

#: disnake.invite.Invite:129 of
msgid "The channel the invite is for."
msgstr ""

#: disnake.invite.Invite:131 of
msgid ""
"Union[:class:`abc.GuildChannel`, :class:`Object`, "
":class:`PartialInviteChannel`]"
msgstr ""

#: disnake.invite.Invite:135 of
msgid "The type of target for the voice channel invite."
msgstr ""

#: disnake.invite.Invite:139 of
msgid ":class:`InviteTarget`"
msgstr ""

#: disnake.invite.Invite:143 of
msgid "The user whose stream to display for this invite, if any."
msgstr ""

#: disnake.invite.Invite:151 of
msgid "The embedded application the invite targets, if any."
msgstr ""

#: disnake.invite.Invite:155 of
msgid "Optional[:class:`PartialAppInfo`]"
msgstr ""

#: disnake.Invite.id:1 of
msgid "Returns the proper code portion of the invite."
msgstr ""

#: disnake.Invite.url:1 of
msgid "A property that retrieves the invite URL."
msgstr ""

#: disnake.invite.Invite.delete:3 of
msgid "Revokes the instant invite."
msgstr ""

#: disnake.invite.Invite.delete:5 of
msgid ""
"You must have the :attr:`~Permissions.manage_channels` permission to do "
"this."
msgstr ""

#: disnake.invite.Invite.delete:7 of
msgid "The reason for deleting this invite. Shows up on the audit log."
msgstr ""

#: ../../api.rst:4019
msgid "Template"
msgstr ""

#: disnake.template.Template:1 of
msgid "Represents a Discord template."
msgstr ""

#: disnake.template.Template:13 of
msgid "How many times the template has been used."
msgstr ""

#: disnake.template.Template:31 of
msgid "The creator of the template."
msgstr ""

#: disnake.template.Template:37 of
msgid "An aware datetime in UTC representing when the template was created."
msgstr ""

#: disnake.template.Template:43 of
msgid ""
"An aware datetime in UTC representing when the template was last updated."
" This is referred to as \"last synced\" in the official Discord client."
msgstr ""

#: disnake.template.Template:50 of
msgid "The source guild."
msgstr ""

#: disnake.template.Template:56 of
msgid "Whether the template has unsynced changes."
msgstr ""

#: disnake.template.Template.create_guild:3 of
msgid "Creates a :class:`.Guild` using the template."
msgstr ""

#: disnake.template.Template.sync:3 of
msgid "Sync the template to the guild's current state."
msgstr ""

#: disnake.template.Template.delete:5 disnake.template.Template.edit:5
#: disnake.template.Template.sync:5 of
msgid ""
"You must have the :attr:`~Permissions.manage_guild` permission in the "
"source guild to do this."
msgstr ""

#: disnake.template.Template.edit:10 disnake.template.Template.sync:10 of
msgid "The template is no longer edited in-place, instead it is returned."
msgstr ""

#: disnake.template.Template.delete:10 disnake.template.Template.edit:18
#: disnake.template.Template.sync:13 of
msgid "Editing the template failed."
msgstr ""

#: disnake.template.Template.delete:11 disnake.template.Template.edit:19
#: disnake.template.Template.sync:14 of
msgid "You don't have permissions to edit the template."
msgstr ""

#: disnake.template.Template.delete:12 disnake.template.Template.edit:20
#: disnake.template.Template.sync:15 of
msgid "This template does not exist."
msgstr ""

#: disnake.template.Template.edit:22 disnake.template.Template.sync:17 of
msgid "The newly edited template."
msgstr ""

#: disnake.template.Template.edit:23 disnake.template.Template.sync:18 of
msgid ":class:`Template`"
msgstr ""

#: disnake.template.Template.edit:3 of
msgid "Edit the template metadata."
msgstr ""

#: disnake.template.Template.edit:13 of
msgid "The template's new name."
msgstr ""

#: disnake.template.Template.edit:15 of
msgid "The template's new description."
msgstr ""

#: disnake.template.Template.delete:3 of
msgid "Delete the template."
msgstr ""

#: disnake.Template.url:1 of
msgid "The template url."
msgstr ""

#: ../../api.rst:4027
msgid "WidgetChannel"
msgstr ""

#: disnake.widget.WidgetChannel:1 of
msgid "Represents a \"partial\" widget channel."
msgstr ""

#: disnake.widget.WidgetChannel:23 of
msgid "The channel's ID."
msgstr ""

#: disnake.widget.WidgetChannel:35 of
msgid "The channel's position"
msgstr ""

#: ../../api.rst:4035
msgid "WidgetMember"
msgstr ""

#: disnake.widget.WidgetMember:1 of
msgid "Represents a \"partial\" member of the widget's guild."
msgstr ""

#: disnake.widget.WidgetMember:7 of
msgid "Checks if two widget members are the same."
msgstr ""

#: disnake.widget.WidgetMember:11 of
msgid "Checks if two widget members are not the same."
msgstr ""

#: disnake.widget.WidgetMember:15 of
msgid "Return the widget member's hash."
msgstr ""

#: disnake.widget.WidgetMember:19 of
msgid "Returns the widget member's `name#discriminator`."
msgstr ""

#: disnake.widget.WidgetMember:23 of
msgid "The member's ID."
msgstr ""

#: disnake.widget.WidgetMember:29 of
msgid "The member's username."
msgstr ""

#: disnake.widget.WidgetMember:35 of
msgid "The member's discriminator."
msgstr ""

#: disnake.widget.WidgetMember:41 of
msgid "Whether the member is a bot."
msgstr ""

#: disnake.widget.WidgetMember:47 of
msgid "The member's status."
msgstr ""

#: disnake.widget.WidgetMember:53 of
msgid "The member's nickname."
msgstr ""

#: disnake.widget.WidgetMember:59 of
msgid "The member's avatar hash."
msgstr ""

#: disnake.widget.WidgetMember:65 of
msgid "The member's activity."
msgstr ""

#: disnake.widget.WidgetMember:71 of
msgid "Whether the member is currently deafened."
msgstr ""

#: disnake.widget.WidgetMember:77 of
msgid "Whether the member is currently muted."
msgstr ""

#: disnake.widget.WidgetMember:83 of
msgid "Whether the member is currently being suppressed."
msgstr ""

#: disnake.widget.WidgetMember:89 of
msgid "Which channel the member is connected to."
msgstr ""

#: disnake.widget.WidgetMember:91 of
msgid "Optional[:class:`WidgetChannel`]"
msgstr ""

#: disnake.WidgetMember.display_name:1 of
msgid "Returns the member's display name."
msgstr ""

#: ../../api.rst:4044
msgid "Widget"
msgstr ""

#: disnake.widget.Widget:1 of
msgid "Represents a :class:`Guild` widget."
msgstr ""

#: disnake.widget.Widget:7 of
msgid "Checks if two widgets are the same."
msgstr ""

#: disnake.widget.Widget:11 of
msgid "Checks if two widgets are not the same."
msgstr ""

#: disnake.widget.Widget:15 of
msgid "Returns the widget's JSON URL."
msgstr ""

#: disnake.widget.Widget:25 of
msgid "The guild's name."
msgstr ""

#: disnake.widget.Widget:31 of
msgid "The accessible voice channels in the guild."
msgstr ""

#: disnake.widget.Widget:33 of
msgid "List[:class:`WidgetChannel`]"
msgstr ""

#: disnake.widget.Widget:37 of
msgid ""
"The online members in the server. Offline members do not appear in the "
"widget."
msgstr ""

#: disnake.widget.Widget:42 of
msgid ""
"Due to a Discord limitation, if this data is available the users will be "
"\"anonymized\" with linear IDs and discriminator information being "
"incorrect. Likewise, the number of members retrieved is capped."
msgstr ""

#: disnake.Widget.created_at:1 of
msgid "Returns the member's creation time in UTC."
msgstr ""

#: disnake.Widget.json_url:1 of
msgid "The JSON URL of the widget."
msgstr ""

#: disnake.Widget.invite_url:1 of
msgid "The invite URL for the guild, if available."
msgstr ""

#: disnake.widget.Widget.fetch_invite:3 of
msgid ""
"Retrieves an :class:`Invite` from the widget's invite URL. This is the "
"same as :meth:`Client.fetch_invite`; the invite code is abstracted away."
msgstr ""

#: disnake.widget.Widget.fetch_invite:7 of
msgid ""
"Whether to include count information in the invite. This fills the "
":attr:`Invite.approximate_member_count` and "
":attr:`Invite.approximate_presence_count` fields."
msgstr ""

#: disnake.widget.Widget.fetch_invite:12 of
msgid "The invite from the widget's invite URL."
msgstr ""

#: disnake.widget.Widget.fetch_invite:13 of
msgid ":class:`Invite`"
msgstr ""

#: ../../api.rst:4052
msgid "StickerPack"
msgstr ""

#: disnake.sticker.StickerPack:1 of
msgid "Represents a sticker pack."
msgstr ""

#: disnake.sticker.StickerPack:9 of
msgid "Returns the name of the sticker pack."
msgstr ""

#: disnake.sticker.StickerPack:13 of
msgid "Checks if the sticker pack is equal to another sticker pack."
msgstr ""

#: disnake.sticker.StickerPack:17 of
msgid "Checks if the sticker pack is not equal to another sticker pack."
msgstr ""

#: disnake.sticker.StickerPack:21 of
msgid "The name of the sticker pack."
msgstr ""

#: disnake.sticker.StickerPack:27 of
msgid "The description of the sticker pack."
msgstr ""

#: disnake.sticker.StickerPack:33 of
msgid "The id of the sticker pack."
msgstr ""

#: disnake.sticker.StickerPack:39 of
msgid "The stickers of this sticker pack."
msgstr ""

#: disnake.sticker.StickerPack:41 of
msgid "List[:class:`StandardSticker`]"
msgstr ""

#: disnake.sticker.StickerPack:45 of
msgid "The SKU ID of the sticker pack."
msgstr ""

#: disnake.sticker.StickerPack:51 of
msgid "The ID of the sticker used for the cover of the sticker pack."
msgstr ""

#: disnake.sticker.StickerPack:57 of
msgid "The sticker used for the cover of the sticker pack."
msgstr ""

#: disnake.sticker.StickerPack:59 of
msgid ":class:`StandardSticker`"
msgstr ""

#: disnake.StickerPack.banner:1 of
msgid "The banner asset of the sticker pack."
msgstr ""

#: ../../api.rst:4060
msgid "StickerItem"
msgstr ""

#: disnake.sticker.StickerItem:1 of
msgid "Represents a sticker item."
msgstr ""

#: disnake.sticker.StickerItem:9 of
msgid "Returns the name of the sticker item."
msgstr ""

#: disnake.sticker.StickerItem:13 of
msgid "Checks if the sticker item is equal to another sticker item."
msgstr ""

#: disnake.sticker.StickerItem:17 of
msgid "Checks if the sticker item is not equal to another sticker item."
msgstr ""

#: disnake.sticker.GuildSticker:21 disnake.sticker.StandardSticker:21
#: disnake.sticker.Sticker:21 disnake.sticker.StickerItem:21 of
msgid "The sticker's name."
msgstr ""

#: disnake.sticker.GuildSticker:27 disnake.sticker.StandardSticker:27
#: disnake.sticker.Sticker:27 disnake.sticker.StickerItem:27 of
msgid "The id of the sticker."
msgstr ""

#: disnake.sticker.GuildSticker:39 disnake.sticker.StandardSticker:45
#: disnake.sticker.Sticker:45 disnake.sticker.StickerItem:33 of
msgid "The format for the sticker's image."
msgstr ""

#: disnake.sticker.Sticker:51 disnake.sticker.StickerItem:39 of
msgid "The URL for the sticker's image."
msgstr ""

#: disnake.sticker.StickerItem.fetch:3 of
msgid "Attempts to retrieve the full sticker data of the sticker item."
msgstr ""

#: disnake.sticker.StickerItem.fetch:8 of
msgid "Union[:class:`StandardSticker`, :class:`GuildSticker`]"
msgstr ""

#: ../../api.rst:4068
msgid "Sticker"
msgstr ""

#: disnake.sticker.Sticker:1 of
msgid "Represents a sticker."
msgstr ""

#: disnake.sticker.GuildSticker:9 disnake.sticker.StandardSticker:9
#: disnake.sticker.Sticker:9 of
msgid "Returns the name of the sticker."
msgstr ""

#: disnake.sticker.GuildSticker:13 disnake.sticker.StandardSticker:13
#: disnake.sticker.Sticker:13 of
msgid "Checks if the sticker is equal to another sticker."
msgstr ""

#: disnake.sticker.GuildSticker:17 disnake.sticker.StandardSticker:17
#: disnake.sticker.Sticker:17 of
msgid "Checks if the sticker is not equal to another sticker."
msgstr ""

#: disnake.sticker.GuildSticker:33 disnake.sticker.StandardSticker:33
#: disnake.sticker.Sticker:33 of
msgid "The description of the sticker."
msgstr ""

#: disnake.sticker.StandardSticker:39 disnake.sticker.Sticker:39 of
msgid "The id of the sticker's pack."
msgstr ""

#: disnake.Sticker.created_at:1 of
msgid "Returns the sticker's creation time in UTC."
msgstr ""

#: ../../api.rst:4076
msgid "StandardSticker"
msgstr ""

#: disnake.sticker.StandardSticker:1 of
msgid "Represents a sticker that is found in a standard sticker pack."
msgstr ""

#: disnake.sticker.StandardSticker:51 of
msgid "A list of tags for the sticker."
msgstr ""

#: disnake.sticker.StandardSticker:57 of
msgid "The sticker's sort order within its pack."
msgstr ""

#: disnake.sticker.StandardSticker.pack:3 of
msgid "Retrieves the sticker pack that this sticker belongs to."
msgstr ""

#: disnake.sticker.StandardSticker.pack:5 of
msgid "The corresponding sticker pack was not found."
msgstr ""

#: disnake.sticker.StandardSticker.pack:6 of
msgid "Retrieving the sticker pack failed."
msgstr ""

#: disnake.sticker.StandardSticker.pack:8 of
msgid "The retrieved sticker pack."
msgstr ""

#: disnake.sticker.StandardSticker.pack:9 of
msgid ":class:`StickerPack`"
msgstr ""

#: ../../api.rst:4084
msgid "GuildSticker"
msgstr ""

#: disnake.sticker.GuildSticker:1 of
msgid "Represents a sticker that belongs to a guild."
msgstr ""

#: disnake.sticker.GuildSticker:45 of
msgid "Whether this sticker is available for use."
msgstr ""

#: disnake.sticker.GuildSticker:51 of
msgid "The ID of the guild that this sticker is from."
msgstr ""

#: disnake.sticker.GuildSticker:57 of
msgid ""
"The user that created this sticker. This can only be retrieved using "
":meth:`Guild.fetch_sticker` and having the "
":attr:`~Permissions.manage_emojis_and_stickers` permission."
msgstr ""

#: disnake.sticker.GuildSticker:64 of
msgid "The name of a unicode emoji that represents this sticker."
msgstr ""

#: ../../docstring disnake.GuildSticker.guild:1 of
msgid ""
"The guild that this sticker is from. Could be ``None`` if the bot is not "
"in the guild."
msgstr ""

#: disnake.sticker.GuildSticker.edit:3 of
msgid "Edits a :class:`GuildSticker` for the guild."
msgstr ""

#: disnake.sticker.GuildSticker.edit:5 of
msgid "The sticker's new name. Must be at least 2 characters."
msgstr ""

#: disnake.sticker.GuildSticker.edit:7 of
msgid "The sticker's new description. Can be ``None``."
msgstr ""

#: disnake.sticker.GuildSticker.edit:11 of
msgid "The reason for editing this sticker. Shows up on the audit log."
msgstr ""

#: disnake.sticker.GuildSticker.edit:14 of
msgid "You are not allowed to edit stickers."
msgstr ""

#: disnake.sticker.GuildSticker.edit:15 of
msgid "An error occurred editing the sticker."
msgstr ""

#: disnake.sticker.GuildSticker.edit:17 of
msgid "The newly modified sticker."
msgstr ""

#: ../../api.rst:4092
msgid "RawMessageDeleteEvent"
msgstr ""

#: disnake.raw_models.RawMessageDeleteEvent:1 of
msgid "Represents the event payload for a :func:`on_raw_message_delete` event."
msgstr ""

#: disnake.raw_models.RawMessageDeleteEvent:5 of
msgid "The channel ID where the deletion took place."
msgstr ""

#: disnake.raw_models.RawMessageDeleteEvent:11 of
msgid "The guild ID where the deletion took place, if applicable."
msgstr ""

#: disnake.raw_models.RawMessageDeleteEvent:17 of
msgid "The message ID that got deleted."
msgstr ""

#: disnake.MessageReference.cached_message:1
#: disnake.raw_models.RawMessageDeleteEvent:23 of
msgid "The cached message, if found in the internal message cache."
msgstr ""

#: ../../api.rst:4100
msgid "RawBulkMessageDeleteEvent"
msgstr ""

#: disnake.raw_models.RawBulkMessageDeleteEvent:1 of
msgid ""
"Represents the event payload for a :func:`on_raw_bulk_message_delete` "
"event."
msgstr ""

#: disnake.raw_models.RawBulkMessageDeleteEvent:5 of
msgid "A :class:`set` of the message IDs that were deleted."
msgstr ""

#: disnake.raw_models.RawBulkMessageDeleteEvent:7 of
msgid "Set[:class:`int`]"
msgstr ""

#: disnake.raw_models.RawBulkMessageDeleteEvent:11 of
msgid "The channel ID where the message got deleted."
msgstr ""

#: disnake.raw_models.RawBulkMessageDeleteEvent:17 of
msgid "The guild ID where the message got deleted, if applicable."
msgstr ""

#: disnake.raw_models.RawBulkMessageDeleteEvent:23 of
msgid "The cached messages, if found in the internal message cache."
msgstr ""

#: disnake.raw_models.RawBulkMessageDeleteEvent:25 of
msgid "List[:class:`Message`]"
msgstr ""

#: ../../api.rst:4108
msgid "RawMessageUpdateEvent"
msgstr ""

#: disnake.raw_models.RawMessageUpdateEvent:1 of
msgid "Represents the payload for a :func:`on_raw_message_edit` event."
msgstr ""

#: disnake.raw_models.RawMessageUpdateEvent:5 of
msgid "The message ID that got updated."
msgstr ""

#: disnake.raw_models.RawMessageUpdateEvent:11 of
msgid "The channel ID where the update took place."
msgstr ""

#: disnake.raw_models.RawMessageUpdateEvent:19 of
msgid "The guild ID where the message got updated, if applicable."
msgstr ""

#: disnake.raw_models.RawMessageUpdateEvent:27 of
msgid ""
"The raw data given by the `gateway "
"<https://discord.com/developers/docs/topics/gateway#message-update>`_"
msgstr ""

#: disnake.activity.Activity:57 disnake.activity.Activity:69
#: disnake.activity.Activity:78 disnake.activity.Streaming:61
#: disnake.raw_models.RawMessageUpdateEvent:29 of
msgid ":class:`dict`"
msgstr ""

#: disnake.raw_models.RawMessageUpdateEvent:33 of
msgid ""
"The cached message, if found in the internal message cache. Represents "
"the message before it is modified by the data in "
":attr:`RawMessageUpdateEvent.data`."
msgstr ""

#: ../../api.rst:4116
msgid "RawReactionActionEvent"
msgstr ""

#: disnake.raw_models.RawReactionActionEvent:1 of
msgid ""
"Represents the payload for a :func:`on_raw_reaction_add` or "
":func:`on_raw_reaction_remove` event."
msgstr ""

#: disnake.raw_models.RawReactionActionEvent:6 of
msgid "The message ID that got or lost a reaction."
msgstr ""

#: disnake.raw_models.RawReactionActionEvent:12 of
msgid "The user ID who added the reaction or whose reaction was removed."
msgstr ""

#: disnake.raw_models.RawReactionActionEvent:18 of
msgid "The channel ID where the reaction got added or removed."
msgstr ""

#: disnake.raw_models.RawReactionActionEvent:24 of
msgid "The guild ID where the reaction got added or removed, if applicable."
msgstr ""

#: disnake.raw_models.RawReactionActionEvent:30 of
msgid "The custom or unicode emoji being used."
msgstr ""

#: disnake.raw_models.RawReactionActionEvent:36 of
msgid ""
"The member who added the reaction. Only available if `event_type` is "
"`REACTION_ADD` and the reaction is inside a guild."
msgstr ""

#: disnake.raw_models.RawReactionActionEvent:44 of
msgid ""
"The event type that triggered this action. Can be ``REACTION_ADD`` for "
"reaction addition or ``REACTION_REMOVE`` for reaction removal."
msgstr ""

#: ../../api.rst:4124
msgid "RawReactionClearEvent"
msgstr ""

#: disnake.raw_models.RawReactionClearEvent:1 of
msgid "Represents the payload for a :func:`on_raw_reaction_clear` event."
msgstr ""

#: disnake.raw_models.RawReactionClearEmojiEvent:7
#: disnake.raw_models.RawReactionClearEvent:5 of
msgid "The message ID that got its reactions cleared."
msgstr ""

#: disnake.raw_models.RawReactionClearEmojiEvent:13
#: disnake.raw_models.RawReactionClearEvent:11 of
msgid "The channel ID where the reactions got cleared."
msgstr ""

#: disnake.raw_models.RawReactionClearEmojiEvent:19
#: disnake.raw_models.RawReactionClearEvent:17 of
msgid "The guild ID where the reactions got cleared."
msgstr ""

#: ../../api.rst:4132
msgid "RawReactionClearEmojiEvent"
msgstr ""

#: disnake.raw_models.RawReactionClearEmojiEvent:1 of
msgid "Represents the payload for a :func:`on_raw_reaction_clear_emoji` event."
msgstr ""

#: disnake.raw_models.RawReactionClearEmojiEvent:25 of
msgid "The custom or unicode emoji being removed."
msgstr ""

#: ../../api.rst:4140
msgid "RawIntegrationDeleteEvent"
msgstr ""

#: disnake.raw_models.RawIntegrationDeleteEvent:1 of
msgid "Represents the payload for a :func:`on_raw_integration_delete` event."
msgstr ""

#: disnake.raw_models.RawIntegrationDeleteEvent:7 of
msgid "The ID of the integration that got deleted."
msgstr ""

#: disnake.raw_models.RawIntegrationDeleteEvent:13 of
msgid "The ID of the bot/OAuth2 application for this deleted integration."
msgstr ""

#: disnake.raw_models.RawIntegrationDeleteEvent:19 of
msgid "The guild ID where the integration got deleted."
msgstr ""

#: ../../api.rst:4148
msgid "PartialWebhookGuild"
msgstr ""

#: disnake.webhook.async_.PartialWebhookGuild:1 of
msgid "Represents a partial guild for webhooks."
msgstr ""

#: disnake.webhook.async_.PartialWebhookChannel:3
#: disnake.webhook.async_.PartialWebhookGuild:3 of
msgid "These are typically given for channel follower webhooks."
msgstr ""

#: ../../api.rst:4156
msgid "PartialWebhookChannel"
msgstr ""

#: disnake.webhook.async_.PartialWebhookChannel:1 of
msgid "Represents a partial channel for webhooks."
msgstr ""

#: ../../api.rst:4166
msgid "Data Classes"
msgstr ""

#: ../../api.rst:4168
msgid "Some classes are just there to be data containers, this lists them."
msgstr ""

#: ../../api.rst:4170
msgid ""
"Unlike :ref:`models <discord_api_models>` you are allowed to create most "
"of these yourself, even if they can also be used to hold attributes."
msgstr ""

#: ../../api.rst:4176
msgid ""
"The only exception to this rule is :class:`Object`, which is made with "
"dynamic attributes in mind."
msgstr ""

#: ../../api.rst:4181
msgid "Object"
msgstr ""

#: disnake.object.Object:1 of
msgid "Represents a generic Discord object."
msgstr ""

#: disnake.object.Object:3 of
msgid ""
"The purpose of this class is to allow you to create 'miniature' versions "
"of data classes if you want to pass in just an ID. Most functions that "
"take in a specific data class with an ID can also take in this class as a"
" substitute instead. Note that even though this is the case, not all "
"objects (if any) actually inherit from this class."
msgstr ""

#: disnake.object.Object:9 of
msgid ""
"There are also some cases where some websocket events are received in "
":issue:`strange order <21>` and when such events happened you would "
"receive this class rather than the actual data class. These cases are "
"extremely rare."
msgstr ""

#: disnake.object.Object:18 of
msgid "Checks if two objects are equal."
msgstr ""

#: disnake.object.Object:22 of
msgid "Checks if two objects are not equal."
msgstr ""

#: disnake.object.Object:26 of
msgid "Returns the object's hash."
msgstr ""

#: disnake.object.Object:30 of
msgid "The ID of the object."
msgstr ""

#: disnake.Object.created_at:1 of
msgid "Returns the snowflake's creation time in UTC."
msgstr ""

#: ../../api.rst:4189
msgid "Embed"
msgstr ""

#: disnake.embeds.Embed:1 of
msgid "Represents a Discord embed."
msgstr ""

#: disnake.embeds.Embed:7 of
msgid ""
"Returns the total size of the embed. Useful for checking if it's within "
"the 6000 character limit."
msgstr ""

#: disnake.embeds.Embed:12 of
msgid "Returns whether the embed has any data set."
msgstr ""

#: disnake.embeds.Embed:16 of
msgid ""
"Certain properties return an ``EmbedProxy``, a type that acts similar to "
"a regular :class:`dict` except using dotted access, e.g. "
"``embed.author.icon_url``. If the attribute is invalid or empty, then a "
"special sentinel value is returned, :attr:`Embed.Empty`."
msgstr ""

#: disnake.embeds.Embed:22 of
msgid ""
"For ease of use, all parameters that expect a :class:`str` are implicitly"
" casted to :class:`str` for you."
msgstr ""

#: disnake.embeds.Embed:27 of
msgid "The title of the embed. This can be set during initialisation."
msgstr ""

#: disnake.embeds.Embed:34 of
msgid ""
"The type of embed. Usually \"rich\". This can be set during "
"initialisation. Possible strings for embed types can be found on "
"disnake's `api docs "
"<https://discord.com/developers/docs/resources/channel#embed-object-"
"embed-types>`_"
msgstr ""

#: disnake.embeds.Embed:43 of
msgid "The description of the embed. This can be set during initialisation."
msgstr ""

#: disnake.embeds.Embed:50 of
msgid "The URL of the embed. This can be set during initialisation."
msgstr ""

#: disnake.embeds.Embed:57 of
msgid ""
"The timestamp of the embed content. This is an aware datetime. If a naive"
" datetime is passed, it is converted to an aware datetime with the local "
"timezone."
msgstr ""

#: disnake.embeds.Embed:65 of
msgid ""
"The colour code of the embed. Aliased to ``color`` as well. This can be "
"set during initialisation."
msgstr ""

#: disnake.embeds.Embed:68 of
msgid "Union[:class:`Colour`, :class:`int`]"
msgstr ""

#: disnake.embeds.Embed:72 of
msgid ""
"A special sentinel value used by ``EmbedProxy`` and this class to denote "
"that the value or attribute is empty."
msgstr ""

#: disnake.embeds.Embed:75 of
msgid "Final"
msgstr ""

#: disnake.embeds.Embed.from_dict:1 of
msgid ""
"Converts a :class:`dict` to a :class:`Embed` provided it is in the format"
" that Discord expects it to be in."
msgstr ""

#: disnake.embeds.Embed.from_dict:4 of
msgid ""
"You can find out about this format in the `official Discord "
"documentation`__."
msgstr ""

#: disnake.embeds.Embed.from_dict:10 of
msgid "The dictionary to convert into an embed."
msgstr ""

#: disnake.embeds.Embed.copy:1 of
msgid "Returns a shallow copy of the embed."
msgstr ""

#: disnake.Embed.footer:1 of
msgid "Returns an ``EmbedProxy`` denoting the footer contents."
msgstr ""

#: disnake.Embed.footer:3 of
msgid "See :meth:`set_footer` for possible values you can access."
msgstr ""

#: disnake.Embed.author:5 disnake.Embed.fields:5 disnake.Embed.footer:5
#: disnake.Embed.image:10 disnake.Embed.provider:5 disnake.Embed.thumbnail:10
#: disnake.Embed.video:9 of
msgid "If the attribute has no value then :attr:`Empty` is returned."
msgstr ""

#: disnake.embeds.Embed.set_footer:1 of
msgid "Sets the footer for the embed content."
msgstr ""

#: disnake.embeds.Embed.add_field:3 disnake.embeds.Embed.insert_field_at:3
#: disnake.embeds.Embed.remove_author:3 disnake.embeds.Embed.remove_footer:3
#: disnake.embeds.Embed.set_author:3 disnake.embeds.Embed.set_field_at:5
#: disnake.embeds.Embed.set_footer:3 disnake.embeds.Embed.set_image:3
#: disnake.embeds.Embed.set_thumbnail:3 of
msgid ""
"This function returns the class instance to allow for fluent-style "
"chaining."
msgstr ""

#: disnake.embeds.Embed.set_footer:6 of
msgid "The footer text."
msgstr ""

#: disnake.embeds.Embed.set_footer:8 of
msgid "The URL of the footer icon. Only HTTP(S) is supported."
msgstr ""

#: disnake.embeds.Embed.remove_footer:1 of
msgid "Clears embed's footer information."
msgstr ""

#: disnake.Embed.image:1 of
msgid "Returns an ``EmbedProxy`` denoting the image contents."
msgstr ""

#: disnake.Embed.image:3 disnake.Embed.thumbnail:3 of
msgid "Possible attributes you can access are:"
msgstr ""

#: disnake.Embed.image:5 disnake.Embed.thumbnail:5 of
msgid "``url``"
msgstr ""

#: disnake.Embed.image:6 disnake.Embed.thumbnail:6 of
msgid "``proxy_url``"
msgstr ""

#: disnake.Embed.image:7 disnake.Embed.thumbnail:7 of
msgid "``width``"
msgstr ""

#: disnake.Embed.image:8 disnake.Embed.thumbnail:8 of
msgid "``height``"
msgstr ""

#: disnake.embeds.Embed.set_image:1 of
msgid "Sets the image for the embed content."
msgstr ""

#: disnake.embeds.Embed.set_image:6 of
msgid "Passing :attr:`Empty` removes the image."
msgstr ""

#: disnake.embeds.Embed.set_image:9 of
msgid "The source URL for the image. Only HTTP(S) is supported."
msgstr ""

#: disnake.embeds.Embed.set_image:11 disnake.embeds.Embed.set_thumbnail:11 of
msgid "The file to use as the image."
msgstr ""

#: disnake.Embed.thumbnail:1 of
msgid "Returns an ``EmbedProxy`` denoting the thumbnail contents."
msgstr ""

#: disnake.embeds.Embed.set_thumbnail:1 of
msgid "Sets the thumbnail for the embed content."
msgstr ""

#: disnake.embeds.Embed.set_thumbnail:6 of
msgid "Passing :attr:`Empty` removes the thumbnail."
msgstr ""

#: disnake.embeds.Embed.set_thumbnail:9 of
msgid "The source URL for the thumbnail. Only HTTP(S) is supported."
msgstr ""

#: disnake.Embed.video:1 of
msgid "Returns an ``EmbedProxy`` denoting the video contents."
msgstr ""

#: disnake.Embed.video:3 of
msgid "Possible attributes include:"
msgstr ""

#: disnake.Embed.video:5 of
msgid "``url`` for the video URL."
msgstr ""

#: disnake.Embed.video:6 of
msgid "``height`` for the video height."
msgstr ""

#: disnake.Embed.video:7 of
msgid "``width`` for the video width."
msgstr ""

#: disnake.Embed.provider:1 of
msgid "Returns an ``EmbedProxy`` denoting the provider contents."
msgstr ""

#: disnake.Embed.provider:3 of
msgid "The only attributes that might be accessed are ``name`` and ``url``."
msgstr ""

#: disnake.Embed.author:1 of
msgid "Returns an ``EmbedProxy`` denoting the author contents."
msgstr ""

#: disnake.Embed.author:3 of
msgid "See :meth:`set_author` for possible values you can access."
msgstr ""

#: disnake.embeds.Embed.set_author:1 of
msgid "Sets the author for the embed content."
msgstr ""

#: disnake.embeds.Embed.set_author:6 of
msgid "The name of the author."
msgstr ""

#: disnake.embeds.Embed.set_author:8 of
msgid "The URL for the author."
msgstr ""

#: disnake.embeds.Embed.set_author:10 of
msgid "The URL of the author icon. Only HTTP(S) is supported."
msgstr ""

#: disnake.embeds.Embed.remove_author:1 of
msgid "Clears embed's author information."
msgstr ""

#: disnake.Embed.fields:1 of
msgid "Returns a :class:`list` of ``EmbedProxy`` denoting the field contents."
msgstr ""

#: disnake.Embed.fields:3 of
msgid "See :meth:`add_field` for possible values you can access."
msgstr ""

#: disnake.Embed.fields:7 of
msgid "List[Union[``EmbedProxy``, :attr:`Empty`]]"
msgstr ""

#: disnake.embeds.Embed.add_field:1 of
msgid "Adds a field to the embed object."
msgstr ""

#: disnake.embeds.Embed.add_field:6 disnake.embeds.Embed.insert_field_at:10
#: disnake.embeds.Embed.set_field_at:10 of
msgid "The name of the field."
msgstr ""

#: disnake.embeds.Embed.add_field:8 disnake.embeds.Embed.insert_field_at:12
#: disnake.embeds.Embed.set_field_at:12 of
msgid "The value of the field."
msgstr ""

#: disnake.embeds.Embed.add_field:10 disnake.embeds.Embed.insert_field_at:14
#: disnake.embeds.Embed.set_field_at:14 of
msgid "Whether the field should be displayed inline."
msgstr ""

#: disnake.embeds.Embed.insert_field_at:1 of
msgid "Inserts a field before a specified index to the embed."
msgstr ""

#: disnake.embeds.Embed.insert_field_at:8 of
msgid "The index of where to insert the field."
msgstr ""

#: disnake.embeds.Embed.clear_fields:1 of
msgid "Removes all fields from this embed."
msgstr ""

#: disnake.embeds.Embed.remove_field:1 of
msgid "Removes a field at a specified index."
msgstr ""

#: disnake.embeds.Embed.remove_field:3 of
msgid ""
"If the index is invalid or out of bounds then the error is silently "
"swallowed."
msgstr ""

#: disnake.embeds.Embed.remove_field:8 of
msgid ""
"When deleting a field by index, the index of the other fields shift to "
"fill the gap just like a regular list."
msgstr ""

#: disnake.embeds.Embed.remove_field:11 of
msgid "The index of the field to remove."
msgstr ""

#: disnake.embeds.Embed.set_field_at:1 of
msgid "Modifies a field to the embed object."
msgstr ""

#: disnake.embeds.Embed.set_field_at:3 of
msgid "The index must point to a valid pre-existing field."
msgstr ""

#: disnake.embeds.Embed.set_field_at:8 of
msgid "The index of the field to modify."
msgstr ""

#: disnake.embeds.Embed.set_field_at:17 of
msgid "An invalid index was provided."
msgstr ""

#: disnake.embeds.Embed.to_dict:1 of
msgid "Converts this embed object into a dict."
msgstr ""

#: ../../api.rst:4197
msgid "AllowedMentions"
msgstr ""

#: disnake.mentions.AllowedMentions:1 of
msgid "A class that represents what mentions are allowed in a message."
msgstr ""

#: disnake.mentions.AllowedMentions:3 of
msgid ""
"This class can be set during :class:`Client` initialisation to apply to "
"every message sent. It can also be applied on a per message basis via "
":meth:`abc.Messageable.send` for more fine-grained control."
msgstr ""

#: disnake.mentions.AllowedMentions:9 of
msgid "Whether to allow everyone and here mentions. Defaults to ``True``."
msgstr ""

#: disnake.mentions.AllowedMentions:15 of
msgid ""
"Controls the users being mentioned. If ``True`` (the default) then users "
"are mentioned based on the message content. If ``False`` then users are "
"not mentioned at all. If a list of :class:`abc.Snowflake` is given then "
"only the users provided will be mentioned, provided those users are in "
"the message content."
msgstr ""

#: disnake.mentions.AllowedMentions:21 disnake.mentions.AllowedMentions:31 of
msgid "Union[:class:`bool`, List[:class:`abc.Snowflake`]]"
msgstr ""

#: disnake.mentions.AllowedMentions:25 of
msgid ""
"Controls the roles being mentioned. If ``True`` (the default) then roles "
"are mentioned based on the message content. If ``False`` then roles are "
"not mentioned at all. If a list of :class:`abc.Snowflake` is given then "
"only the roles provided will be mentioned, provided those roles are in "
"the message content."
msgstr ""

#: disnake.mentions.AllowedMentions:35 of
msgid ""
"Whether to mention the author of the message being replied to. Defaults "
"to ``True``."
msgstr ""

#: disnake.mentions.AllowedMentions.all:1 of
msgid ""
"A factory method that returns a :class:`AllowedMentions` with all fields "
"explicitly set to ``True``"
msgstr ""

#: disnake.mentions.AllowedMentions.none:1 of
msgid ""
"A factory method that returns a :class:`AllowedMentions` with all fields "
"set to ``False``"
msgstr ""

#: ../../api.rst:4205
msgid "MessageReference"
msgstr ""

#: disnake.message.MessageReference:1 of
msgid "Represents a reference to a :class:`~disnake.Message`."
msgstr ""

#: disnake.message.MessageReference:5 of
msgid "This class can now be constructed by users."
msgstr ""

#: disnake.message.MessageReference:10 of
msgid "The id of the message referenced."
msgstr ""

#: disnake.message.MessageReference:16 of
msgid "The channel id of the message referenced."
msgstr ""

#: disnake.message.MessageReference:22 of
msgid "The guild id of the message referenced."
msgstr ""

#: disnake.message.MessageReference:28
#: disnake.message.MessageReference.from_message:7 of
msgid ""
"Whether replying to the referenced message should raise "
":class:`HTTPException` if the message no longer exists or Discord could "
"not fetch the message."
msgstr ""

#: disnake.message.MessageReference:37 of
msgid ""
"The message that this reference resolved to. If this is ``None`` then the"
" original message was not fetched either due to the Discord API not "
"attempting to resolve it or it not being available at the time of "
"creation. If the message was resolved at a prior point but has since been"
" deleted then this will be of type :class:`DeletedReferencedMessage`."
msgstr ""

#: disnake.message.MessageReference:43 of
msgid ""
"Currently, this is mainly the replied to message when a user replies to a"
" message."
msgstr ""

#: disnake.message.MessageReference:47 of
msgid "Optional[Union[:class:`Message`, :class:`DeletedReferencedMessage`]]"
msgstr ""

#: disnake.message.MessageReference.from_message:1 of
msgid ""
"Creates a :class:`MessageReference` from an existing "
":class:`~disnake.Message`."
msgstr ""

#: disnake.message.MessageReference.from_message:5 of
msgid "The message to be converted into a reference."
msgstr ""

#: disnake.message.MessageReference.from_message:7 of
msgid ""
"Whether replying to the referenced message should raise "
":class:`HTTPException` if the message no longer exists or Discord could "
"not fetch the message.  .. versionadded:: 1.7"
msgstr ""

#: disnake.message.MessageReference.from_message:13 of
msgid "A reference to the message."
msgstr ""

#: disnake.message.MessageReference.from_message:14 of
msgid ":class:`MessageReference`"
msgstr ""

#: disnake.MessageReference.cached_message:3 of
msgid "Optional[:class:`~disnake.Message`]"
msgstr ""

#: disnake.MessageReference.jump_url:1 of
msgid "Returns a URL that allows the client to jump to the referenced message."
msgstr ""

#: ../../api.rst:4213
msgid "InteractionReference"
msgstr ""

#: disnake.message.InteractionReference:1 of
msgid "Represents an interaction being referenced in a message."
msgstr ""

#: disnake.message.InteractionReference:3 of
msgid ""
"This means responses to message components do not include this property, "
"instead including a message reference object as components always exist "
"on preexisting messages."
msgstr ""

#: disnake.message.InteractionReference:10 of
msgid "ID of the interaction"
msgstr ""

#: disnake.message.InteractionReference:16 of
msgid "The type of interaction"
msgstr ""

#: disnake.message.InteractionReference:22 of
msgid "The name of the application command"
msgstr ""

#: disnake.message.InteractionReference:28 of
msgid "The user who invoked the interaction"
msgstr ""

#: ../../api.rst:4221
msgid "PartialMessage"
msgstr ""

#: disnake.message.PartialMessage:1 of
msgid ""
"Represents a partial message to aid with working messages when only a "
"message and channel ID are present."
msgstr ""

#: disnake.message.PartialMessage:4 of
msgid ""
"There are two ways to construct this class. The first one is through the "
"constructor itself, and the second is via the following:"
msgstr ""

#: disnake.message.PartialMessage:7 of
msgid ":meth:`TextChannel.get_partial_message`"
msgstr ""

#: disnake.message.PartialMessage:8 of
msgid ":meth:`Thread.get_partial_message`"
msgstr ""

#: disnake.message.PartialMessage:9 of
msgid ":meth:`DMChannel.get_partial_message`"
msgstr ""

#: disnake.message.PartialMessage:19 of
msgid "Checks if two partial messages are equal."
msgstr ""

#: disnake.message.PartialMessage:23 of
msgid "Checks if two partial messages are not equal."
msgstr ""

#: disnake.message.PartialMessage:27 of
msgid "Returns the partial message's hash."
msgstr ""

#: disnake.message.PartialMessage:31 of
msgid "The channel associated with this partial message."
msgstr ""

#: disnake.message.PartialMessage:33 of
msgid "Union[:class:`TextChannel`, :class:`Thread`, :class:`DMChannel`]"
msgstr ""

#: disnake.PartialMessage.created_at:1 of
msgid "The partial message's creation time in UTC."
msgstr ""

#: ../../docstring disnake.PartialMessage.guild:1 of
msgid "The guild that the partial message belongs to, if applicable."
msgstr ""

#: disnake.message.PartialMessage.fetch:3 of
msgid "Fetches the partial message to a full :class:`Message`."
msgstr ""

#: disnake.message.PartialMessage.edit:64
#: disnake.message.PartialMessage.fetch:5 of
msgid "The message was not found."
msgstr ""

#: disnake.message.PartialMessage.fetch:9 of
msgid "The full message."
msgstr ""

#: disnake.message.PartialMessage.edit:7 of
msgid ":class:`disnake.Message` is always returned."
msgstr ""

#: disnake.message.PartialMessage.edit:17 of
msgid ""
"The new embeds to replace the original with. Must be a maximum of 10. "
"This cannot be mixed with the ``embed`` parameter. To remove all embeds "
"``[]`` should be passed.  .. versionadded:: 2.1"
msgstr ""

#: disnake.message.PartialMessage.edit:49 of
msgid ""
"Controls the mentions being processed in this message. If this is passed,"
" then the object is merged with :attr:`Client.allowed_mentions`. The "
"merging behaviour only overrides attributes that have been explicitly "
"passed to the object, otherwise it uses the attributes set in "
":attr:`Client.allowed_mentions`.  .. note::     Unlike "
":meth:`Message.edit`, this does not default to     "
":attr:`Client.allowed_mentions` if no object is passed."
msgstr ""

#: disnake.message.PartialMessage.edit:49 of
msgid ""
"Controls the mentions being processed in this message. If this is passed,"
" then the object is merged with :attr:`Client.allowed_mentions`. The "
"merging behaviour only overrides attributes that have been explicitly "
"passed to the object, otherwise it uses the attributes set in "
":attr:`Client.allowed_mentions`."
msgstr ""

#: disnake.message.PartialMessage.edit:55 of
msgid ""
"Unlike :meth:`Message.edit`, this does not default to "
":attr:`Client.allowed_mentions` if no object is passed."
msgstr ""

#: ../../api.rst:4245
msgid "SelectOption"
msgstr ""

#: disnake.components.SelectOption:1 of
msgid "Represents a select menu's option."
msgstr ""

#: disnake.components.SelectOption:3 of
msgid "These can be created by users."
msgstr ""

#: disnake.components.SelectOption:9 disnake.ui.select.Select.add_option:6 of
msgid ""
"The label of the option. This is displayed to users. Can only be up to "
"100 characters."
msgstr ""

#: disnake.components.SelectOption:16 of
msgid ""
"The value of the option. This is not displayed to users. If not provided "
"when constructed then it defaults to the label. Can only be up to 100 "
"characters."
msgstr ""

#: disnake.components.SelectOption:24 disnake.ui.select.Select.add_option:12 of
msgid ""
"An additional description of the option, if any. Can only be up to 100 "
"characters."
msgstr ""

#: disnake.components.SelectOption:31 of
msgid "The emoji of the option, if available."
msgstr ""

#: disnake.components.SelectOption:33 of
msgid "Optional[Union[:class:`str`, :class:`Emoji`, :class:`PartialEmoji`]]"
msgstr ""

#: disnake.components.SelectOption:37 disnake.ui.select.Select.add_option:18 of
msgid "Whether this option is selected by default."
msgstr ""

#: ../../api.rst:4253
msgid "Intents"
msgstr ""

#: disnake.flags.Intents:1 of
msgid "Wraps up a Discord gateway intent flag."
msgstr ""

#: disnake.flags.Intents:3 of
msgid ""
"Similar to :class:`Permissions`\\, the properties provided are two way. "
"You can set and retrieve individual bits using the properties as if they "
"were regular bools."
msgstr ""

#: disnake.flags.Intents:7 disnake.flags.MemberCacheFlags:12
#: disnake.flags.SystemChannelFlags:7 of
msgid ""
"To construct an object you can pass keyword arguments denoting the flags "
"to enable or disable."
msgstr ""

#: disnake.flags.Intents:10 of
msgid ""
"This is used to disable certain gateway features that are unnecessary to "
"run your bot. To make use of this, it is passed to the ``intents`` "
"keyword argument of :class:`Client`."
msgstr ""

#: disnake.flags.Intents:20 disnake.flags.MemberCacheFlags:23
#: disnake.flags.MessageFlags:9 disnake.flags.SystemChannelFlags:14 of
msgid "Checks if two flags are equal."
msgstr ""

#: disnake.flags.Intents:23 disnake.flags.MemberCacheFlags:26
#: disnake.flags.MessageFlags:12 disnake.flags.SystemChannelFlags:17 of
msgid "Checks if two flags are not equal."
msgstr ""

#: disnake.flags.ApplicationFlags:13 disnake.flags.Intents:26
#: disnake.flags.MemberCacheFlags:29 disnake.flags.MessageFlags:15
#: disnake.flags.PublicUserFlags:13 disnake.flags.SystemChannelFlags:20 of
msgid "Return the flag's hash."
msgstr ""

#: disnake.flags.Intents:29 disnake.flags.MemberCacheFlags:32
#: disnake.flags.MessageFlags:18 disnake.flags.SystemChannelFlags:23 of
msgid ""
"Returns an iterator of ``(name, value)`` pairs. This allows it to be, for"
" example, constructed as a dict or a list of pairs."
msgstr ""

#: disnake.flags.ApplicationFlags:24 disnake.flags.Intents:34
#: disnake.flags.MemberCacheFlags:37 of
msgid ""
"The raw value. You should query flags via the properties rather than "
"using this raw value."
msgstr ""

#: disnake.flags.Intents.all:1 of
msgid "A factory method that creates a :class:`Intents` with everything enabled."
msgstr ""

#: disnake.flags.Intents.none:1 of
msgid "A factory method that creates a :class:`Intents` with everything disabled."
msgstr ""

#: disnake.flags.Intents.default:1 of
msgid ""
"A factory method that creates a :class:`Intents` with everything enabled "
"except :attr:`presences` and :attr:`members`."
msgstr ""

#: ../../docstring disnake.Intents.guilds:1 of
msgid "Whether guild related events are enabled."
msgstr ""

#: ../../docstring disnake.Intents.bans:3 disnake.Intents.dm_messages:5
#: disnake.Intents.dm_reactions:5 disnake.Intents.dm_typing:5
#: disnake.Intents.emojis_and_stickers:5 disnake.Intents.guild_messages:5
#: disnake.Intents.guild_reactions:5 disnake.Intents.guild_typing:5
#: disnake.Intents.guilds:3 disnake.Intents.integrations:3
#: disnake.Intents.invites:3 disnake.Intents.members:3
#: disnake.Intents.messages:5 disnake.Intents.presences:3
#: disnake.Intents.reactions:5 disnake.Intents.typing:5
#: disnake.Intents.voice_states:3 disnake.Intents.webhooks:3 of
msgid "This corresponds to the following events:"
msgstr ""

#: ../../docstring disnake.Intents.guilds:5 of
msgid ":func:`on_guild_join`"
msgstr ""

#: ../../docstring disnake.Intents.guilds:6 of
msgid ":func:`on_guild_remove`"
msgstr ""

#: ../../docstring disnake.Intents.guilds:7 of
msgid ":func:`on_guild_available`"
msgstr ""

#: ../../docstring disnake.Intents.guilds:8 of
msgid ":func:`on_guild_unavailable`"
msgstr ""

#: ../../docstring disnake.Intents.guilds:9 of
msgid ":func:`on_guild_channel_update`"
msgstr ""

#: ../../docstring disnake.Intents.guilds:10 of
msgid ":func:`on_guild_channel_create`"
msgstr ""

#: ../../docstring disnake.Intents.guilds:11 of
msgid ":func:`on_guild_channel_delete`"
msgstr ""

#: ../../docstring disnake.Intents.guilds:12 of
msgid ":func:`on_guild_channel_pins_update`"
msgstr ""

#: ../../docstring disnake.Intents.dm_messages:13
#: disnake.Intents.dm_reactions:14 disnake.Intents.emojis_and_stickers:10
#: disnake.Intents.guild_messages:13 disnake.Intents.guild_reactions:14
#: disnake.Intents.guilds:14 disnake.Intents.members:10
#: disnake.Intents.messages:13 disnake.Intents.presences:7
#: disnake.Intents.reactions:14 disnake.Intents.voice_states:7 of
msgid ""
"This also corresponds to the following attributes and classes in terms of"
" cache:"
msgstr ""

#: ../../docstring disnake.Intents.guilds:16 of
msgid ":attr:`Client.guilds`"
msgstr ""

#: ../../docstring disnake.Intents.guilds:17 of
msgid ":class:`Guild` and all its attributes."
msgstr ""

#: ../../docstring disnake.Intents.guilds:18 of
msgid ":meth:`Client.get_channel`"
msgstr ""

#: ../../docstring disnake.Intents.guilds:19 of
msgid ":meth:`Client.get_all_channels`"
msgstr ""

#: ../../docstring disnake.Intents.guilds:21 of
msgid ""
"It is highly advisable to leave this intent enabled for your bot to "
"function."
msgstr ""

#: ../../docstring disnake.Intents.members:1 of
msgid "Whether guild member related events are enabled."
msgstr ""

#: ../../docstring disnake.Intents.members:5 of
msgid ":func:`on_member_join`"
msgstr ""

#: ../../docstring disnake.Intents.members:6 of
msgid ":func:`on_member_remove`"
msgstr ""

#: ../../docstring disnake.Intents.members:7 of
msgid ":func:`on_member_update`"
msgstr ""

#: ../../docstring disnake.Intents.members:8 of
msgid ":func:`on_user_update`"
msgstr ""

#: ../../docstring disnake.Intents.members:12 of
msgid ":meth:`Client.get_all_members`"
msgstr ""

#: ../../docstring disnake.Intents.members:13 of
msgid ":meth:`Client.get_user`"
msgstr ""

#: ../../docstring disnake.Intents.members:14 of
msgid ":meth:`Guild.chunk`"
msgstr ""

#: ../../docstring disnake.Intents.members:15 of
msgid ":meth:`Guild.fetch_members`"
msgstr ""

#: ../../docstring disnake.Intents.members:16 of
msgid ":meth:`Guild.get_member`"
msgstr ""

#: ../../docstring disnake.Intents.members:17 of
msgid ":attr:`Guild.members`"
msgstr ""

#: ../../docstring disnake.Intents.members:18 of
msgid ":attr:`Member.roles`"
msgstr ""

#: ../../docstring disnake.Intents.members:19 of
msgid ":attr:`Member.nick`"
msgstr ""

#: ../../docstring disnake.Intents.members:20 of
msgid ":attr:`Member.premium_since`"
msgstr ""

#: ../../docstring disnake.Intents.members:21 of
msgid ":attr:`User.name`"
msgstr ""

#: ../../docstring disnake.Intents.members:22 of
msgid ":attr:`User.avatar`"
msgstr ""

#: ../../docstring disnake.Intents.members:23 of
msgid ":attr:`User.discriminator`"
msgstr ""

#: ../../docstring disnake.Intents.members:25 of
msgid ""
"For more information go to the :ref:`member intent documentation "
"<need_members_intent>`."
msgstr ""

#: ../../docstring disnake.Intents.members:29 disnake.Intents.presences:17 of
msgid ""
"Currently, this requires opting in explicitly via the developer portal as"
" well. Bots in over 100 guilds will need to apply to Discord for "
"verification."
msgstr ""

#: ../../docstring disnake.Intents.bans:1 of
msgid "Whether guild ban related events are enabled."
msgstr ""

#: ../../docstring disnake.Intents.bans:5 of
msgid ":func:`on_member_ban`"
msgstr ""

#: ../../docstring disnake.Intents.bans:6 of
msgid ":func:`on_member_unban`"
msgstr ""

#: ../../docstring disnake.Intents.bans:8 disnake.Intents.dm_typing:9
#: disnake.Intents.guild_typing:9 disnake.Intents.integrations:10
#: disnake.Intents.invites:8 disnake.Intents.typing:9
#: disnake.Intents.webhooks:7 of
msgid ""
"This does not correspond to any attributes or classes in the library in "
"terms of cache."
msgstr ""

#: ../../docstring disnake.Intents.emojis:1 of
msgid "Alias of :attr:`.emojis_and_stickers`."
msgstr ""

#: ../../docstring disnake.Intents.emojis:3 of
msgid "Changed to an alias."
msgstr ""

#: ../../docstring disnake.Intents.emojis_and_stickers:1 of
msgid "Whether guild emoji and sticker related events are enabled."
msgstr ""

#: ../../docstring disnake.Intents.emojis_and_stickers:7 of
msgid ":func:`on_guild_emojis_update`"
msgstr ""

#: ../../docstring disnake.Intents.emojis_and_stickers:8 of
msgid ":func:`on_guild_stickers_update`"
msgstr ""

#: ../../docstring disnake.Intents.emojis_and_stickers:14 of
msgid ":meth:`Client.get_emoji`"
msgstr ""

#: ../../docstring disnake.Intents.emojis_and_stickers:15 of
msgid ":meth:`Client.get_sticker`"
msgstr ""

#: ../../docstring disnake.Intents.emojis_and_stickers:16 of
msgid ":meth:`Client.emojis`"
msgstr ""

#: ../../docstring disnake.Intents.emojis_and_stickers:17 of
msgid ":meth:`Client.stickers`"
msgstr ""

#: ../../docstring disnake.Intents.emojis_and_stickers:18 of
msgid ":attr:`Guild.emojis`"
msgstr ""

#: ../../docstring disnake.Intents.emojis_and_stickers:19 of
msgid ":attr:`Guild.stickers`"
msgstr ""

#: ../../docstring disnake.Intents.integrations:1 of
msgid "Whether guild integration related events are enabled."
msgstr ""

#: ../../docstring disnake.Intents.integrations:5 of
msgid ":func:`on_guild_integrations_update`"
msgstr ""

#: ../../docstring disnake.Intents.integrations:6 of
msgid ":func:`on_integration_create`"
msgstr ""

#: ../../docstring disnake.Intents.integrations:7 of
msgid ":func:`on_integration_update`"
msgstr ""

#: ../../docstring disnake.Intents.integrations:8 of
msgid ":func:`on_raw_integration_delete`"
msgstr ""

#: ../../docstring disnake.Intents.webhooks:1 of
msgid "Whether guild webhook related events are enabled."
msgstr ""

#: ../../docstring disnake.Intents.webhooks:5 of
msgid ":func:`on_webhooks_update`"
msgstr ""

#: ../../docstring disnake.Intents.invites:1 of
msgid "Whether guild invite related events are enabled."
msgstr ""

#: ../../docstring disnake.Intents.invites:5 of
msgid ":func:`on_invite_create`"
msgstr ""

#: ../../docstring disnake.Intents.invites:6 of
msgid ":func:`on_invite_delete`"
msgstr ""

#: ../../docstring disnake.Intents.voice_states:1 of
msgid "Whether guild voice state related events are enabled."
msgstr ""

#: ../../docstring disnake.Intents.voice_states:5 of
msgid ":func:`on_voice_state_update`"
msgstr ""

#: ../../docstring disnake.Intents.voice_states:9 of
msgid ":attr:`VoiceChannel.members`"
msgstr ""

#: ../../docstring disnake.Intents.voice_states:10 of
msgid ":attr:`VoiceChannel.voice_states`"
msgstr ""

#: ../../docstring disnake.Intents.voice_states:11 of
msgid ":attr:`Member.voice`"
msgstr ""

#: ../../docstring disnake.Intents.voice_states:15 of
msgid "This intent is required to connect to voice."
msgstr ""

#: ../../docstring disnake.Intents.presences:1 of
msgid "Whether guild presence related events are enabled."
msgstr ""

#: ../../docstring disnake.Intents.presences:5 of
msgid ":func:`on_presence_update`"
msgstr ""

#: ../../docstring disnake.Intents.presences:9 of
msgid ":attr:`Member.activities`"
msgstr ""

#: ../../docstring disnake.Intents.presences:10 of
msgid ":attr:`Member.status`"
msgstr ""

#: ../../docstring disnake.Intents.presences:11 of
msgid ":attr:`Member.raw_status`"
msgstr ""

#: ../../docstring disnake.Intents.presences:13 of
msgid ""
"For more information go to the :ref:`presence intent documentation "
"<need_presence_intent>`."
msgstr ""

#: ../../docstring disnake.Intents.messages:1 of
msgid "Whether guild and direct message related events are enabled."
msgstr ""

#: ../../docstring disnake.Intents.messages:3 of
msgid ""
"This is a shortcut to set or get both :attr:`guild_messages` and "
":attr:`dm_messages`."
msgstr ""

#: ../../docstring disnake.Intents.messages:7 of
msgid ":func:`on_message` (both guilds and DMs)"
msgstr ""

#: ../../docstring disnake.Intents.messages:8 of
msgid ":func:`on_message_edit` (both guilds and DMs)"
msgstr ""

#: ../../docstring disnake.Intents.messages:9 of
msgid ":func:`on_message_delete` (both guilds and DMs)"
msgstr ""

#: ../../docstring disnake.Intents.messages:10 of
msgid ":func:`on_raw_message_delete` (both guilds and DMs)"
msgstr ""

#: ../../docstring disnake.Intents.messages:11 of
msgid ":func:`on_raw_message_edit` (both guilds and DMs)"
msgstr ""

#: ../../docstring disnake.Intents.messages:16 of
msgid ":attr:`Client.cached_messages`"
msgstr ""

#: ../../docstring disnake.Intents.dm_messages:18
#: disnake.Intents.guild_messages:18 disnake.Intents.messages:18 of
msgid ""
"Note that due to an implicit relationship this also corresponds to the "
"following events:"
msgstr ""

#: ../../docstring disnake.Intents.messages:20 disnake.Intents.reactions:7 of
msgid ":func:`on_reaction_add` (both guilds and DMs)"
msgstr ""

#: ../../docstring disnake.Intents.messages:21 disnake.Intents.reactions:8 of
msgid ":func:`on_reaction_remove` (both guilds and DMs)"
msgstr ""

#: ../../docstring disnake.Intents.messages:22 disnake.Intents.reactions:9 of
msgid ":func:`on_reaction_clear` (both guilds and DMs)"
msgstr ""

#: ../../docstring disnake.Intents.guild_messages:1 of
msgid "Whether guild message related events are enabled."
msgstr ""

#: ../../docstring disnake.Intents.guild_messages:3 of
msgid "See also :attr:`dm_messages` for DMs or :attr:`messages` for both."
msgstr ""

#: ../../docstring disnake.Intents.guild_messages:7 of
msgid ":func:`on_message` (only for guilds)"
msgstr ""

#: ../../docstring disnake.Intents.guild_messages:8 of
msgid ":func:`on_message_edit` (only for guilds)"
msgstr ""

#: ../../docstring disnake.Intents.guild_messages:9 of
msgid ":func:`on_message_delete` (only for guilds)"
msgstr ""

#: ../../docstring disnake.Intents.guild_messages:10 of
msgid ":func:`on_raw_message_delete` (only for guilds)"
msgstr ""

#: ../../docstring disnake.Intents.guild_messages:11 of
msgid ":func:`on_raw_message_edit` (only for guilds)"
msgstr ""

#: ../../docstring disnake.Intents.guild_messages:16 of
msgid ":attr:`Client.cached_messages` (only for guilds)"
msgstr ""

#: ../../docstring disnake.Intents.guild_messages:20
#: disnake.Intents.guild_reactions:7 of
msgid ":func:`on_reaction_add` (only for guilds)"
msgstr ""

#: ../../docstring disnake.Intents.guild_messages:21
#: disnake.Intents.guild_reactions:8 of
msgid ":func:`on_reaction_remove` (only for guilds)"
msgstr ""

#: ../../docstring disnake.Intents.guild_messages:22
#: disnake.Intents.guild_reactions:9 of
msgid ":func:`on_reaction_clear` (only for guilds)"
msgstr ""

#: ../../docstring disnake.Intents.dm_messages:1 of
msgid "Whether direct message related events are enabled."
msgstr ""

#: ../../docstring disnake.Intents.dm_messages:3 of
msgid "See also :attr:`guild_messages` for guilds or :attr:`messages` for both."
msgstr ""

#: ../../docstring disnake.Intents.dm_messages:7 of
msgid ":func:`on_message` (only for DMs)"
msgstr ""

#: ../../docstring disnake.Intents.dm_messages:8 of
msgid ":func:`on_message_edit` (only for DMs)"
msgstr ""

#: ../../docstring disnake.Intents.dm_messages:9 of
msgid ":func:`on_message_delete` (only for DMs)"
msgstr ""

#: ../../docstring disnake.Intents.dm_messages:10 of
msgid ":func:`on_raw_message_delete` (only for DMs)"
msgstr ""

#: ../../docstring disnake.Intents.dm_messages:11 of
msgid ":func:`on_raw_message_edit` (only for DMs)"
msgstr ""

#: ../../docstring disnake.Intents.dm_messages:16 of
msgid ":attr:`Client.cached_messages` (only for DMs)"
msgstr ""

#: ../../docstring disnake.Intents.dm_messages:20
#: disnake.Intents.dm_reactions:7 of
msgid ":func:`on_reaction_add` (only for DMs)"
msgstr ""

#: ../../docstring disnake.Intents.dm_messages:21
#: disnake.Intents.dm_reactions:8 of
msgid ":func:`on_reaction_remove` (only for DMs)"
msgstr ""

#: ../../docstring disnake.Intents.dm_messages:22
#: disnake.Intents.dm_reactions:9 of
msgid ":func:`on_reaction_clear` (only for DMs)"
msgstr ""

#: ../../docstring disnake.Intents.reactions:1 of
msgid "Whether guild and direct message reaction related events are enabled."
msgstr ""

#: ../../docstring disnake.Intents.reactions:3 of
msgid ""
"This is a shortcut to set or get both :attr:`guild_reactions` and "
":attr:`dm_reactions`."
msgstr ""

#: ../../docstring disnake.Intents.reactions:10 of
msgid ":func:`on_raw_reaction_add` (both guilds and DMs)"
msgstr ""

#: ../../docstring disnake.Intents.reactions:11 of
msgid ":func:`on_raw_reaction_remove` (both guilds and DMs)"
msgstr ""

#: ../../docstring disnake.Intents.reactions:12 of
msgid ":func:`on_raw_reaction_clear` (both guilds and DMs)"
msgstr ""

#: ../../docstring disnake.Intents.reactions:16 of
msgid ":attr:`Message.reactions` (both guild and DM messages)"
msgstr ""

#: ../../docstring disnake.Intents.guild_reactions:1 of
msgid "Whether guild message reaction related events are enabled."
msgstr ""

#: ../../docstring disnake.Intents.guild_reactions:3 of
msgid "See also :attr:`dm_reactions` for DMs or :attr:`reactions` for both."
msgstr ""

#: ../../docstring disnake.Intents.guild_reactions:10 of
msgid ":func:`on_raw_reaction_add` (only for guilds)"
msgstr ""

#: ../../docstring disnake.Intents.guild_reactions:11 of
msgid ":func:`on_raw_reaction_remove` (only for guilds)"
msgstr ""

#: ../../docstring disnake.Intents.guild_reactions:12 of
msgid ":func:`on_raw_reaction_clear` (only for guilds)"
msgstr ""

#: ../../docstring disnake.Intents.guild_reactions:16 of
msgid ":attr:`Message.reactions` (only for guild messages)"
msgstr ""

#: ../../docstring disnake.Intents.dm_reactions:1 of
msgid "Whether direct message reaction related events are enabled."
msgstr ""

#: ../../docstring disnake.Intents.dm_reactions:3 of
msgid "See also :attr:`guild_reactions` for guilds or :attr:`reactions` for both."
msgstr ""

#: ../../docstring disnake.Intents.dm_reactions:10 of
msgid ":func:`on_raw_reaction_add` (only for DMs)"
msgstr ""

#: ../../docstring disnake.Intents.dm_reactions:11 of
msgid ":func:`on_raw_reaction_remove` (only for DMs)"
msgstr ""

#: ../../docstring disnake.Intents.dm_reactions:12 of
msgid ":func:`on_raw_reaction_clear` (only for DMs)"
msgstr ""

#: ../../docstring disnake.Intents.dm_reactions:16 of
msgid ":attr:`Message.reactions` (only for DM messages)"
msgstr ""

#: ../../docstring disnake.Intents.dm_typing:1 disnake.Intents.guild_typing:1
#: disnake.Intents.typing:1 of
msgid "Whether guild and direct message typing related events are enabled."
msgstr ""

#: ../../docstring disnake.Intents.typing:3 of
msgid ""
"This is a shortcut to set or get both :attr:`guild_typing` and "
":attr:`dm_typing`."
msgstr ""

#: ../../docstring disnake.Intents.typing:7 of
msgid ":func:`on_typing` (both guilds and DMs)"
msgstr ""

#: ../../docstring disnake.Intents.guild_typing:3 of
msgid "See also :attr:`dm_typing` for DMs or :attr:`typing` for both."
msgstr ""

#: ../../docstring disnake.Intents.guild_typing:7 of
msgid ":func:`on_typing` (only for guilds)"
msgstr ""

#: ../../docstring disnake.Intents.dm_typing:3 of
msgid "See also :attr:`guild_typing` for guilds or :attr:`typing` for both."
msgstr ""

#: ../../docstring disnake.Intents.dm_typing:7 of
msgid ":func:`on_typing` (only for DMs)"
msgstr ""

#: ../../api.rst:4261
msgid "MemberCacheFlags"
msgstr ""

#: disnake.flags.MemberCacheFlags:1 of
msgid "Controls the library's cache policy when it comes to members."
msgstr ""

#: disnake.flags.MemberCacheFlags:3 of
msgid ""
"This allows for finer grained control over what members are cached. Note "
"that the bot's own member is always cached. This class is passed to the "
"``member_cache_flags`` parameter in :class:`Client`."
msgstr ""

#: disnake.flags.MemberCacheFlags:7 of
msgid ""
"Due to a quirk in how Discord works, in order to ensure proper cleanup of"
" cache resources it is recommended to have :attr:`Intents.members` "
"enabled. Otherwise the library cannot know when a member leaves a guild "
"and is thus unable to cleanup after itself."
msgstr ""

#: disnake.flags.MemberCacheFlags:15 of
msgid "The default value is all flags enabled."
msgstr ""

#: disnake.flags.MemberCacheFlags.all:1 of
msgid ""
"A factory method that creates a :class:`MemberCacheFlags` with everything"
" enabled."
msgstr ""

#: disnake.flags.MemberCacheFlags.none:1 of
msgid ""
"A factory method that creates a :class:`MemberCacheFlags` with everything"
" disabled."
msgstr ""

#: ../../docstring disnake.MemberCacheFlags.voice:1 of
msgid "Whether to cache members that are in voice."
msgstr ""

#: ../../docstring disnake.MemberCacheFlags.voice:5 of
msgid "Members that leave voice are no longer cached."
msgstr ""

#: ../../docstring disnake.MemberCacheFlags.joined:1 of
msgid ""
"Whether to cache members that joined the guild or are chunked as part of "
"the initial log in flow."
msgstr ""

#: ../../docstring disnake.MemberCacheFlags.joined:4 of
msgid "This requires :attr:`Intents.members`."
msgstr ""

#: ../../docstring disnake.MemberCacheFlags.joined:6 of
msgid "Members that leave the guild are no longer cached."
msgstr ""

#: disnake.flags.MemberCacheFlags.from_intents:1 of
msgid ""
"A factory method that creates a :class:`MemberCacheFlags` based on the "
"currently selected :class:`Intents`."
msgstr ""

#: disnake.flags.MemberCacheFlags.from_intents:4 of
msgid "The intents to select from."
msgstr ""

#: disnake.flags.MemberCacheFlags.from_intents:7 of
msgid "The resulting member cache flags."
msgstr ""

#: disnake.flags.MemberCacheFlags.from_intents:8 of
msgid ":class:`MemberCacheFlags`"
msgstr ""

#: ../../api.rst:4269
msgid "ApplicationFlags"
msgstr ""

#: disnake.flags.ApplicationFlags:1 of
msgid "Wraps up the Discord Application flags."
msgstr ""

#: disnake.flags.ApplicationFlags:7 of
msgid "Checks if two ApplicationFlags are equal."
msgstr ""

#: disnake.flags.ApplicationFlags:10 of
msgid "Checks if two ApplicationFlags are not equal."
msgstr ""

#: disnake.flags.ApplicationFlags:16 disnake.flags.PublicUserFlags:16 of
msgid ""
"Returns an iterator of ``(name, value)`` pairs. This allows it to be, for"
" example, constructed as a dict or a list of pairs. Note that aliases are"
" not shown."
msgstr ""

#: ../../docstring disnake.ApplicationFlags.gateway_presence:1 of
msgid ""
"Returns ``True`` if the application is verified and is allowed to receive"
" presence information over the gateway."
msgstr ""

#: ../../docstring disnake.ApplicationFlags.gateway_presence_limited:1 of
msgid ""
"Returns ``True`` if the application is allowed to receive limited "
"presence information over the gateway."
msgstr ""

#: ../../docstring disnake.ApplicationFlags.gateway_guild_members:1 of
msgid ""
"Returns ``True`` if the application is verified and is allowed to receive"
" guild members information over the gateway."
msgstr ""

#: ../../docstring disnake.ApplicationFlags.gateway_guild_members_limited:1 of
msgid ""
"Returns ``True`` if the application is allowed to receive limited guild "
"members information over the gateway."
msgstr ""

#: ../../docstring disnake.ApplicationFlags.verification_pending_guild_limit:1
#: of
msgid ""
"Returns ``True`` if the application is currently pending verification and"
" has hit the guild limit."
msgstr ""

#: ../../docstring disnake.ApplicationFlags.embedded:1 of
msgid "Returns ``True`` if the application is embedded within the Discord client."
msgstr ""

#: ../../docstring disnake.ApplicationFlags.gateway_message_content:1 of
msgid ""
"Returns ``True`` if the application is verified and is allowed to receive"
" message content over the gateway."
msgstr ""

#: ../../docstring disnake.ApplicationFlags.gateway_message_content_limited:1
#: of
msgid ""
"Returns ``True`` if the application is verified and is allowed to receive"
" limited message content over the gateway."
msgstr ""

#: ../../api.rst:4277
msgid "File"
msgstr ""

#: disnake.file.File:1 of
msgid ""
"A parameter object used for :meth:`abc.Messageable.send` for sending file"
" objects."
msgstr ""

#: disnake.file.File:6 of
msgid ""
"File objects are single use and are not meant to be reused in multiple "
":meth:`abc.Messageable.send`\\s."
msgstr ""

#: disnake.file.File:11 of
msgid ""
"A file-like object opened in binary mode and read mode or a filename "
"representing a file in the hard drive to open."
msgstr ""

#: disnake.file.File:17 of
msgid ""
"If the file-like object passed is opened via ``open`` then the modes 'rb'"
" should be used."
msgstr ""

#: disnake.file.File:20 of
msgid "To pass binary data, consider usage of ``io.BytesIO``."
msgstr ""

#: disnake.file.File:22 of
msgid "Union[:class:`os.PathLike`, :class:`io.BufferedIOBase`]"
msgstr ""

#: disnake.file.File:26 of
msgid ""
"The filename to display when uploading to Discord. If this is not given "
"then it defaults to ``fp.name`` or if ``fp`` is a string then the "
"``filename`` will default to the string given."
msgstr ""

#: disnake.file.File:34 of
msgid "Whether the attachment is a spoiler."
msgstr ""

#: ../../api.rst:4285
msgid "Colour"
msgstr ""

#: disnake.colour.Colour:1 of
msgid ""
"Represents a Discord role colour. This class is similar to a (red, green,"
" blue) :class:`tuple`."
msgstr ""

#: disnake.colour.Colour:4 of
msgid "There is an alias for this called Color."
msgstr ""

#: disnake.colour.Colour:10 of
msgid "Checks if two colours are equal."
msgstr ""

#: disnake.colour.Colour:14 of
msgid "Checks if two colours are not equal."
msgstr ""

#: disnake.colour.Colour:18 of
msgid "Return the colour's hash."
msgstr ""

#: disnake.colour.Colour:22 of
msgid "Returns the hex format for the colour."
msgstr ""

#: disnake.colour.Colour:26 of
msgid "Returns the raw colour value."
msgstr ""

#: disnake.colour.Colour:30 of
msgid "The raw integer colour value."
msgstr ""

#: disnake.Colour.r:1 of
msgid "Returns the red component of the colour."
msgstr ""

#: disnake.Colour.g:1 of
msgid "Returns the green component of the colour."
msgstr ""

#: disnake.Colour.b:1 of
msgid "Returns the blue component of the colour."
msgstr ""

#: disnake.colour.Colour.to_rgb:1 of
msgid ""
"Tuple[:class:`int`, :class:`int`, :class:`int`]: Returns an (r, g, b) "
"tuple representing the colour."
msgstr ""

#: disnake.colour.Colour.from_rgb:1 of
msgid "Constructs a :class:`Colour` from an RGB tuple."
msgstr ""

#: disnake.colour.Colour.from_hsv:1 of
msgid "Constructs a :class:`Colour` from an HSV tuple."
msgstr ""

#: disnake.colour.Colour.default:1 of
msgid "A factory method that returns a :class:`Colour` with a value of ``0``."
msgstr ""

#: disnake.colour.Colour.random:1 of
msgid "A factory method that returns a :class:`Colour` with a random hue."
msgstr ""

#: disnake.colour.Colour.random:5 of
msgid ""
"The random algorithm works by choosing a colour with a random hue but "
"with maxed out saturation and value."
msgstr ""

#: disnake.colour.Colour.random:10 of
msgid ""
"The seed to initialize the RNG with. If ``None`` is passed the default "
"RNG is used.  .. versionadded:: 1.7"
msgstr ""

#: disnake.colour.Colour.random:10 of
msgid ""
"The seed to initialize the RNG with. If ``None`` is passed the default "
"RNG is used."
msgstr ""

#: disnake.colour.Colour.teal:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x1abc9c``."
msgstr ""

#: disnake.colour.Colour.dark_teal:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x11806a``."
msgstr ""

#: disnake.colour.Colour.brand_green:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x57F287``."
msgstr ""

#: disnake.colour.Colour.green:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x2ecc71``."
msgstr ""

#: disnake.colour.Colour.dark_green:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x1f8b4c``."
msgstr ""

#: disnake.colour.Colour.blue:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x3498db``."
msgstr ""

#: disnake.colour.Colour.dark_blue:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x206694``."
msgstr ""

#: disnake.colour.Colour.purple:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x9b59b6``."
msgstr ""

#: disnake.colour.Colour.dark_purple:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x71368a``."
msgstr ""

#: disnake.colour.Colour.magenta:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xe91e63``."
msgstr ""

#: disnake.colour.Colour.dark_magenta:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xad1457``."
msgstr ""

#: disnake.colour.Colour.gold:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xf1c40f``."
msgstr ""

#: disnake.colour.Colour.dark_gold:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xc27c0e``."
msgstr ""

#: disnake.colour.Colour.orange:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xe67e22``."
msgstr ""

#: disnake.colour.Colour.dark_orange:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xa84300``."
msgstr ""

#: disnake.colour.Colour.brand_red:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xED4245``."
msgstr ""

#: disnake.colour.Colour.red:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xe74c3c``."
msgstr ""

#: disnake.colour.Colour.dark_red:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x992d22``."
msgstr ""

#: disnake.colour.Colour.lighter_grey:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x95a5a6``."
msgstr ""

#: disnake.colour.Colour.dark_grey:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x607d8b``."
msgstr ""

#: disnake.colour.Colour.light_grey:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x979c9f``."
msgstr ""

#: disnake.colour.Colour.darker_grey:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x546e7a``."
msgstr ""

#: disnake.colour.Colour.og_blurple:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x7289da``."
msgstr ""

#: disnake.colour.Colour.blurple:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x5865F2``."
msgstr ""

#: disnake.colour.Colour.greyple:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x99aab5``."
msgstr ""

#: disnake.colour.Colour.dark_theme:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x36393F``. This will appear transparent on Discord's dark theme."
msgstr ""

#: disnake.colour.Colour.fuchsia:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xEB459E``."
msgstr ""

#: disnake.colour.Colour.yellow:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xFEE75C``."
msgstr ""

#: ../../api.rst:4293
msgid "BaseActivity"
msgstr ""

#: disnake.activity.BaseActivity:1 of
msgid ""
"The base activity that all user-settable activities inherit from. A user-"
"settable activity is one that can be used in "
":meth:`Client.change_presence`."
msgstr ""

#: disnake.activity.BaseActivity:4 of
msgid "The following types currently count as user-settable:"
msgstr ""

#: disnake.activity.BaseActivity:6 of
msgid ":class:`Activity`"
msgstr ""

#: disnake.activity.Activity:9 disnake.activity.BaseActivity:7 of
msgid ":class:`Game`"
msgstr ""

#: disnake.activity.Activity:10 disnake.activity.BaseActivity:8 of
msgid ":class:`Streaming`"
msgstr ""

#: disnake.activity.BaseActivity:9 of
msgid ":class:`CustomActivity`"
msgstr ""

#: disnake.activity.BaseActivity:11 of
msgid ""
"Note that although these types are considered user-settable by the "
"library, Discord typically ignores certain combinations of activity "
"depending on what is currently set. This behaviour may change in the "
"future so there are no guarantees on whether Discord will actually let "
"you set these types."
msgstr ""

#: disnake.BaseActivity.created_at:1 of
msgid "When the user started doing this activity in UTC."
msgstr ""

#: ../../api.rst:4301
msgid "Activity"
msgstr ""

#: disnake.activity.Activity:1 of
msgid "Represents an activity in Discord."
msgstr ""

#: disnake.activity.Activity:3 of
msgid ""
"This could be an activity such as streaming, playing, listening or "
"watching."
msgstr ""

#: disnake.activity.Activity:6 of
msgid ""
"For memory optimisation purposes, some activities are offered in slimmed "
"down versions:"
msgstr ""

#: disnake.activity.Activity:14 of
msgid "The application ID of the game."
msgstr ""

#: disnake.activity.Activity:20 of
msgid "The name of the activity."
msgstr ""

#: disnake.activity.Activity:26 of
msgid "A stream URL that the activity could be doing."
msgstr ""

#: disnake.activity.Activity:32 of
msgid "The type of activity currently being done."
msgstr ""

#: disnake.activity.Activity:38 of
msgid "The user's current state. For example, \"In Game\"."
msgstr ""

#: disnake.activity.Activity:44 of
msgid "The detail of the user's current activity."
msgstr ""

#: disnake.activity.Activity:50 of
msgid "A dictionary of timestamps. It contains the following optional keys:"
msgstr ""

#: disnake.activity.Activity:52 of
msgid ""
"``start``: Corresponds to when the user started doing the activity in "
"milliseconds since Unix epoch."
msgstr ""

#: disnake.activity.Activity:54 of
msgid ""
"``end``: Corresponds to when the user will finish doing the activity in "
"milliseconds since Unix epoch."
msgstr ""

#: disnake.activity.Activity:61 of
msgid ""
"A dictionary representing the images and their hover text of an activity."
" It contains the following optional keys:"
msgstr ""

#: disnake.activity.Activity:64 of
msgid "``large_image``: A string representing the ID for the large image asset."
msgstr ""

#: disnake.activity.Activity:65 of
msgid ""
"``large_text``: A string representing the text when hovering over the "
"large image asset."
msgstr ""

#: disnake.activity.Activity:66 of
msgid "``small_image``: A string representing the ID for the small image asset."
msgstr ""

#: disnake.activity.Activity:67 of
msgid ""
"``small_text``: A string representing the text when hovering over the "
"small image asset."
msgstr ""

#: disnake.activity.Activity:73 of
msgid ""
"A dictionary representing the activity party. It contains the following "
"optional keys:"
msgstr ""

#: disnake.activity.Activity:75 of
msgid "``id``: A string representing the party ID."
msgstr ""

#: disnake.activity.Activity:76 of
msgid ""
"``size``: A list of up to two integer elements denoting (current_size, "
"maximum_size)."
msgstr ""

#: disnake.activity.Activity:82 of
msgid ""
"An list of dictionaries representing custom buttons shown in a rich "
"presence. Each dictionary contains the following keys:"
msgstr ""

#: disnake.activity.Activity:85 of
msgid "``label``: A string representing the text shown on the button."
msgstr ""

#: disnake.activity.Activity:86 of
msgid "``url``: A string representing the URL opened upon clicking the button."
msgstr ""

#: disnake.activity.Activity:90 of
msgid "List[:class:`dict`]"
msgstr ""

#: disnake.activity.Activity:94 of
msgid "The emoji that belongs to this activity."
msgstr ""

#: disnake.Activity.start:1 of
msgid "When the user started doing this activity in UTC, if applicable."
msgstr ""

#: disnake.Activity.end:1 of
msgid "When the user will stop doing this activity in UTC, if applicable."
msgstr ""

#: disnake.Activity.large_image_url:1 of
msgid ""
"Returns a URL pointing to the large image asset of this activity if "
"applicable."
msgstr ""

#: disnake.Activity.small_image_url:1 of
msgid ""
"Returns a URL pointing to the small image asset of this activity if "
"applicable."
msgstr ""

#: disnake.Activity.large_image_text:1 of
msgid "Returns the large image asset hover text of this activity if applicable."
msgstr ""

#: disnake.Activity.small_image_text:1 of
msgid "Returns the small image asset hover text of this activity if applicable."
msgstr ""

#: ../../api.rst:4309
msgid "Game"
msgstr ""

#: disnake.activity.Game:1 of
msgid ""
"A slimmed down version of :class:`Activity` that represents a Discord "
"game."
msgstr ""

#: disnake.activity.Game:3 of
msgid ""
"This is typically displayed via **Playing** on the official Discord "
"client."
msgstr ""

#: disnake.activity.Game:9 of
msgid "Checks if two games are equal."
msgstr ""

#: disnake.activity.Game:13 of
msgid "Checks if two games are not equal."
msgstr ""

#: disnake.activity.Game:17 of
msgid "Returns the game's hash."
msgstr ""

#: disnake.activity.Game:21 of
msgid "Returns the game's name."
msgstr ""

#: disnake.activity.Game:23 disnake.activity.Game:28 of
msgid "The game's name."
msgstr ""

#: disnake.Game.type:1 disnake.Streaming.type:1 of
msgid "Returns the game's type. This is for compatibility with :class:`Activity`."
msgstr ""

#: disnake.Game.type:3 of
msgid "It always returns :attr:`ActivityType.playing`."
msgstr ""

#: disnake.Game.start:1 of
msgid "When the user started playing this game in UTC, if applicable."
msgstr ""

#: disnake.Game.end:1 of
msgid "When the user will stop playing this game in UTC, if applicable."
msgstr ""

#: ../../api.rst:4317
msgid "Streaming"
msgstr ""

#: disnake.activity.Streaming:1 of
msgid ""
"A slimmed down version of :class:`Activity` that represents a Discord "
"streaming status."
msgstr ""

#: disnake.activity.Streaming:3 of
msgid ""
"This is typically displayed via **Streaming** on the official Discord "
"client."
msgstr ""

#: disnake.activity.Streaming:9 of
msgid "Checks if two streams are equal."
msgstr ""

#: disnake.activity.Streaming:13 of
msgid "Checks if two streams are not equal."
msgstr ""

#: disnake.activity.Streaming:17 of
msgid "Returns the stream's hash."
msgstr ""

#: disnake.activity.Streaming:21 of
msgid "Returns the stream's name."
msgstr ""

#: disnake.activity.Streaming:25 of
msgid "Where the user is streaming from (ie. YouTube, Twitch)."
msgstr ""

#: disnake.activity.Streaming:33 of
msgid "The stream's name."
msgstr ""

#: disnake.activity.Streaming:39 of
msgid "An alias for :attr:`name`"
msgstr ""

#: disnake.activity.Streaming:45 of
msgid "The game being streamed."
msgstr ""

#: disnake.activity.Streaming:53 of
msgid "The stream's URL."
msgstr ""

#: disnake.activity.Streaming:59 of
msgid ""
"A dictionary comprising of similar keys than those in "
":attr:`Activity.assets`."
msgstr ""

#: disnake.Streaming.type:3 of
msgid "It always returns :attr:`ActivityType.streaming`."
msgstr ""

#: disnake.Streaming.twitch_name:1 of
msgid "If provided, the twitch name of the user streaming."
msgstr ""

#: disnake.Streaming.twitch_name:3 of
msgid ""
"This corresponds to the ``large_image`` key of the "
":attr:`Streaming.assets` dictionary if it starts with ``twitch:``. "
"Typically set by the Discord client."
msgstr ""

#: ../../api.rst:4325
msgid "CustomActivity"
msgstr ""

#: disnake.activity.CustomActivity:1 of
msgid "Represents a Custom activity from Discord."
msgstr ""

#: disnake.activity.CustomActivity:19 of
msgid "Returns the custom status text."
msgstr ""

#: disnake.activity.CustomActivity:25 of
msgid "The custom activity's name."
msgstr ""

#: disnake.activity.CustomActivity:31 of
msgid "The emoji to pass to the activity, if any."
msgstr ""

#: disnake.CustomActivity.type:3 of
msgid "It always returns :attr:`ActivityType.custom`."
msgstr ""

#: ../../api.rst:4333
msgid "Permissions"
msgstr ""

#: disnake.permissions.Permissions:1 of
msgid "Wraps up the Discord permission value."
msgstr ""

#: disnake.permissions.Permissions:3 of
msgid ""
"The properties provided are two way. You can set and retrieve individual "
"bits using the properties as if they were regular bools. This allows you "
"to edit permissions."
msgstr ""

#: disnake.permissions.Permissions:7 of
msgid ""
"You can now use keyword arguments to initialize :class:`Permissions` "
"similar to :meth:`update`."
msgstr ""

#: disnake.permissions.Permissions:15 of
msgid "Checks if two permissions are equal."
msgstr ""

#: disnake.permissions.Permissions:18 of
msgid "Checks if two permissions are not equal."
msgstr ""

#: disnake.permissions.Permissions:21 of
msgid "Checks if a permission is a subset of another permission."
msgstr ""

#: disnake.permissions.Permissions:24 of
msgid "Checks if a permission is a superset of another permission."
msgstr ""

#: disnake.permissions.Permissions:27 of
msgid "Checks if a permission is a strict subset of another permission."
msgstr ""

#: disnake.permissions.Permissions:30 of
msgid "Checks if a permission is a strict superset of another permission."
msgstr ""

#: disnake.permissions.Permissions:33 of
msgid "Return the permission's hash."
msgstr ""

#: disnake.permissions.PermissionOverwrite:22
#: disnake.permissions.Permissions:36 of
msgid ""
"Returns an iterator of ``(perm, value)`` pairs. This allows it to be, for"
" example, constructed as a dict or a list of pairs. Note that aliases are"
" not shown."
msgstr ""

#: disnake.permissions.Permissions:42 of
msgid ""
"The raw value. This value is a bit array field of a 53-bit integer "
"representing the currently available permissions. You should query "
"permissions via the properties rather than using this raw value."
msgstr ""

#: disnake.permissions.Permissions.is_subset:1 of
msgid "Returns ``True`` if self has the same or fewer permissions as other."
msgstr ""

#: disnake.permissions.Permissions.is_superset:1 of
msgid "Returns ``True`` if self has the same or more permissions as other."
msgstr ""

#: disnake.permissions.Permissions.is_strict_subset:1 of
msgid ""
"Returns ``True`` if the permissions on other are a strict subset of those"
" on self."
msgstr ""

#: disnake.permissions.Permissions.is_strict_superset:1 of
msgid ""
"Returns ``True`` if the permissions on other are a strict superset of "
"those on self."
msgstr ""

#: disnake.permissions.Permissions.none:1 of
msgid ""
"A factory method that creates a :class:`Permissions` with all permissions"
" set to ``False``."
msgstr ""

#: disnake.permissions.Permissions.all:1 of
msgid ""
"A factory method that creates a :class:`Permissions` with all permissions"
" set to ``True``."
msgstr ""

#: disnake.permissions.Permissions.all_channel:1 of
msgid ""
"A :class:`Permissions` with all channel-specific permissions set to "
"``True`` and the guild-specific ones set to ``False``. The guild-specific"
" permissions are currently:"
msgstr ""

#: disnake.permissions.Permissions.all_channel:5 of
msgid ":attr:`manage_emojis`"
msgstr ""

#: disnake.permissions.Permissions.all_channel:6 of
msgid ":attr:`view_audit_log`"
msgstr ""

#: disnake.permissions.Permissions.all_channel:7 of
msgid ":attr:`view_guild_insights`"
msgstr ""

#: disnake.permissions.Permissions.all_channel:8 of
msgid ":attr:`manage_guild`"
msgstr ""

#: disnake.permissions.Permissions.all_channel:9 of
msgid ":attr:`change_nickname`"
msgstr ""

#: disnake.permissions.Permissions.all_channel:10 of
msgid ":attr:`manage_nicknames`"
msgstr ""

#: disnake.permissions.Permissions.all_channel:11 of
msgid ":attr:`kick_members`"
msgstr ""

#: disnake.permissions.Permissions.all_channel:12 of
msgid ":attr:`ban_members`"
msgstr ""

#: disnake.permissions.Permissions.all_channel:13 of
msgid ":attr:`administrator`"
msgstr ""

#: disnake.permissions.Permissions.all_channel:15 of
msgid ""
"Added :attr:`stream`, :attr:`priority_speaker` and "
":attr:`use_slash_commands` permissions."
msgstr ""

#: disnake.permissions.Permissions.all_channel:18 of
msgid ""
"Added :attr:`create_public_threads`, :attr:`create_private_threads`, "
":attr:`manage_threads`, :attr:`use_external_stickers`, "
":attr:`send_messages_in_threads` and :attr:`request_to_speak` "
"permissions."
msgstr ""

#: disnake.permissions.Permissions.general:1 of
msgid ""
"A factory method that creates a :class:`Permissions` with all \"General\""
" permissions from the official Discord UI set to ``True``."
msgstr ""

#: disnake.permissions.Permissions.general:4 of
msgid ""
"Permission :attr:`read_messages` is now included in the general "
"permissions, but permissions :attr:`administrator`, "
":attr:`create_instant_invite`, :attr:`kick_members`, :attr:`ban_members`,"
" :attr:`change_nickname` and :attr:`manage_nicknames` are no longer part "
"of the general permissions."
msgstr ""

#: disnake.permissions.Permissions.membership:1 of
msgid ""
"A factory method that creates a :class:`Permissions` with all "
"\"Membership\" permissions from the official Discord UI set to ``True``."
msgstr ""

#: disnake.permissions.Permissions.text:1 of
msgid ""
"A factory method that creates a :class:`Permissions` with all \"Text\" "
"permissions from the official Discord UI set to ``True``."
msgstr ""

#: disnake.permissions.Permissions.text:4 of
msgid ""
"Permission :attr:`read_messages` is no longer part of the text "
"permissions. Added :attr:`use_slash_commands` permission."
msgstr ""

#: disnake.permissions.Permissions.text:8 of
msgid ""
"Added :attr:`create_public_threads`, :attr:`create_private_threads`, "
":attr:`manage_threads`, :attr:`send_messages_in_threads` and "
":attr:`use_external_stickers` permissions."
msgstr ""

#: disnake.permissions.Permissions.voice:1 of
msgid ""
"A factory method that creates a :class:`Permissions` with all \"Voice\" "
"permissions from the official Discord UI set to ``True``."
msgstr ""

#: disnake.permissions.Permissions.stage:1 of
msgid ""
"A factory method that creates a :class:`Permissions` with all \"Stage "
"Channel\" permissions from the official Discord UI set to ``True``."
msgstr ""

#: disnake.permissions.Permissions.stage_moderator:1 of
msgid ""
"A factory method that creates a :class:`Permissions` with all \"Stage "
"Moderator\" permissions from the official Discord UI set to ``True``."
msgstr ""

#: disnake.permissions.Permissions.advanced:1 of
msgid ""
"A factory method that creates a :class:`Permissions` with all "
"\"Advanced\" permissions from the official Discord UI set to ``True``."
msgstr ""

#: disnake.permissions.Permissions.update:1 of
msgid "Bulk updates this permission object."
msgstr ""

#: disnake.permissions.PermissionOverwrite.update:3
#: disnake.permissions.Permissions.update:3 of
msgid ""
"Allows you to set multiple attributes by using keyword arguments. The "
"names must be equivalent to the properties listed. Extraneous key/value "
"pairs will be silently ignored."
msgstr ""

#: disnake.permissions.Permissions.update:7 of
msgid "A list of key/value pairs to bulk update permissions with."
msgstr ""

#: ../../docstring disnake.Permissions.create_instant_invite:1 of
msgid "Returns ``True`` if the user can create instant invites."
msgstr ""

#: ../../docstring disnake.Permissions.kick_members:1 of
msgid "Returns ``True`` if the user can kick users from the guild."
msgstr ""

#: ../../docstring disnake.Permissions.ban_members:1 of
msgid "Returns ``True`` if a user can ban users from the guild."
msgstr ""

#: ../../docstring disnake.Permissions.administrator:1 of
msgid ""
"Returns ``True`` if a user is an administrator. This role overrides all "
"other permissions."
msgstr ""

#: ../../docstring disnake.Permissions.administrator:3 of
msgid "This also bypasses all channel-specific overrides."
msgstr ""

#: ../../docstring disnake.Permissions.manage_channels:1 of
msgid ""
"Returns ``True`` if a user can edit, delete, or create channels in the "
"guild."
msgstr ""

#: ../../docstring disnake.Permissions.manage_channels:3 of
msgid "This also corresponds to the \"Manage Channel\" channel-specific override."
msgstr ""

#: ../../docstring disnake.Permissions.manage_guild:1 of
msgid "Returns ``True`` if a user can edit guild properties."
msgstr ""

#: ../../docstring disnake.Permissions.add_reactions:1 of
msgid "Returns ``True`` if a user can add reactions to messages."
msgstr ""

#: ../../docstring disnake.Permissions.view_audit_log:1 of
msgid "Returns ``True`` if a user can view the guild's audit log."
msgstr ""

#: ../../docstring disnake.Permissions.priority_speaker:1 of
msgid "Returns ``True`` if a user can be more easily heard while talking."
msgstr ""

#: ../../docstring disnake.Permissions.stream:1 of
msgid "Returns ``True`` if a user can stream in a voice channel."
msgstr ""

#: ../../docstring disnake.Permissions.read_messages:1 of
msgid ""
"Returns ``True`` if a user can read messages from all or specific text "
"channels."
msgstr ""

#: ../../docstring disnake.Permissions.view_channel:1 of
msgid "An alias for :attr:`read_messages`."
msgstr ""

#: ../../docstring disnake.Permissions.send_messages:1 of
msgid ""
"Returns ``True`` if a user can send messages from all or specific text "
"channels."
msgstr ""

#: ../../docstring disnake.Permissions.send_tts_messages:1 of
msgid ""
"Returns ``True`` if a user can send TTS messages from all or specific "
"text channels."
msgstr ""

#: ../../docstring disnake.Permissions.manage_messages:1 of
msgid "Returns ``True`` if a user can delete or pin messages in a text channel."
msgstr ""

#: ../../docstring disnake.Permissions.manage_messages:5 of
msgid "Note that there are currently no ways to edit other people's messages."
msgstr ""

#: ../../docstring disnake.Permissions.embed_links:1 of
msgid ""
"Returns ``True`` if a user's messages will automatically be embedded by "
"Discord."
msgstr ""

#: ../../docstring disnake.Permissions.attach_files:1 of
msgid "Returns ``True`` if a user can send files in their messages."
msgstr ""

#: ../../docstring disnake.Permissions.read_message_history:1 of
msgid "Returns ``True`` if a user can read a text channel's previous messages."
msgstr ""

#: ../../docstring disnake.Permissions.mention_everyone:1 of
msgid ""
"Returns ``True`` if a user's @everyone or @here will mention everyone in "
"the text channel."
msgstr ""

#: ../../docstring disnake.Permissions.external_emojis:1 of
msgid "Returns ``True`` if a user can use emojis from other guilds."
msgstr ""

#: ../../docstring disnake.Permissions.use_external_emojis:1 of
msgid "An alias for :attr:`external_emojis`."
msgstr ""

#: ../../docstring disnake.Permissions.view_guild_insights:1 of
msgid "Returns ``True`` if a user can view the guild's insights."
msgstr ""

#: ../../docstring disnake.Permissions.connect:1 of
msgid "Returns ``True`` if a user can connect to a voice channel."
msgstr ""

#: ../../docstring disnake.Permissions.speak:1 of
msgid "Returns ``True`` if a user can speak in a voice channel."
msgstr ""

#: ../../docstring disnake.Permissions.mute_members:1 of
msgid "Returns ``True`` if a user can mute other users."
msgstr ""

#: ../../docstring disnake.Permissions.deafen_members:1 of
msgid "Returns ``True`` if a user can deafen other users."
msgstr ""

#: ../../docstring disnake.Permissions.move_members:1 of
msgid "Returns ``True`` if a user can move users between other voice channels."
msgstr ""

#: ../../docstring disnake.Permissions.use_voice_activation:1 of
msgid "Returns ``True`` if a user can use voice activation in voice channels."
msgstr ""

#: ../../docstring disnake.Permissions.change_nickname:1 of
msgid "Returns ``True`` if a user can change their nickname in the guild."
msgstr ""

#: ../../docstring disnake.Permissions.manage_nicknames:1 of
msgid "Returns ``True`` if a user can change other user's nickname in the guild."
msgstr ""

#: ../../docstring disnake.Permissions.manage_roles:1 of
msgid ""
"Returns ``True`` if a user can create or edit roles less than their "
"role's position."
msgstr ""

#: ../../docstring disnake.Permissions.manage_roles:3 of
msgid ""
"This also corresponds to the \"Manage Permissions\" channel-specific "
"override."
msgstr ""

#: ../../docstring disnake.Permissions.manage_permissions:1 of
msgid "An alias for :attr:`manage_roles`."
msgstr ""

#: ../../docstring disnake.Permissions.manage_webhooks:1 of
msgid "Returns ``True`` if a user can create, edit, or delete webhooks."
msgstr ""

#: ../../docstring disnake.Permissions.manage_emojis:1 of
msgid "Returns ``True`` if a user can create, edit, or delete emojis."
msgstr ""

#: ../../docstring disnake.Permissions.manage_emojis_and_stickers:1 of
msgid "An alias for :attr:`manage_emojis`."
msgstr ""

#: ../../docstring disnake.Permissions.use_slash_commands:1 of
msgid "Returns ``True`` if a user can use slash commands."
msgstr ""

#: ../../docstring disnake.Permissions.request_to_speak:1 of
msgid "Returns ``True`` if a user can request to speak in a stage channel."
msgstr ""

#: ../../docstring disnake.Permissions.manage_events:1 of
msgid "Returns ``True`` if a user can manage guild events."
msgstr ""

#: ../../docstring disnake.Permissions.manage_threads:1 of
msgid "Returns ``True`` if a user can manage threads."
msgstr ""

#: ../../docstring disnake.Permissions.create_public_threads:1 of
msgid "Returns ``True`` if a user can create public threads."
msgstr ""

#: ../../docstring disnake.Permissions.create_private_threads:1 of
msgid "Returns ``True`` if a user can create private threads."
msgstr ""

#: ../../docstring disnake.Permissions.external_stickers:1 of
msgid "Returns ``True`` if a user can use stickers from other guilds."
msgstr ""

#: ../../docstring disnake.Permissions.use_external_stickers:1 of
msgid "An alias for :attr:`external_stickers`."
msgstr ""

#: ../../docstring disnake.Permissions.send_messages_in_threads:1 of
msgid "Returns ``True`` if a user can send messages in threads."
msgstr ""

#: ../../api.rst:4341
msgid "PermissionOverwrite"
msgstr ""

#: disnake.permissions.PermissionOverwrite:1 of
msgid "A type that is used to represent a channel specific permission."
msgstr ""

#: disnake.permissions.PermissionOverwrite:3 of
msgid ""
"Unlike a regular :class:`Permissions`\\, the default value of a "
"permission is equivalent to ``None`` and not ``False``. Setting a value "
"to ``False`` is **explicitly** denying that permission, while setting a "
"value to ``True`` is **explicitly** allowing that permission."
msgstr ""

#: disnake.permissions.PermissionOverwrite:9 of
msgid ""
"The values supported by this are the same as :class:`Permissions` with "
"the added possibility of it being set to ``None``."
msgstr ""

#: disnake.permissions.PermissionOverwrite:16 of
msgid "Checks if two overwrites are equal."
msgstr ""

#: disnake.permissions.PermissionOverwrite:19 of
msgid "Checks if two overwrites are not equal."
msgstr ""

#: disnake.permissions.PermissionOverwrite:26 of
msgid "Set the value of permissions by their name."
msgstr ""

#: disnake.permissions.PermissionOverwrite.pair:1 of
msgid ""
"Tuple[:class:`Permissions`, :class:`Permissions`]: Returns the (allow, "
"deny) pair from this overwrite."
msgstr ""

#: disnake.permissions.PermissionOverwrite.from_pair:1 of
msgid "Creates an overwrite from an allow/deny pair of :class:`Permissions`."
msgstr ""

#: disnake.permissions.PermissionOverwrite.is_empty:1 of
msgid "Checks if the permission overwrite is currently empty."
msgstr ""

#: disnake.permissions.PermissionOverwrite.is_empty:3 of
msgid ""
"An empty permission overwrite is one that has no overwrites set to "
"``True`` or ``False``."
msgstr ""

#: disnake.permissions.PermissionOverwrite.is_empty:6 of
msgid "Indicates if the overwrite is empty."
msgstr ""

#: disnake.permissions.PermissionOverwrite.update:1 of
msgid "Bulk updates this permission overwrite object."
msgstr ""

#: disnake.permissions.PermissionOverwrite.update:7 of
msgid "A list of key/value pairs to bulk update with."
msgstr ""

#: ../../api.rst:4349
msgid "ShardInfo"
msgstr ""

#: disnake.shard.ShardInfo:1 of
msgid "A class that gives information and control over a specific shard."
msgstr ""

#: disnake.shard.ShardInfo:3 of
msgid ""
"You can retrieve this object via :meth:`AutoShardedClient.get_shard` or "
":attr:`AutoShardedClient.shards`."
msgstr ""

#: disnake.shard.ShardInfo:10 of
msgid "The shard ID for this shard."
msgstr ""

#: disnake.shard.ShardInfo:16 of
msgid ""
"The shard count for this cluster. If this is ``None`` then the bot has "
"not started yet."
msgstr ""

#: disnake.shard.ShardInfo.is_closed:1 of
msgid ":class:`bool`: Whether the shard connection is currently closed."
msgstr ""

#: disnake.shard.ShardInfo.disconnect:3 of
msgid ""
"Disconnects a shard. When this is called, the shard connection will no "
"longer be open."
msgstr ""

#: disnake.shard.ShardInfo.disconnect:6 of
msgid "If the shard is already disconnected this does nothing."
msgstr ""

#: disnake.shard.ShardInfo.reconnect:3 of
msgid "Disconnects and then connects the shard again."
msgstr ""

#: disnake.shard.ShardInfo.connect:3 of
msgid "Connects a shard. If the shard is already connected this does nothing."
msgstr ""

#: disnake.ShardInfo.latency:1 of
msgid ""
"Measures latency between a HEARTBEAT and a HEARTBEAT_ACK in seconds for "
"this shard."
msgstr ""

#: ../../api.rst:4357
msgid "SystemChannelFlags"
msgstr ""

#: disnake.flags.SystemChannelFlags:1 of
msgid "Wraps up a Discord system channel flag value."
msgstr ""

#: disnake.flags.SystemChannelFlags:3 of
msgid ""
"Similar to :class:`Permissions`\\, the properties provided are two way. "
"You can set and retrieve individual bits using the properties as if they "
"were regular bools. This allows you to edit the system flags easily."
msgstr ""

#: disnake.flags.MessageFlags:25 disnake.flags.PublicUserFlags:24
#: disnake.flags.SystemChannelFlags:28 of
msgid ""
"The raw value. This value is a bit array field of a 53-bit integer "
"representing the currently available flags. You should query flags via "
"the properties rather than using this raw value."
msgstr ""

#: ../../docstring disnake.SystemChannelFlags.join_notifications:1 of
msgid ""
"Returns ``True`` if the system channel is used for member join "
"notifications."
msgstr ""

#: ../../docstring disnake.SystemChannelFlags.premium_subscriptions:1 of
msgid ""
"Returns ``True`` if the system channel is used for \"Nitro boosting\" "
"notifications."
msgstr ""

#: ../../docstring disnake.SystemChannelFlags.guild_reminder_notifications:1 of
msgid ""
"Returns ``True`` if the system channel is used for server setup helpful "
"tips notifications."
msgstr ""

#: ../../api.rst:4365
msgid "MessageFlags"
msgstr ""

#: disnake.flags.MessageFlags:1 of
msgid "Wraps up a Discord Message flag value."
msgstr ""

#: disnake.flags.MessageFlags:3 of
msgid "See :class:`SystemChannelFlags`."
msgstr ""

#: ../../docstring disnake.MessageFlags.crossposted:1 of
msgid "Returns ``True`` if the message is the original crossposted message."
msgstr ""

#: ../../docstring disnake.MessageFlags.is_crossposted:1 of
msgid "Returns ``True`` if the message was crossposted from another channel."
msgstr ""

#: ../../docstring disnake.MessageFlags.suppress_embeds:1 of
msgid "Returns ``True`` if the message's embeds have been suppressed."
msgstr ""

#: ../../docstring disnake.MessageFlags.source_message_deleted:1 of
msgid ""
"Returns ``True`` if the source message for this crosspost has been "
"deleted."
msgstr ""

#: ../../docstring disnake.MessageFlags.urgent:1 of
msgid "Returns ``True`` if the source message is an urgent message."
msgstr ""

#: ../../docstring disnake.MessageFlags.urgent:3 of
msgid "An urgent message is one sent by Discord Trust and Safety."
msgstr ""

#: ../../docstring disnake.MessageFlags.has_thread:1 of
msgid "Returns ``True`` if the source message is associated with a thread."
msgstr ""

#: ../../docstring disnake.MessageFlags.ephemeral:1 of
msgid "Returns ``True`` if the source message is ephemeral."
msgstr ""

#: ../../api.rst:4373
msgid "PublicUserFlags"
msgstr ""

#: disnake.flags.PublicUserFlags:1 of
msgid "Wraps up the Discord User Public flags."
msgstr ""

#: disnake.flags.PublicUserFlags:7 of
msgid "Checks if two PublicUserFlags are equal."
msgstr ""

#: disnake.flags.PublicUserFlags:10 of
msgid "Checks if two PublicUserFlags are not equal."
msgstr ""

#: ../../docstring disnake.PublicUserFlags.staff:1 of
msgid "Returns ``True`` if the user is a Discord Employee."
msgstr ""

#: ../../docstring disnake.PublicUserFlags.partner:1 of
msgid "Returns ``True`` if the user is a Discord Partner."
msgstr ""

#: ../../docstring disnake.PublicUserFlags.hypesquad:1 of
msgid "Returns ``True`` if the user is a HypeSquad Events member."
msgstr ""

#: ../../docstring disnake.PublicUserFlags.bug_hunter:1 of
msgid "Returns ``True`` if the user is a Bug Hunter"
msgstr ""

#: ../../docstring disnake.PublicUserFlags.hypesquad_bravery:1 of
msgid "Returns ``True`` if the user is a HypeSquad Bravery member."
msgstr ""

#: ../../docstring disnake.PublicUserFlags.hypesquad_brilliance:1 of
msgid "Returns ``True`` if the user is a HypeSquad Brilliance member."
msgstr ""

#: ../../docstring disnake.PublicUserFlags.hypesquad_balance:1 of
msgid "Returns ``True`` if the user is a HypeSquad Balance member."
msgstr ""

#: ../../docstring disnake.PublicUserFlags.early_supporter:1 of
msgid "Returns ``True`` if the user is an Early Supporter."
msgstr ""

#: ../../docstring disnake.PublicUserFlags.team_user:1 of
msgid "Returns ``True`` if the user is a Team User."
msgstr ""

#: ../../docstring disnake.PublicUserFlags.system:1 of
msgid ""
"Returns ``True`` if the user is a system user (i.e. represents Discord "
"officially)."
msgstr ""

#: ../../docstring disnake.PublicUserFlags.bug_hunter_level_2:1 of
msgid "Returns ``True`` if the user is a Bug Hunter Level 2"
msgstr ""

#: ../../docstring disnake.PublicUserFlags.verified_bot:1 of
msgid "Returns ``True`` if the user is a Verified Bot."
msgstr ""

#: ../../docstring disnake.PublicUserFlags.verified_bot_developer:1 of
msgid "Returns ``True`` if the user is an Early Verified Bot Developer."
msgstr ""

#: ../../docstring disnake.PublicUserFlags.early_verified_bot_developer:1 of
msgid "An alias for :attr:`verified_bot_developer`."
msgstr ""

#: ../../docstring disnake.PublicUserFlags.discord_certified_moderator:1 of
msgid "Returns ``True`` if the user is a Discord Certified Moderator."
msgstr ""

#: disnake.flags.PublicUserFlags.all:1 of
msgid "List[:class:`UserFlags`]: Returns all public flags the user has."
msgstr ""

#: ../../api.rst:4383
msgid "Bot UI Kit"
msgstr ""

#: ../../api.rst:4385
msgid "The library has helpers to help create component-based UIs."
msgstr ""

#: ../../api.rst:4388
msgid "View"
msgstr ""

#: disnake.ui.view.View:1 of
msgid "Represents a UI view."
msgstr ""

#: disnake.ui.view.View:3 of
msgid "This object must be inherited to create a UI within Discord."
msgstr ""

#: disnake.ui.view.View:7 of
msgid ""
"Timeout in seconds from last interaction with the UI before no longer "
"accepting input. If ``None`` then there is no timeout."
msgstr ""

#: disnake.ui.view.View:13 of
msgid ""
"Timeout from last interaction with the UI before no longer accepting "
"input. If ``None`` then there is no timeout."
msgstr ""

#: disnake.ui.view.View:16 of
msgid "Optional[:class:`float`]"
msgstr ""

#: disnake.ui.view.View:20 of
msgid "The list of children attached to this view."
msgstr ""

#: disnake.ui.view.View:22 of
msgid "List[:class:`Item`]"
msgstr ""

#: disnake.ui.view.View.from_message:1 of
msgid "Converts a message's components into a :class:`View`."
msgstr ""

#: disnake.ui.view.View.from_message:3 of
msgid ""
"The :attr:`.Message.components` of a message are read-only and separate "
"types from those in the ``disnake.ui`` namespace. In order to modify and "
"edit message components they must be converted into a :class:`View` "
"first."
msgstr ""

#: disnake.ui.view.View.from_message:8 of
msgid "The message with components to convert into a view."
msgstr ""

#: disnake.ui.view.View.from_message:10 of
msgid "The timeout of the converted view."
msgstr ""

#: disnake.ui.view.View.from_message:13 of
msgid ""
"The converted view. This always returns a :class:`View` and not one of "
"its subclasses."
msgstr ""

#: disnake.ui.view.View.from_message:15 of
msgid ":class:`View`"
msgstr ""

#: disnake.ui.view.View.add_item:1 of
msgid "Adds an item to the view."
msgstr ""

#: disnake.ui.view.View.add_item:3 of
msgid "The item to add to the view."
msgstr ""

#: disnake.ui.view.View.add_item:6 of
msgid "An :class:`Item` was not passed."
msgstr ""

#: disnake.ui.view.View.add_item:7 of
msgid ""
"Maximum number of children has been exceeded (25)     or the row the item"
" is trying to be added to is full."
msgstr ""

#: disnake.ui.view.View.remove_item:1 of
msgid "Removes an item from the view."
msgstr ""

#: disnake.ui.view.View.remove_item:3 of
msgid "The item to remove from the view."
msgstr ""

#: disnake.ui.view.View.clear_items:1 of
msgid "Removes all items from the view."
msgstr ""

#: disnake.ui.view.View.interaction_check:3 of
msgid ""
"A callback that is called when an interaction happens within the view "
"that checks whether the view should process item callbacks for the "
"interaction."
msgstr ""

#: disnake.ui.view.View.interaction_check:6 of
msgid ""
"This is useful to override if, for example, you want to ensure that the "
"interaction author is a given user."
msgstr ""

#: disnake.ui.view.View.interaction_check:9 of
msgid "The default implementation of this returns ``True``."
msgstr ""

#: disnake.ui.view.View.interaction_check:13 of
msgid ""
"If an exception occurs within the body then the check is considered a "
"failure and :meth:`on_error` is called."
msgstr ""

#: disnake.ui.view.View.interaction_check:16 of
msgid "The interaction that occurred."
msgstr ""

#: disnake.ui.view.View.interaction_check:19 of
msgid "Whether the view children's callbacks should be called."
msgstr ""

#: disnake.ui.view.View.on_timeout:3 of
msgid ""
"A callback that is called when a view's timeout elapses without being "
"explicitly stopped."
msgstr ""

#: disnake.ui.view.View.on_error:3 of
msgid ""
"A callback that is called when an item's callback or "
":meth:`interaction_check` fails with an error."
msgstr ""

#: disnake.ui.view.View.on_error:6 of
msgid "The default implementation prints the traceback to stderr."
msgstr ""

#: disnake.ui.view.View.on_error:8 of
msgid "The exception that was raised."
msgstr ""

#: disnake.ui.view.View.on_error:10 of
msgid "The item that failed the dispatch."
msgstr ""

#: disnake.ui.view.View.on_error:12 of
msgid "The interaction that led to the failure."
msgstr ""

#: disnake.ui.view.View.stop:1 of
msgid "Stops listening to interaction events from this view."
msgstr ""

#: disnake.ui.view.View.stop:3 of
msgid "This operation cannot be undone."
msgstr ""

#: disnake.ui.view.View.is_finished:1 of
msgid ":class:`bool`: Whether the view has finished interacting."
msgstr ""

#: disnake.ui.view.View.is_dispatching:1 of
msgid ":class:`bool`: Whether the view has been added for dispatching purposes."
msgstr ""

#: disnake.ui.view.View.is_persistent:1 of
msgid ":class:`bool`: Whether the view is set up as persistent."
msgstr ""

#: disnake.ui.view.View.is_persistent:3 of
msgid ""
"A persistent view has all their components with a set ``custom_id`` and a"
" :attr:`timeout` set to ``None``."
msgstr ""

#: disnake.ui.view.View.wait:1 of
msgid "Waits until the view has finished interacting."
msgstr ""

#: disnake.ui.view.View.wait:3 of
msgid "A view is considered finished when :meth:`stop` is called or it times out."
msgstr ""

#: disnake.ui.view.View.wait:6 of
msgid ""
"If ``True``, then the view timed out. If ``False`` then the view finished"
" normally."
msgstr ""

#: ../../api.rst:4396
msgid "Item"
msgstr ""

#: disnake.ui.item.Item:1 of
msgid "Represents the base UI item that all UI components inherit from."
msgstr ""

#: disnake.ui.item.Item:3 of
msgid "The current UI items supported are:"
msgstr ""

#: disnake.ui.item.Item:5 of
msgid ":class:`disnake.ui.Button`"
msgstr ""

#: disnake.ui.item.Item:6 of
msgid ":class:`disnake.ui.Select`"
msgstr ""

#: disnake.ui.Button.view:1 disnake.ui.Item.view:1 disnake.ui.Select.view:1 of
msgid "The underlying view for this item."
msgstr ""

#: disnake.ui.Button.view:3 disnake.ui.Item.view:3 disnake.ui.Select.view:3 of
msgid "Optional[:class:`View`]"
msgstr ""

#: disnake.ui.item.Item.callback:3 of
msgid "The callback associated with this UI item."
msgstr ""

#: disnake.ui.item.Item.callback:5 of
msgid "This can be overriden by subclasses."
msgstr ""

#: disnake.ui.item.Item.callback:7 of
msgid "The interaction that triggered this UI item."
msgstr ""

#: disnake.ui.button.Button:1 of
msgid "Represents a UI button."
msgstr ""

#: disnake.ui.button.Button:18 disnake.ui.button.button:27 of
msgid ""
"The relative row this button belongs to. A Discord component can only "
"have 5 rows. By default, items are arranged automatically into those 5 "
"rows. If you'd like to control the relative positioning of the row then "
"passing an index is advised. For example, row=1 will show up before "
"row=2. Defaults to ``None``, which is automatic ordering. The row number "
"must be between 0 and 4 (i.e. zero indexed)."
msgstr ""

#: disnake.ui.Button.style:3 of
msgid ":class:`disnake.ButtonStyle`"
msgstr ""

#: disnake.ui.Button.custom_id:1 of
msgid "The ID of the button that gets received during an interaction."
msgstr ""

#: disnake.ui.Button.custom_id:3 of
msgid "If this button is for a URL, it does not have a custom ID."
msgstr ""

#: disnake.ui.Button.label:1 of
msgid "The label of the button, if available."
msgstr ""

#: disnake.ui.Button.emoji:3 of
msgid "Optional[:class:`.PartialEmoji`]"
msgstr ""

#: disnake.ui.button.button:1 of
msgid "A decorator that attaches a button to a component."
msgstr ""

#: disnake.ui.button.button:3 of
msgid ""
"The function being decorated should have three parameters, ``self`` "
"representing the :class:`disnake.ui.View`, the :class:`disnake.ui.Button`"
" being pressed and the :class:`disnake.MessageInteraction` you receive."
msgstr ""

#: disnake.ui.button.button:9 of
msgid ""
"Buttons with a URL cannot be created with this function. Consider "
"creating a :class:`Button` manually instead. This is because buttons with"
" a URL do not have a callback associated with them since Discord does not"
" do any processing with it."
msgstr ""

#: disnake.ui.button.button:17 of
msgid ""
"The ID of the button that gets received during an interaction. It is "
"recommended not to set this parameter to prevent conflicts."
msgstr ""

#: disnake.ui.button.button:20 of
msgid "The style of the button. Defaults to :attr:`.ButtonStyle.grey`."
msgstr ""

#: disnake.ui.button.button:22 of
msgid "Whether the button is disabled or not. Defaults to ``False``."
msgstr ""

#: disnake.ui.button.button:24 of
msgid ""
"The emoji of the button. This can be in string form or a "
":class:`.PartialEmoji` or a full :class:`.Emoji`."
msgstr ""

#: ../../api.rst:4415
msgid "Select"
msgstr ""

#: disnake.ui.select.Select:1 of
msgid "Represents a UI select menu."
msgstr ""

#: disnake.ui.select.Select:3 of
msgid "This is usually represented as a drop down menu."
msgstr ""

#: disnake.ui.select.Select:5 of
msgid ""
"In order to get the selected items that the user has chosen, use "
":attr:`Select.values`."
msgstr ""

#: disnake.ui.select.Select:9 of
msgid ""
"The ID of the select menu that gets received during an interaction. If "
"not given then one is generated for you."
msgstr ""

#: disnake.ui.select.Select:24 disnake.ui.select.select:15 of
msgid ""
"The relative row this select menu belongs to. A Discord component can "
"only have 5 rows. By default, items are arranged automatically into those"
" 5 rows. If you'd like to control the relative positioning of the row "
"then passing an index is advised. For example, row=1 will show up before "
"row=2. Defaults to ``None``, which is automatic ordering. The row number "
"must be between 0 and 4 (i.e. zero indexed)."
msgstr ""

#: disnake.ui.Select.min_values:1 of
msgid "The minimum number of items that must be chosen for this select menu."
msgstr ""

#: disnake.ui.Select.max_values:1 of
msgid "The maximum number of items that must be chosen for this select menu."
msgstr ""

#: disnake.ui.Select.options:3 of
msgid "List[:class:`disnake.SelectOption`]"
msgstr ""

#: disnake.ui.select.Select.add_option:1 of
msgid "Adds an option to the select menu."
msgstr ""

#: disnake.ui.select.Select.add_option:3 of
msgid ""
"To append a pre-existing :class:`disnake.SelectOption` use the "
":meth:`append_option` method instead."
msgstr ""

#: disnake.ui.select.Select.add_option:9 of
msgid ""
"The value of the option. This is not displayed to users. If not given, "
"defaults to the label. Can only be up to 100 characters."
msgstr ""

#: disnake.ui.select.Select.add_option:15 of
msgid ""
"The emoji of the option, if available. This can either be a string "
"representing the custom or unicode emoji or an instance of "
":class:`.PartialEmoji` or :class:`.Emoji`."
msgstr ""

#: disnake.ui.select.Select.add_option:21
#: disnake.ui.select.Select.append_option:6 of
msgid "The number of options exceeds 25."
msgstr ""

#: disnake.ui.select.Select.append_option:1 of
msgid "Appends an option to the select menu."
msgstr ""

#: disnake.ui.select.Select.append_option:3 of
msgid "The option to append to the select menu."
msgstr ""

#: disnake.ui.Select.values:1 of
msgid "A list of values that have been selected by the user."
msgstr ""

#: disnake.ui.select.select:1 of
msgid "A decorator that attaches a select menu to a component."
msgstr ""

#: disnake.ui.select.select:3 of
msgid ""
"The function being decorated should have three parameters, ``self`` "
"representing the :class:`disnake.ui.View`, the :class:`disnake.ui.Select`"
" being pressed and the :class:`disnake.MessageInteraction` you receive."
msgstr ""

#: disnake.ui.select.select:7 of
msgid ""
"In order to get the selected items that the user has chosen within the "
"callback use :attr:`Select.values`."
msgstr ""

#: disnake.ui.select.select:12 of
msgid ""
"The ID of the select menu that gets received during an interaction. It is"
" recommended not to set this parameter to prevent conflicts."
msgstr ""

#: disnake.ui.select.select:29 of
msgid "Whether the select is disabled or not. Defaults to ``False``."
msgstr ""

#: ../../api.rst:4427
msgid "Exceptions"
msgstr ""

#: ../../api.rst:4429
msgid "The following exceptions are thrown by the library."
msgstr ""

#: disnake.errors.DiscordException:1 of
msgid "Base exception class for disnake"
msgstr ""

#: disnake.errors.DiscordException:3 of
msgid ""
"Ideally speaking, this could be caught to handle any exceptions raised "
"from this library."
msgstr ""

#: disnake.errors.ClientException:1 of
msgid "Exception that's raised when an operation in the :class:`Client` fails."
msgstr ""

#: disnake.errors.ClientException:3 of
msgid "These are usually for exceptions that happened due to user input."
msgstr ""

#: disnake.errors.LoginFailure:1 of
msgid ""
"Exception that's raised when the :meth:`Client.login` function fails to "
"log you in from improper credentials or some other misc. failure."
msgstr ""

#: disnake.errors.NoMoreItems:1 of
msgid ""
"Exception that is raised when an async iteration operation has no more "
"items."
msgstr ""

#: disnake.errors.HTTPException:1 of
msgid "Exception that's raised when an HTTP request operation fails."
msgstr ""

#: disnake.errors.HTTPException:5 of
msgid ""
"The response of the failed HTTP request. This is an instance of "
":class:`aiohttp.ClientResponse`. In some cases this could also be a "
":class:`requests.Response`."
msgstr ""

#: disnake.errors.HTTPException:9 of
msgid ":class:`aiohttp.ClientResponse`"
msgstr ""

#: disnake.errors.HTTPException:13 of
msgid "The text of the error. Could be an empty string."
msgstr ""

#: disnake.errors.HTTPException:19 of
msgid "The status code of the HTTP request."
msgstr ""

#: disnake.errors.HTTPException:25 of
msgid "The Discord specific error code for the failure."
msgstr ""

#: disnake.errors.Forbidden:1 of
msgid "Exception that's raised for when status code 403 occurs."
msgstr ""

#: disnake.errors.Forbidden:3 disnake.errors.NotFound:3 of
msgid "Subclass of :exc:`HTTPException`"
msgstr ""

#: disnake.errors.NotFound:1 of
msgid "Exception that's raised for when status code 404 occurs."
msgstr ""

#: disnake.errors.DiscordServerError:1 of
msgid "Exception that's raised for when a 500 range status code occurs."
msgstr ""

#: disnake.errors.DiscordServerError:3 of
msgid "Subclass of :exc:`HTTPException`."
msgstr ""

#: disnake.errors.InvalidData:1 of
msgid ""
"Exception that's raised when the library encounters unknown or invalid "
"data from Discord."
msgstr ""

#: disnake.errors.InvalidArgument:1 of
msgid ""
"Exception that's raised when an argument to a function is invalid some "
"way (e.g. wrong value or wrong type)."
msgstr ""

#: disnake.errors.InvalidArgument:4 of
msgid ""
"This could be considered the analogous of ``ValueError`` and "
"``TypeError`` except inherited from :exc:`ClientException` and thus "
":exc:`DiscordException`."
msgstr ""

#: disnake.errors.GatewayNotFound:1 of
msgid ""
"An exception that is raised when the gateway for Discord could not be "
"found"
msgstr ""

#: disnake.errors.ConnectionClosed:1 of
msgid ""
"Exception that's raised when the gateway connection is closed for reasons"
" that could not be handled internally."
msgstr ""

#: disnake.errors.ConnectionClosed:6 of
msgid "The close code of the websocket."
msgstr ""

#: disnake.errors.ConnectionClosed:12 of
msgid "The reason provided for the closure."
msgstr ""

#: disnake.errors.ConnectionClosed:18
#: disnake.errors.PrivilegedIntentsRequired:12 of
msgid "The shard ID that got closed if applicable."
msgstr ""

#: disnake.errors.PrivilegedIntentsRequired:1 of
msgid ""
"Exception that's raised when the gateway is requesting privileged intents"
" but they're not ticked in the developer page yet."
msgstr ""

#: disnake.errors.PrivilegedIntentsRequired:4 of
msgid ""
"Go to https://discord.com/developers/applications/ and enable the intents"
" that are required. Currently these are as follows:"
msgstr ""

#: disnake.errors.PrivilegedIntentsRequired:7 of
msgid ":attr:`Intents.members`"
msgstr ""

#: disnake.errors.PrivilegedIntentsRequired:8 of
msgid ":attr:`Intents.presences`"
msgstr ""

#: disnake.errors.InteractionException:1 of
msgid "Exception that's raised when an interaction operation fails"
msgstr ""

#: disnake.errors.InteractionException:7 disnake.errors.InteractionTimedOut:8
#: of
msgid "The interaction that was responded to"
msgstr ""

#: disnake.errors.InteractionException:9
#: disnake.errors.InteractionNotResponded:12
#: disnake.errors.InteractionResponded:12 disnake.errors.InteractionTimedOut:10
#: of
msgid ":class:`Interaction`"
msgstr ""

#: disnake.errors.InteractionResponded:1 of
msgid ""
"Exception that's raised when sending another interaction response using "
":class:`InteractionResponse` when one has already been done before."
msgstr ""

#: disnake.errors.InteractionNotResponded:4
#: disnake.errors.InteractionResponded:4 of
msgid "An interaction can only respond once."
msgstr ""

#: disnake.errors.InteractionNotResponded:10
#: disnake.errors.InteractionResponded:10 of
msgid "The interaction that's already been responded to."
msgstr ""

#: disnake.errors.InteractionNotResponded:1 of
msgid ""
"Exception that's raised when editing an interaction response without "
"sending a response message first."
msgstr ""

#: disnake.errors.InteractionTimedOut:1 of
msgid ""
"Exception that's raised when an interaction takes more than 3 seconds to "
"respond but is not deffered."
msgstr ""

#: disnake.opus.OpusError:1 of
msgid "An exception that is thrown for libopus related errors."
msgstr ""

#: disnake.opus.OpusError:5 of
msgid "The error code returned."
msgstr ""

#: disnake.opus.OpusNotLoaded:1 of
msgid "An exception that is thrown for when libopus is not loaded."
msgstr ""

#: ../../api.rst:4471
msgid "Exception Hierarchy"
msgstr ""

#: ../../api.rst:4491
msgid ":exc:`Exception`"
msgstr ""

#: ../../api.rst:4491
msgid ":exc:`DiscordException`"
msgstr ""

#: ../../api.rst:4485
msgid ":exc:`ClientException`"
msgstr ""

#: ../../api.rst:4478
msgid ":exc:`InvalidData`"
msgstr ""

#: ../../api.rst:4479
msgid ":exc:`InvalidArgument`"
msgstr ""

#: ../../api.rst:4480
msgid ":exc:`LoginFailure`"
msgstr ""

#: ../../api.rst:4481
msgid ":exc:`ConnectionClosed`"
msgstr ""

#: ../../api.rst:4482
msgid ":exc:`PrivilegedIntentsRequired`"
msgstr ""

#: ../../api.rst:4485
msgid ":exc:`InteractionException`"
msgstr ""

#: ../../api.rst:4484
msgid ":exc:`InteractionResponded`"
msgstr ""

#: ../../api.rst:4485
msgid ":exc:`InteractionNotResponded`"
msgstr ""

#: ../../api.rst:4486
msgid ":exc:`InteractionTimedOut`"
msgstr ""

#: ../../api.rst:4487
msgid ":exc:`NoMoreItems`"
msgstr ""

#: ../../api.rst:4488
msgid ":exc:`GatewayNotFound`"
msgstr ""

#: ../../api.rst:4491
msgid ":exc:`HTTPException`"
msgstr ""

#: ../../api.rst:4490
msgid ":exc:`Forbidden`"
msgstr ""

#: ../../api.rst:4491
msgid ":exc:`NotFound`"
msgstr ""

#: ../../api.rst:4492
msgid ":exc:`DiscordServerError`"
msgstr ""

